"use strict";(self.webpackChunkangular_18_test=self.webpackChunkangular_18_test||[]).push([[9063],{23506:(f,o,e)=>{e.d(o,{v:()=>r});var _=e(99305);function r(u){u?.writtenProperties&&u.writtenProperties.forEach(({target:n,propName:s,newOrigin:l})=>{(0,_.H)(n)&&l&&n.originOf(s)!==l&&n.updateOrigin(s,l)})}},99305:(f,o,e)=>{function _(r){return r&&"getAtOrigin"in r&&"originOf"in r}e.d(o,{H:()=>_})},96904:(f,o,e)=>{e.d(o,{X:()=>n});var _=e(23098),r=e(5922),u=e(2174);function n(s){if(_.A.apiKey&&(0,u.Q)(s.portal.url))throw new r.A("save-api-key-utils:api-key-not-supported",`Saving is not supported on ${s.portal.url} when using an api key`)}},95945:(f,o,e)=>{e.d(o,{c:()=>l,d:()=>u});var _=e(10467),r=e(5922);function u(i){return n.apply(this,arguments)}function n(){return(n=(0,_.A)(function*(i){const d=[];for(const p of i.allLayers)if("beforeSave"in p&&"function"==typeof p.beforeSave){const t=p.beforeSave();t&&d.push(t)}yield Promise.allSettled(d)})).apply(this,arguments)}const s=new Set(["layer:unsupported","property:unsupported","symbol:unsupported","symbol-layer:unsupported","url:unsupported"]);function l(i,d,p){let t=(i.messages??[]).filter(({type:a})=>"error"===a).map(({name:a,message:m,details:E})=>new r.A(a,m,E));if(i.blockedRelativeUrls&&(t=t.concat(i.blockedRelativeUrls.map(a=>new r.A("url:unsupported",`Relative url '${a}' is not supported`)))),p){const{ignoreUnsupported:a,supplementalUnsupportedErrors:m=[],requiredPropertyChecksDisabled:E}=p;a&&(t=t.filter(({name:c})=>!(s.has(c)||m.includes(c)))),E&&(t=t.filter(c=>"web-document-write:property-required"!==c.name))}if(t.length>0)throw new r.A(d.errorName,"Failed to save due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:t})}}}]);