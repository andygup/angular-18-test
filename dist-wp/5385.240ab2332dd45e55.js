"use strict";(self.webpackChunkangular_18_test=self.webpackChunkangular_18_test||[]).push([[5385],{65385:(P,i,e)=>{e.r(i),e.d(i,{getGeometryServiceURL:()=>g,projectGeometry:()=>f});var u=e(10467),c=e(23098),s=e(5922),m=e(73874),y=e(66456),E=e(77436);function g(){return a.apply(this,arguments)}function a(){return(a=(0,u.A)(function*(r=null,_){if(c.A.geometryServiceUrl)return c.A.geometryServiceUrl;if(!r)throw new s.A("internal:geometry-service-url-not-configured");let t;t="portal"in r?r.portal||m.A.getDefault():r,yield t.load({signal:_});const n=t.helperServices?.geometry?.url;if(!n)throw new s.A("internal:geometry-service-url-not-configured");return n})).apply(this,arguments)}function f(r,_){return l.apply(this,arguments)}function l(){return(l=(0,u.A)(function*(r,_,t=null,n){const A=yield g(t,n),v=new E.A({geometries:[r],outSpatialReference:_}),o=yield(0,y.C)(A,v,{signal:n});if(o&&Array.isArray(o)&&1===o.length)return o[0];throw new s.A("internal:geometry-service-projection-failed")})).apply(this,arguments)}}}]);