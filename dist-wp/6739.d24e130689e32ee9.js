"use strict";(self.webpackChunkangular_18_test=self.webpackChunkangular_18_test||[]).push([[6739],{36739:(On,et,v)=>{v.r(et),v.d(et,{default:()=>Pn});var M=v(10467),R=v(8189),pt=v(92165),yt=v(90660),J=v(5922),ue=v(35150),gt=v(39693),xe=v(56492),xt=v(48900),w=v(85211),Te=v(55739),vt=(v(40707),v(3248)),It=v(15463),q=v(76576),Rt=v(95478),St=v(25936),bt=v(93410),wt=v(23e3),Be=(v(21152),v(75257)),tt=v(89563),At=v(23159),Tt=v(17221),nt=v(58701),rt=v(68438),Ee=v(22329),ke=v(52593),Mt=v(70489),Le=v(49343),Ft=v(85889),oe=v(11333),Pt=v(55861),Ct=v(71065),Ot=v(64261),Nt=v(29598),Me=v(61599),X=v(20053),le=v(62619),it=v(96115),st=v(99263),re=v(40275),E=v(40018),He=v(50444),Dt=v(56330),G=v(28067),W=v(1749),U=v(32034);let Bt=0,Z=class extends((0,Ot.g)(Ct.oY)){constructor(){super(...arguments),this._tileFetchQueue=new Dt.e({concurrency:32,process:(n,e)=>this._fetchRawTile(n.pyramidLevel,n.row,n.col,{...n.options,signal:e})}),this.datasetName=null,this.datasetFormat=null,this.hasUniqueSourceStorageInfo=!0,this.rasterInfo=null,this.ioConfig={sampling:"closest"}}init(){var n=this;return(0,M.A)(function*(){const e=(0,E.Hh)();n.addResolvingPromise(e),yield n.when()})()}normalizeCtorArgs(n){return n?.ioConfig&&(n={...n,ioConfig:{resolution:null,bandIds:null,sampling:"closest",tileInfo:oe.A.create(),...n.ioConfig}}),n}get _isGlobalWrappableSource(){const{rasterInfo:n}=this,e=(0,E.FT)(n.spatialReference);return null!=e&&n.extent.width>=e/2}get _hasNoneOrGCSShiftTransform(){const{transform:n}=this.rasterInfo;return null==n||"gcs-shift"===n.type}set rasterJobHandler(n){this._set("rasterJobHandler",n),"Function"===this.datasetFormat&&this.primaryRasters?.rasters?.forEach(e=>e.rasterJobHandler=n)}get rasterId(){return this.url||"rasterId-"+Bt++}set url(n){this._set("url",(0,rt.Jf)(n,ue.A.getLogger(this)))}open(n){return(0,M.A)(function*(){throw new J.A("BaseRaster:open-not-implemented","open() is not implemented")})()}fetchTile(n,e,i,t={}){var r=this;return(0,M.A)(function*(){const a=t.tileInfo||r.rasterInfo.storageInfo.tileInfo,s=r.getTileExtentFromTileInfo(n,e,i,a);return t={noClip:!0,...t},r.fetchPixels(s,a.size[0],a.size[1],t)})()}identify(n,e={}){var i=this;return(0,M.A)(function*(){n=(0,Te.PZ)(W.A,n).clone().normalize();const{multidimensionalDefinition:t,timeExtent:r}=e,{rasterInfo:a}=i,{hasMultidimensionalTranspose:s,multidimensionalInfo:o}=a;let{transposedVariableName:l}=e;const c=null!=o&&s&&(null!=r||(0,X.DY)(t));c&&!l&&(l=null!=t&&t.length>0?t[0].variableName??void 0:o.variables[0].name,e={...e,transposedVariableName:l}),e=i._getRequestOptionsWithSliceId(e);const{spatialReference:f,extent:u}=a,{datumTransformation:d}=e;let m=(0,E._I)(n,f,d);if(!u.intersects(m))return{location:m,value:null};if(null!=a.transform){const C=a.transform.inverseTransform(m);if(!a.nativeExtent.intersects(C))return{location:C,value:null};m=C}let y=0;const x=null!=l&&null!=o&&a.hasMultidimensionalTranspose;if("Function"===i.datasetFormat){const C=i.primaryRasters.rasters[0];if(x)return C.identify(m,e);const{pixelSize:N}=a,B=3,k=N.x*B/2,L=N.y*B/2,z=new G.A({xmin:m.x-k,xmax:m.x+k,ymin:m.y-L,ymax:m.y+L,spatialReference:f}),te={interpolation:"nearest",multidimensionalDefinition:t,sliceId:e.sliceId},{pixelBlock:ne}=yield C.fetchPixels(z,B,B,te),{pixelBlock:V}=yield i.fetchPixels(z,B,B,te);if(null==ne)return{location:m,value:null};const $=Math.floor(B*B*.5),se=!ne.mask||ne.mask[$]?ne.pixels.map(_=>_[$]):null;let ge;return null!=V&&(ge=!V.mask||V.mask[$]?V.pixels.map(_=>_[$]):void 0),{location:m,value:se,processedValue:ge,pyramidLevel:0}}if(!x)if(e.srcResolution)y=(0,E.t$)(e.srcResolution,a,i.ioConfig.sampling).pyramidLevel;else if(y=yield i.computeBestPyramidLevelForLocation(n,e),null==y)return{location:m,value:null};const p=i.identifyPixelLocation(m,y,null,x);if(null===p)return{location:m,value:null};const{row:h,col:g,rowOffset:S,colOffset:I,blockWidth:b}=p,P=(0,le.ph)(i.rasterId,l??e.sliceId),A=`${y}/${h}/${g}`;let F=(0,le.gd)(P,null,A);null==F&&(F=i.fetchRawTile(y,h,g,e),(0,le.no)(P,null,A,F));const O=yield F;return O?.pixels?.length?i._processIdentifyResult(O,{srcLocation:m,position:S*b+I,pyramidLevel:y,useTransposedTile:!!x,requestSomeSlices:c,identifyOptions:e}):{location:m,value:null}})()}fetchPixels(n,e,i,t={}){var r=this;return(0,M.A)(function*(){n=(0,E.Ps)(n),t=r._getRequestOptionsWithSliceId(t);const{_hasNoneOrGCSShiftTransform:a}=r;if(t.requestRawData&&a)return r._fetchPixels(n,e,i,t);const s=(0,E.FT)(n.spatialReference),o=(0,E.OM)(n);if(null==s||0===o||1===o&&r._isGlobalWrappableSource&&a)return r._fetchPixels(n,e,i,t);if(o>=3)return{extent:n,pixelBlock:null};const l=[],{xmin:c,xmax:f}=n,u=Math.round(s/(f-c)*e),d=u-Math.round((s/2-c)/(f-c)*e);let m=0;const y=[];for(let g=0;g<=o;g++){const S=new G.A({xmin:0===g?c:-s/2,xmax:g===o?f-s*g:s/2,ymin:n.ymin,ymax:n.ymax,spatialReference:n.spatialReference}),I=0===g?u-d:g===o?e-m:u;m+=I,y.push(I);const b=t.disableWrapAround&&g>0?null:r._fetchPixels(S,I,i,t);l.push(b)}const x=(yield Promise.all(l)).map(g=>g?.pixelBlock);let p=null;const h={width:e,height:i};return p=r.rasterJobHandler?(yield r.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:x,srcMosaicSize:h,destDimension:null,coefs:null,sampleSpacing:null,interpolation:"nearest",alignmentInfo:null,blockWidths:y},t)).pixelBlock:(0,re.z7)(x,h,{blockWidths:y}),{extent:n,srcExtent:(0,E._l)(n,r.rasterInfo.spatialReference,t.datumTransformation),pixelBlock:p}})()}fetchRawPixels(n,e,i,t={}){var r=this;return(0,M.A)(function*(){e={x:Math.floor(e.x),y:Math.floor(e.y)};const a=yield r._fetchRawTiles(n,e,i,t),{nativeExtent:s,nativePixelSize:o,storageInfo:l}=r.rasterInfo,c=2**n,f=o.x*c,u=o.y*c,d=new G.A({xmin:s.xmin+f*e.x,xmax:s.xmin+f*(e.x+i.width-1),ymin:s.ymax-u*(e.y+i.height-1),ymax:s.ymax-u*e.y,spatialReference:s.spatialReference});if(!a)return{extent:d,srcExtent:d,pixelBlock:null};const{pixelBlocks:m,mosaicSize:y}=a;if(1===m.length&&null!=m[0]&&m[0].width===i.width&&m[0].height===i.height)return{extent:d,srcExtent:d,pixelBlock:a.pixelBlocks[0]};const h={x:e.x%(n>0?l.pyramidBlockWidth:l.blockWidth),y:e.y%(n>0?l.pyramidBlockHeight:l.blockHeight)};let g;return g=r.rasterJobHandler?(yield r.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:m,srcMosaicSize:y,destDimension:i,clipOffset:h,clipSize:i,coefs:null,sampleSpacing:null,interpolation:t.interpolation,alignmentInfo:null,blockWidths:null},t)).pixelBlock:(0,re.z7)(m,y,{clipOffset:h,clipSize:i}),{extent:d,srcExtent:d,pixelBlock:g}})()}fetchRawTile(n,e,i,t){throw new J.A("BaseRaster:read-not-implemented","fetchRawTile() is not implemented")}computeExtent(n){return(0,E._l)(this.rasterInfo.extent,n)}decodePixelBlock(n,e){return!this.rasterJobHandler||e.useCanvas?(0,st.D)(n,e):this.rasterJobHandler.decode({data:n,options:e})}request(n,e,i=0){var t=this;return(0,M.A)(function*(){const{customFetchParameters:r}=t.ioConfig,{range:a,query:s,headers:o}=e;i=i??e.retryCount??t.ioConfig.retryCount;const l=a?{Range:`bytes=${a.from}-${a.to}`}:null;try{return yield(0,tt.A)(n,{...e,query:{...s,...r},headers:{...o,...l}})}catch(c){if(i>0)return i--,t.request(n,e,i);throw c}})()}getSliceIndex(n){const{multidimensionalInfo:e}=this.rasterInfo;return null==e||null==n||0===n.length?null:(0,X.NG)(n,e)}getTileExtentFromTileInfo(n,e,i,t){const r=t.lodAt(n);return this.getTileExtent({x:r.resolution,y:r.resolution},e,i,t.origin,t.spatialReference,t.size)}updateTileInfo(){const{storageInfo:n,spatialReference:e,extent:i,pixelSize:t}=this.rasterInfo,{pyramidResolutions:r}=n;if(!n.tileInfo){const a=[],s=n.maximumPyramidLevel||0;let o=(t.x+t.y)/2,l=1/.0254*96*o;for(let f=0;f<=s&&(a.unshift(new Nt.A({level:s-f,resolution:o,scale:l})),f!==s);f++)if(r){const u=(r[f].x+r[f].y)/2;l*=u/o,o=u}else o*=2,l*=2;const c=new W.A({x:i.xmin,y:i.ymax,spatialReference:e});n.tileInfo=new oe.A({origin:c,size:[n.blockWidth,n.blockHeight],spatialReference:e,lods:a}),n.isVirtualTileInfo=!0}}createRemoteDatasetStorageInfo(n,e=512,i=512,t){const{width:r,height:a,nativeExtent:s,pixelSize:o,spatialReference:l}=n,c=new W.A({x:s.xmin,y:s.ymax,spatialReference:l});null==t&&(t=Math.max(0,Math.round(Math.log(Math.max(r,a))/Math.LN2-8)));const f=this.computeBlockBoundary(s,512,512,{x:s.xmin,y:s.ymax},[o],t);n.storageInfo=new Me.A({blockWidth:e,blockHeight:i,pyramidBlockWidth:e,pyramidBlockHeight:i,origin:c,firstPyramidLevel:1,maximumPyramidLevel:t,blockBoundary:f})}computeBestPyramidLevelForLocation(n,e={}){return(0,M.A)(function*(){return 0})()}computeBlockBoundary(n,e,i,t,r,a=0,s=2){if(1===r.length&&a>0){r=[...r];let{x:f,y:u}=r[0];for(let d=0;d<a;d++)f*=s,u*=s,r.push({x:f,y:u})}const o=[],{x:l,y:c}=t;for(let f=0;f<r.length;f++){const{x:u,y:d}=r[f];o.push({minCol:Math.floor((n.xmin-l+.1*u)/e/u),maxCol:Math.floor((n.xmax-l-.1*u)/e/u),minRow:Math.floor((c-n.ymax+.1*d)/i/d),maxRow:Math.floor((c-n.ymin-.1*d)/i/d)})}return o}getPyramidPixelSize(n){const{nativePixelSize:e}=this.rasterInfo,{pyramidResolutions:i,pyramidScalingFactor:t}=this.rasterInfo.storageInfo;if(0===n)return e;if(null!=i&&i.length)return i[n-1];const r=t**n;return{x:e.x*r,y:e.y*r}}identifyPixelLocation(n,e,i,t){const{spatialReference:r,nativeExtent:a,storageInfo:s}=this.rasterInfo,{maximumPyramidLevel:o,origin:l,transposeInfo:c}=s,f=t&&null!=c?c.tileSize[0]:s.blockWidth,u=t&&null!=c?c.tileSize[1]:s.blockHeight,d=(0,E._I)(n,r,i);if(!a.intersects(d)||e<0||e>o)return null;const m=this.getPyramidPixelSize(e),{x:y,y:x}=m,p=(l.y-d.y)/x/u,h=(d.x-l.x)/y/f,g=Math.min(u-1,Math.floor((p-Math.floor(p))*u)),S=Math.min(f-1,Math.floor((h-Math.floor(h))*f));return{pyramidLevel:e,row:Math.floor(p),col:Math.floor(h),rowOffset:g,colOffset:S,blockWidth:f,srcLocation:d}}getTileExtent(n,e,i,t,r,a){const[s,o]=a,l=t.x+i*s*n.x,f=t.y-e*o*n.y;return new G.A({xmin:l,xmax:l+s*n.x,ymin:f-o*n.y,ymax:f,spatialReference:r})}getBlockWidthHeight(n){return{blockWidth:n>0?this.rasterInfo.storageInfo.pyramidBlockWidth:this.rasterInfo.storageInfo.blockWidth,blockHeight:n>0?this.rasterInfo.storageInfo.pyramidBlockHeight:this.rasterInfo.storageInfo.blockHeight}}isBlockOutside(n,e,i){const t=this.rasterInfo.storageInfo.blockBoundary[n];return!t||t.maxRow<e||t.maxCol<i||t.minRow>e||t.minCol>i}updateImageSpaceRasterInfo(n){const{extent:e,pixelSize:i}=n;if(-.5===e.xmin&&.5===e.ymax&&1===i.x&&1===i.y&&null==n.transform)return;const{width:t,height:r}=n,a=U.A.WebMercator;n.spatialReference=a,n.extent=n.nativeExtent=new G.A({xmin:-.5,ymax:.5,xmax:t-.5,ymin:.5-r,spatialReference:a}),n.isPseudoSpatialReference=!0,n.transform=null,n.pixelSize=new W.A({x:1,y:1,spatialReference:a});const{extent:s,storageInfo:o}=n;if(o){o.origin=new W.A({x:s.xmin,y:s.ymax,spatialReference:a});const{pyramidResolutions:l,tileInfo:c}=o;if(l&&l.forEach(f=>{f.x/=i.x,f.y/=i.y}),c){c.origin=o.origin;const f=(n.nativePixelSize.x+n.nativePixelSize.y)/2;c.lods.forEach((u,d)=>{u.resolution=f*2**d,u.scale=96*u.resolution/.0254})}}}_fetchPixels(n,e,i,t={}){var r=this;return(0,M.A)(function*(){let a=(0,E.OM)(n);if(a>=2)return{extent:n,pixelBlock:null};const s=r._getSourceDataInfo(n,e,i,t),{pyramidLevel:o,srcResolution:l,srcExtent:c,srcWidth:f,srcHeight:u,ul:d}=s;if(0===f||0===u)return{extent:n,srcExtent:c,pixelBlock:null};const{rasterInfo:m}=r,y=m.transform,x="gcs-shift"===y?.type,p=null!=(0,E.FT)(n.spatialReference);!x&&p||(a=(0,E.OM)(s.srcExtent,x));const h=yield r._fetchRawTiles(o,d,{width:f,height:u,wrapCount:a},t);if(!h)return{extent:n,srcExtent:c,pixelBlock:null};const g=m.storageInfo,S=o>0?g.pyramidBlockWidth:g.blockWidth,I=o>0?g.pyramidBlockHeight:g.blockHeight;let{x:b,y:T}=m.pixelSize;if(o>0){const{pyramidResolutions:ae,pyramidScalingFactor:Cn}=g;if(null!=ae&&ae[o-1])({x:b,y:T}=ae[o-1]);else{const ht=Cn**o;b*=ht,T*=ht}}const P=m.spatialReference,A=new W.A({x:b,y:T,spatialReference:P}),F=S===f&&I===u&&d.x%S==0&&d.y%I==0,O=new W.A({x:(n.xmax-n.xmin)/e,y:(n.ymax-n.ymin)/i,spatialReference:n.spatialReference}),D=!n.spatialReference.equals(P),C=P.isGeographic?1e-9:1e-4,{datumTransformation:N}=t;if(!D&&F&&1===h.pixelBlocks.length&&S===e&&I===i&&function Et(n,e,i){return Math.abs(n.x-e.x)<i&&Math.abs(n.y-e.y)<i}(l,O,C))return{extent:n,srcExtent:c,srcTilePixelSize:A,pixelBlock:h.pixelBlocks[0]};const B=p&&null!=(0,E.FT)(c.spatialReference)&&r._hasNoneOrGCSShiftTransform,k=t.requestProjectedLocalDirections&&r.rasterInfo.dataType.startsWith("vector");k&&!r.rasterJobHandler&&(yield(0,E.Hh)());const L=r.rasterJobHandler?yield r.rasterJobHandler.getProjectionOffsetGrid({projectedExtent:n,srcBufferExtent:h.extent,pixelSize:O.toJSON(),datumTransformation:N,rasterTransform:y,hasWrapAround:a>0||B,isAdaptive:!1!==r.ioConfig.optimizeProjectionAccuracy,includeGCSGrid:k},t):(0,E.l0)({projectedExtent:n,srcBufferExtent:h.extent,pixelSize:O,datumTransformation:N,rasterTransform:y,hasWrapAround:a>0||B,isAdaptive:!1,includeGCSGrid:k});let z;const te=!t.requestRawData,ne={rows:L.spacing[0],cols:L.spacing[1]},V=r._hasNoneOrGCSShiftTransform?r._getRasterTileAlignmentInfo(o,h.extent.xmin):void 0,{pixelBlocks:$,mosaicSize:se,isPartiallyFilled:ge}=h;let _=null;if(r.rasterJobHandler)({pixelBlock:z,localNorthDirections:_}=yield r.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:$,srcMosaicSize:se,destDimension:te?{width:e,height:i}:null,coefs:te?L.coefficients:null,sampleSpacing:te?ne:null,projectDirections:k,gcsGrid:k?L.gcsGrid:null,isUV:"vector-uv"===r.rasterInfo.dataType,interpolation:t.interpolation,alignmentInfo:V,blockWidths:null},t));else{const ae=(0,re.z7)($,se,{alignmentInfo:V});z=te?(0,re.$i)(ae,{width:e,height:i},L.coefficients,ne,t.interpolation):ae,k&&L.gcsGrid&&(_=(0,re.QF)({width:e,height:i},L.gcsGrid),z=(0,He.Y2)(z,r.rasterInfo.dataType,_))}return t.requestRawData||k?{extent:n,srcExtent:c,srcTilePixelSize:A,pixelBlock:z,transformGrid:L,localNorthDirections:_,isPartiallyFilled:ge}:{extent:n,srcExtent:c,srcTilePixelSize:A,pixelBlock:z}})()}_fetchRawTiles(n,e,i,t){var r=this;return(0,M.A)(function*(){const{origin:a,blockBoundary:s}=r.rasterInfo.storageInfo,{blockWidth:o,blockHeight:l}=r.getBlockWidthHeight(n);let{x:c,y:f}=e,{width:u,height:d,wrapCount:m}=i;const y=r._getRasterTileAlignmentInfo(n,0);t.buffer&&(c-=t.buffer.cols,f-=t.buffer.rows,u+=2*t.buffer.cols,d+=2*t.buffer.rows);let x=0,p=0,h=0;m&&null!=y&&(({worldColumnCountFromOrigin:p,originColumnOffset:h,rightPadding:x}=y),p*y.blockWidth-x>=c+u&&(x=0));const g=Math.floor(c/o),S=Math.floor(f/l),I=Math.floor((c+u+x-1)/o),b=Math.floor((f+d+x-1)/l),T=s[n];if(!T)return null;const{minRow:P,minCol:A,maxCol:F,maxRow:O}=T;if(0===m&&(b<P||I<A||S>O||g>F))return null;const D=new Array;let C=!1;const N=null==r.ioConfig.allowPartialFill?t.allowPartialFill:r.ioConfig.allowPartialFill;for(let V=S;V<=b;V++)for(let $=g;$<=I;$++){let se=$;if(!t.disableWrapAround&&m&&null!=y&&p<=$&&(se=$-p-h),V>=P&&se>=A&&O>=V&&F>=se){const ge=r._tileFetchQueue.push({pyramidLevel:n,row:V,col:se,options:t},{signal:t.signal});D.push(N?new Promise(_=>{ge.then(ae=>_(ae)).catch(()=>{C=!0,_(null)})}):ge)}else D.push(Promise.resolve(null))}if(0===D.length)return null;const B=yield Promise.all(D),k={height:(b-S+1)*l,width:(I-g+1)*o},{spatialReference:L}=r.rasterInfo,z=r.getPyramidPixelSize(n),{x:te,y:ne}=z;return{extent:new G.A({xmin:a.x+g*o*te,xmax:a.x+(I+1)*o*te,ymin:a.y-(b+1)*l*ne,ymax:a.y-S*l*ne,spatialReference:L}),pixelBlocks:B,mosaicSize:k,isPartiallyFilled:C}})()}_fetchRawTile(n,e,i,t){const r=this.rasterInfo.storageInfo.blockBoundary[n];if(!r)return Promise.resolve(null);const{minRow:a,minCol:s,maxCol:o,maxRow:l}=r;if(e<a||i<s||e>l||i>o)return Promise.resolve(null);const c=(0,le.ph)(this.rasterId,t.sliceId),f=`${n}/${e}/${i}`;let u=(0,le.gd)(c,t.registryId,f);if(null==u){const d=new AbortController;u=this.fetchRawTile(n,e,i,{...t,signal:d.signal}),(0,le.no)(c,t.registryId,f,u,d),u.catch(()=>(0,le.zo)(c,t.registryId,f))}return t.signal&&(0,xe.u7)(t,()=>{(0,le.jX)(c,t.registryId,f)}),u}_computeMagDirValues(n){const{bandCount:e,dataType:i}=this.rasterInfo;if((2!==e||"vector-magdir"!==i)&&"vector-uv"!==i||2!==n?.length||!n[0]?.length)return null;const t=n[0].length;if("vector-magdir"===i){const l=n[1].map(c=>(c+360)%360);return[n[0],l]}const[r,a]=n,s=[],o=[];for(let l=0;l<t;l++){const[c,f]=(0,He.Lu)([r[l],a[l]]);s.push(c),o.push(f)}return[s,o]}_getRasterTileAlignmentInfo(n,e){return null==this._rasterTileAlignmentInfo&&(this._rasterTileAlignmentInfo=(0,E.DO)(this.rasterInfo)),null==this._rasterTileAlignmentInfo.pyramidsInfo?null:{startX:e,halfWorldWidth:this._rasterTileAlignmentInfo.halfWorldWidth,hasGCSSShiftTransform:this._rasterTileAlignmentInfo.hasGCSSShiftTransform,...this._rasterTileAlignmentInfo.pyramidsInfo[n]}}_getSourceDataInfo(n,e,i,t={}){const r={datumTransformation:t.datumTransformation,pyramidLevel:0,pyramidResolution:null,srcExtent:null,srcHeight:0,srcResolution:null,srcWidth:0,ul:{x:0,y:0}};t.srcResolution&&(r.srcResolution=t.srcResolution,this._updateSourceDataInfo(n,r));const a=this.rasterInfo.storageInfo.maximumPyramidLevel||0,{srcWidth:s,srcHeight:o,pyramidLevel:l}=r,c=s/e,f=o/i,u=l<a&&c*f>=16,d=l===a&&this._requireTooManySrcTiles(s,o,e,i);if(u||d||0===s||0===o){const m=new W.A({x:(n.xmax-n.xmin)/e,y:(n.ymax-n.ymin)/i,spatialReference:n.spatialReference});let y=(0,E.Wo)(m,this.rasterInfo.spatialReference,n,r.datumTransformation);if(u&&t.srcResolution&&(!y||t.srcResolution&&y.x+y.y<t.srcResolution.x+t.srcResolution.y)){const p=Math.round(Math.log(Math.max(c,f))/Math.LN2)-1;if(a-l+3>=p){const h=2**p;y={x:t.srcResolution.x*h,y:t.srcResolution.y*h}}}y&&(r.srcResolution=y,this._updateSourceDataInfo(n,r))}return this._requireTooManySrcTiles(r.srcWidth,r.srcHeight,e,i)&&(r.srcWidth=0,r.srcHeight=0),r}_requireTooManySrcTiles(n,e,i,t){const{tileInfo:r}=this.rasterInfo.storageInfo,s=n/i,o=e/t;return Math.ceil(n/r.size[0])*Math.ceil(e/r.size[1])>=256*Math.max(1,(i+t)/1024)||s>8||o>8}_updateSourceDataInfo(n,e){e.srcWidth=0,e.srcHeight=0;const{rasterInfo:i}=this,t=i.spatialReference,{srcResolution:r,datumTransformation:a}=e,{pyramidLevel:s,pyramidResolution:o,excessiveReading:l}=(0,E.t$)(r,i,this.ioConfig.sampling);if(l)return;let c=e.srcExtent||(0,E._l)(n,t,a);if(null==c)return;const f=i.transform;f&&(c=f.inverseTransform(c)),e.srcExtent=c;const{x:u,y:d}=i.storageInfo.origin,m=Math.floor((c.xmin-u)/o.x+.1),y=Math.floor((d-c.ymax)/o.y+.1),x=Math.floor((c.xmax-u)/o.x-.1),p=Math.floor((d-c.ymin)/o.y-.1),h=c.width<.1*o.x?0:x-m+1,g=c.height<.1*o.y?0:p-y+1;e.pyramidLevel=s,e.pyramidResolution=o,e.srcWidth=h,e.srcHeight=g,e.ul={x:m,y}}_getRequestOptionsWithSliceId(n){return null!=this.rasterInfo.multidimensionalInfo&&null==n.sliceId&&(n={...n,sliceId:this.getSliceIndex(n.multidimensionalDefinition)}),n}_processIdentifyResult(n,e){const{srcLocation:i,position:t,pyramidLevel:r,useTransposedTile:a}=e,s=n.pixels[0].length/n.width/n.height;if(n.mask&&!n.mask[t])return{location:i,value:null};const{multidimensionalInfo:o}=this.rasterInfo;if(null==o||!a){const p=n.pixels.map(S=>S[t]),h={location:i,value:p,pyramidLevel:r},g=this._computeMagDirValues(p.map(S=>[S]));return g?.length&&(h.magdirValue=g.map(S=>S[0])),h}let l=n.pixels.map(p=>p.slice(t*s,t*s+s)),c=this._computeMagDirValues(l);const{requestSomeSlices:f,identifyOptions:u}=e;let d=(0,X.QW)(o,u.transposedVariableName);if(f){const p=(0,X.xx)(d,u.multidimensionalDefinition,u.timeExtent);l=l.map(h=>p.map(g=>h[g])),c=c?.map(h=>p.map(g=>h[g])),d=p.map(h=>d[h])}const m=n.noDataValues||this.rasterInfo.noDataValue,y={pixels:l,pixelType:n.pixelType};let x;return null!=m&&((0,it.Sp)(y,m),x=y.mask),{location:i,value:null,dataSeries:d.map((p,h)=>{const g={value:0===x?.[h]?null:l.map(S=>S[h]),multidimensionalDefinition:p.multidimensionalDefinition.map(S=>new ke.A({...S,isSlice:!0}))};return c?.length&&(g.magdirValue=[c[0][h],c[1][h]]),g}),pyramidLevel:r}}};(0,R._)([(0,w.MZ)()],Z.prototype,"_rasterTileAlignmentInfo",void 0),(0,R._)([(0,w.MZ)()],Z.prototype,"_tileFetchQueue",void 0),(0,R._)([(0,w.MZ)({readOnly:!0})],Z.prototype,"_isGlobalWrappableSource",null),(0,R._)([(0,w.MZ)({readOnly:!0})],Z.prototype,"_hasNoneOrGCSShiftTransform",null),(0,R._)([(0,w.MZ)()],Z.prototype,"rasterJobHandler",null),(0,R._)([(0,w.MZ)({readOnly:!0})],Z.prototype,"rasterId",null),(0,R._)([(0,w.MZ)(Ee.OZ)],Z.prototype,"url",null),(0,R._)([(0,w.MZ)({type:String,json:{write:!0}})],Z.prototype,"datasetName",void 0),(0,R._)([(0,w.MZ)({type:String,json:{write:!0}})],Z.prototype,"datasetFormat",void 0),(0,R._)([(0,w.MZ)()],Z.prototype,"hasUniqueSourceStorageInfo",void 0),(0,R._)([(0,w.MZ)()],Z.prototype,"rasterInfo",void 0),(0,R._)([(0,w.MZ)()],Z.prototype,"ioConfig",void 0),(0,R._)([(0,w.MZ)()],Z.prototype,"sourceJSON",void 0),Z=(0,R._)([(0,q.$)("esri.layers.support.rasterDatasets.BaseRaster")],Z);const fe=Z;var ot=v(82663),K=v(21980);function ze(n,e,i){return Ge.apply(this,arguments)}function Ge(){return(Ge=(0,M.A)(function*(n,e,i){if("extent"===i.type)return function Ht(n,e,i){const{width:t,height:r}=n,a=new Uint8Array(t*r),s=e.width/t,o=e.height/r;if(i.width/s<.5||i.height/o<.5)return new K.A({pixelType:n.pixelType,width:t,height:r,mask:a,pixels:[...n.pixels]});const{xmin:l,xmax:c,ymin:f,ymax:u}=e,{xmin:d,xmax:m,ymin:y,ymax:x}=i,p=Math.max(l,d),h=Math.min(c,m),g=Math.max(f,y),S=Math.min(u,x),I=.5*s,b=.5*o;if(h-p<I||S-g<b||h<l+I||p>c-I||g>u-b||S<f+b)return new K.A({pixelType:n.pixelType,width:t,height:r,mask:a,pixels:[...n.pixels]});const T=Math.max(0,(p-l)/s),P=Math.min(t,Math.max(0,(h-l)/s)),A=Math.max(0,(u-S)/o),F=Math.min(r,Math.max(0,(u-g)/o)),O=Math.round(T),D=Math.round(P)-1,C=Math.round(A),N=Math.round(F)-1;if(O===D&&T%1>.5&&P%1<.5||C===N&&A%1>.5&&F%1<.5)return new K.A({pixelType:n.pixelType,width:t,height:r,mask:a,pixels:[...n.pixels]});if(0===O&&0===C&&D===t&&N===r)return n;const B=n.mask;for(let k=C;k<=N;k++)for(let L=O;L<=D;L++){const z=k*t+L;a[z]=B?B[z]:255}return new K.A({pixelType:n.pixelType,width:t,height:r,mask:a,pixels:[...n.pixels]})}(n,e,i);const{width:t,height:r}=n,a=new Uint8Array(t*r),{contains:s,intersects:o}=yield Promise.all([v.e(3930),v.e(2076),v.e(6041)]).then(v.bind(v,46041));return o(e,i)?"polyline"===i.type?function zt(n,e,i){const{width:t,height:r}=n,a=new Uint8Array(t*r),s=e.width/t,o=e.height/r,{xmin:l,ymax:c}=e,{paths:f}=i,u=n.mask;for(let d=0;d<f.length;d++){const m=f[d];for(let y=0;y<m.length-1;y++){const[x,p]=m[y],[h,g]=m[y+1];let S=Math.floor((c-p)/o),I=Math.floor((c-g)/o);if(I<S){const T=S;S=I,I=T}S=Math.max(0,S),I=Math.min(r-1,I);const b=(h-x)/(g-p);for(let T=S;T<=I;T++){const P=T===S?Math.max(p,g):(r+1-T)*o,A=T===I?Math.min(p,g):P-o;let F=Math.floor(g===p?(x-l)/s:(b*(P-p)+x-l)/s),O=Math.floor(g===p?(h-l)/s:(b*(A-p)+x-l)/s);if(O<F){const C=F;F=O,O=C}const D=T*t;F=Math.max(0,F),O=Math.min(t-1,O);for(let C=D+F;C<=D+O;C++)a[C]=u?u[C]:255}}}return new K.A({pixelType:n.pixelType,width:t,height:r,mask:a,pixels:[...n.pixels]})}(n,e,i):s(i,e)?n:function Lt(n,e,i){if(!n)return n;const{width:t,height:r}=n,a=e.width/t,s=e.height/r,{xmin:o,ymax:l}=e;let c;if("extent"===i.type){const p=(i.xmin-o)/a,h=(i.xmax-o)/a,g=(l-i.ymax)/s,S=(l-i.ymin)/s;c=[[[p,g],[p,S],[h,S],[h,g],[p,g]]]}else c=i.rings.map(p=>p.map(([h,g])=>[(h-o)/a,(l-g)/s]));const f=document.createElement("canvas");f.width=t,f.height=r;const u=f.getContext("2d");u.fillStyle="#f00",u.beginPath(),c.forEach(p=>{u.moveTo(p[0][0],p[0][1]);for(let h=0;h<p.length;h++)u.lineTo(p[h][0],p[h][1]);u.closePath()}),u.fill();const d=u.getImageData(0,0,t,r).data,m=n.mask,y=t*r,x=new Uint8Array(y);for(let p=0;p<y;p++)m&&!m[p]||(x[p]=d[4*p+3]>127?255:0);return new K.A({pixelType:n.pixelType,width:t,height:r,mask:x,maskIsAlpha:!1,pixels:[...n.pixels]})}(n,e,i):new K.A({pixelType:n.pixelType,width:t,height:r,mask:a,maskIsAlpha:!1,pixels:[...n.pixels]})})).apply(this,arguments)}var We=v(93327);let de=class extends fe{constructor(){super(...arguments),this.datasetFormat="Function",this.tileType="Raster",this.rasterFunction=null,this._clippingGeometry=new Map}open(n){var e=this;return(0,M.A)(function*(){yield e.init();const{rasterFunction:i}=e;e.primaryRasters?.rasters?.length?i.sourceRasters=e.primaryRasters.rasters:(e.primaryRasters=i.getPrimaryRasters(),e.rasterJobHandler&&e.primaryRasters.rasters?.forEach(f=>f.rasterJobHandler=e.rasterJobHandler));const{rasters:t,rasterIds:r}=e.primaryRasters,a=t.map(f=>f.rasterInfo?void 0:f.open(n));yield Promise.all(a);const s=t.map(({rasterInfo:f})=>f),o=i.bind({rasterInfos:s,rasterIds:r});if(i.rawSourceRasterInfos=s,!o.success||0===s.length)throw new J.A("raster-function:open",`cannot bind the function: ${o.error??""}`);const l="Table"===i.functionName?i:i.functionArguments?.raster;"Table"===l?.functionName&&(i.rasterInfo.attributeTable=We.A.fromJSON(l.functionArguments.attributeTableAsRecordSet)),yield e.syncJobHandler();const c=s[0];e.hasUniqueSourceStorageInfo=1===s.length||s.slice(1).every(f=>function Ut(n,e){const{storageInfo:i,pixelSize:t,spatialReference:r,extent:a}=n,{storageInfo:s,pixelSize:o,spatialReference:l,extent:c}=e;return t.x===o.x&&t.y===o.y&&r.equals(l)&&a.equals(c)&&i.blockHeight===s.blockHeight&&i.blockWidth===s.blockWidth&&i.maximumPyramidLevel===s.maximumPyramidLevel}(f,c)),e.set("sourceJSON",t[0].sourceJSON),e.set("rasterInfo",i.rasterInfo),yield e._updateClipGeometry()})()}syncJobHandler(){var n=this;return(0,M.A)(function*(){return n.rasterJobHandler?.updateRasterFunction(n.rasterFunction)})()}fetchPixels(n,e,i,t={}){var r=this;return(0,M.A)(function*(){const{rasters:a,rasterIds:s}=r.primaryRasters;let o=!1;const{interpolation:l}=t,c=r.rasterFunction.flatWebGLFunctionChain?.hasFocalFunction;!t.requestRawData&&c&&(o=1===a.length&&!t.skipRasterFunction,t={...t,interpolation:"bilinear",requestRawData:o});const f=a.map(I=>I.fetchPixels(n,e,i,t)),u=yield Promise.all(f),d=u.map(I=>I.pixelBlock),m=o||t.requestRawData?u.map(I=>I.srcTilePixelSize):null;if(t.skipRasterFunction||d.every(I=>null==I))return u[0];const y=u.find(I=>null!=I.pixelBlock)?.extent??n;let x=r.rasterJobHandler?yield r.rasterJobHandler.process({extent:y,primaryPixelBlocks:d,primaryPixelSizes:m,primaryRasterIds:s}):r.rasterFunction.process({extent:y,primaryPixelBlocks:d,primaryPixelSizes:m,primaryRasterIds:s});const{transformGrid:p}=u[0];if(!o||null==x||null==p){const I=t.noClip?null:r.getClippingGeometry(y.spatialReference);return t.noClip||t.requestRawData||null==x||!I||(x=yield ze(x,y,I)),{...u[0],pixelBlock:x}}const h={rows:p.spacing[0],cols:p.spacing[1]};let g;g=r.rasterJobHandler?(yield r.rasterJobHandler.mosaicAndTransform({srcPixelBlocks:[x],srcMosaicSize:{width:x.width,height:x.height},destDimension:{width:e,height:i},coefs:p.coefficients,sampleSpacing:h,projectDirections:!1,gcsGrid:null,isUV:!1,interpolation:l,alignmentInfo:void 0,blockWidths:null},t)).pixelBlock:(0,re.$i)(x,{width:e,height:i},p.coefficients,h,l);const S=t.noClip?null:r.getClippingGeometry(n.spatialReference);return t.noClip||t.requestRawData||null==g||null==S||(g=yield ze(g,n,S)),{extent:n,srcExtent:u[0].srcExtent,pixelBlock:g}})()}getClippingGeometry(n){const e=this._clippingGeometry.get("0");if(!n||!e)return e;const i=function Zt(n){return String(n.wkid??n.wkt??n.wkt2)}(n);let t=this._clippingGeometry.get(i);return null!=t||(t=n.equals(e.spatialReference)?e:(0,E.uk)(e,n),this._clippingGeometry.set(i,t)),t}_updateClipGeometry(){var n=this;return(0,M.A)(function*(){const e=n.rasterFunction.getClippingGeometries()[0];let i=e?.clippingGeometry;if(i&&"inside"===e.clippingType){const{extent:t}=n.rasterInfo,{difference:r,densify:a}=yield Promise.all([v.e(3930),v.e(2076),v.e(6041)]).then(v.bind(v,46041));let s=a(Pt.A.fromExtent(t),2*(t.width+t.height)/40);s=(0,E.uk)(s,i.spatialReference),i=r(s,i)}n._clippingGeometry.clear(),i&&n._clippingGeometry.set("0",i)})()}};(0,R._)([(0,w.MZ)({type:String,json:{write:!0}})],de.prototype,"datasetFormat",void 0),(0,R._)([(0,w.MZ)()],de.prototype,"tileType",void 0),(0,R._)([(0,w.MZ)()],de.prototype,"rasterFunction",void 0),(0,R._)([(0,w.MZ)()],de.prototype,"primaryRasters",void 0),de=(0,R._)([(0,q.$)("esri.layers.support.rasterDatasets.FunctionRaster")],de);const lt=de;var Ue=v(78400),me=v(48104),ie=v(22151),jt=v(54636),Vt=v(98464),$t=v(91551);const Xt=n=>{let e=class extends n{constructor(...t){super(...t),this._isConstructedFromFunctionRaster=!1,this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this.bandIds=null,this.copyright=null,this.interpolation="nearest",this.multidimensionalSubset=null,this.raster=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.spatialReference=null,this.symbolizer=null,this._isConstructedFromFunctionRaster="Function"===t[0]?.raster?.datasetFormat}get fullExtent(){return this.serviceRasterInfo?.extent}set multidimensionalDefinition(t){this._set("multidimensionalDefinition",t),this.updateRenderer()}set rasterFunction(t){"none"===t?.functionName?.toLowerCase()&&(t=void 0),this._set("rasterFunction",t),this.updateRasterFunction()}get rasterInfo(){return(0,At.Lx)(ue.A.getLogger(this),"rasterInfo",{replacement:"serviceRasterInfo",version:"4.29",warnOnce:!0}),this._get("serviceRasterInfo")}set url(t){this._set("url",(0,rt.Jf)(t,ue.A.getLogger(this)))}set renderer(t){null==t&&null==this.rasterFunction?this._configDefaultRenderer("override"):(this._set("renderer",t),this.updateRenderer())}readRenderer(t,r,a){const s=r?.layerDefinition?.drawingInfo?.renderer;return(0,Be.LF)(s,a)||void 0}convertVectorFieldData(t,r){var a=this;return(0,M.A)(function*(){const{serviceRasterInfo:s}=a;if(null==t||!s)return null;const o=a._rasterJobHandler.instance,l=s.dataType;return o?o.convertVectorFieldData({pixelBlock:t,dataType:l},r):(0,He.FI)(t,l)})()}computeStatisticsHistograms(t,r){var a=this;return(0,M.A)(function*(){yield a.load(r),t=(0,Te.PZ)(Vt.A,t).clone();const{serviceRasterInfo:s}=a;if(null==s)throw new J.A("imagery-tile-mixin:compute-statistics-histograms","serviceRasterInfo must be specified");const{geometry:o}=t;if(null==o)throw new J.A("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let l=o;const{spatialReference:c}=s;o.spatialReference.equals(c)||(yield(0,E.Hh)(),l="extent"===o.type?(0,E._l)(o,c):(0,E.uk)(o,c));const f=t.pixelSize??new W.A({x:s.pixelSize.x,y:s.pixelSize.y,spatialReference:c}),{extent:u,width:d,height:m}=function Gt(n,e,i,t=!0){const{spatialReference:r}=n,{x:a,y:s}=function kt(n,e){if(n.spatialReference.equals(e))return n;const i=(0,ot.GA)(n.spatialReference),t=(0,ot.GA)(e);if(i===t)return n;const r=i/t;return{x:n.x*r,y:n.y*r}}(i,r);let o,l,c;const f="extent"===e.type?e:e.extent;let{xmin:u,xmax:d,ymax:m,ymin:y}=f;const{xmin:x,ymax:p}=n.extent;return t?(u=x+(u>x?a*Math.round((u-x)/a):0),m=p-(m<p?s*Math.round((p-m)/s):0),d=x+(d>x?a*Math.round((d-x)/a):0),y=p-(y<p?s*Math.round((p-y)/s):0),o=new G.A({xmin:u,ymax:m,xmax:d,ymin:y,spatialReference:r}),l=Math.round(o.width/a),c=Math.round(o.height/s)):(l=Math.floor((d-u)/a+.8),c=Math.floor((m-y)/s+.8),u=x+(u>x?a*Math.floor((u-x)/a+.1):0),m=p-(m<p?s*Math.floor((p-m)/s+.1):0),d=u+l*a,y=m-c*s,o=new G.A({xmin:u,ymax:m,xmax:d,ymin:y,spatialReference:r})),{extent:o,width:l,height:c}}(s,l,f),y=yield a.fetchPixels(u,d,m,{...r,interpolation:"nearest"});if(null==y.pixelBlock)throw new J.A("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const x=yield ze(y.pixelBlock,u,l),p=a._rasterJobHandler.instance;return p?p.computeStatisticsHistograms({pixelBlock:x},r):(0,me.eH)(x)})()}createFlowMesh(t,r){var a=this;return(0,M.A)(function*(){const s=a._rasterJobHandler.instance;return s?s.createFlowMesh(t,r):(0,$t.CW)(t.meshType,t.simulationSettings,t.flowData,null!=r.signal?r.signal:(new AbortController).signal)})()}normalizeRasterFetchOptions(t){const{multidimensionalInfo:r}=this.serviceRasterInfo??{};if(null==r)return t;let a=t.multidimensionalDefinition||this.multidimensionalDefinition;a?.length||(a=(0,X.fy)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const s=t.timeExtent||this.timeExtent;if(null!=a&&null!=s&&(null!=s.start||null!=s.end)){a=a.map(x=>x.clone());const o=r.variables.find(({name:x})=>x===a[0].variableName)?.dimensions?.find(({name:x})=>"StdTime"===x),l=a.find(({dimensionName:x})=>"StdTime"===x);if(!o||!l)return{...t,multidimensionalDefinition:null};const{start:c,end:f}=s,u=null==c?null:c.getTime(),d=null==f?null:f.getTime(),m=u??d,y=d??u;if(null!=o.values){const x=o.values.filter(p=>Array.isArray(p)?m===y?p[0]<=m&&p[1]>=m:p[0]<=m&&p[1]>m||p[0]<y&&p[1]>=y||p[0]>=m&&p[1]<=y||p[0]<m&&p[1]>y:m===y?p===m:p>=m&&p<=y);if(x.length){const p=x.sort((h,g)=>{const S=Array.isArray(h)?h[0]:h,I=Array.isArray(h)?h[1]:h,b=Array.isArray(g)?g[0]:g,T=Array.isArray(g)?g[1]:g;return m===y?S-b:Math.abs(I-y)-Math.abs(T-y)})[0];l.values=[p]}else a=null}else if(o.hasRegularIntervals&&o.extent){const[x,p]=o.extent;m>p||y<x?a=null:l.values=m===y?[m]:[Math.max(x,m),Math.min(p,y)]}}return null!=a&&(0,X.sx)(a,this.multidimensionalSubset)?{...t,multidimensionalDefinition:null}:{...t,multidimensionalDefinition:a}}updateRasterFunction(){var t=this;return(0,M.A)(function*(){if(!t.loaded||"imagery-tile"!==t.type||!t.rasterFunction&&!t._cachedRasterFunctionJson||JSON.stringify(t.rasterFunction)===JSON.stringify(t._cachedRasterFunctionJson))return;if(t._isConstructedFromFunctionRaster&&"Function"===t.raster.datasetFormat){const u=t.raster.rasterFunction.toJSON();return!t.rasterFunction&&u&&t._set("rasterFunction",Le.A.fromJSON(u)),void(t._cachedRasterFunctionJson=t.rasterFunction?.toJSON())}let r,a=t.raster,s=!1;"Function"===a.datasetFormat?(r=a.primaryRasters.rasters,a=r[0],s=!0):r=[a];const{rasterFunction:o}=t;if(o){const u={raster:a};r.length>1&&r.forEach(y=>u[y.url]=y);const d=(0,Ue.vt)(o.functionDefinition?.toJSON()??o.toJSON(),u),m=new lt({rasterFunction:d});m.rasterJobHandler=t._rasterJobHandler.instance,yield m.open(),t._cachedRasterFunctionJson=t.rasterFunction?.toJSON(),t.raster=m}else t.raster=a,t._cachedRasterFunctionJson=null,yield a.when();if(t._cachedRendererJson=null,!s&&!o)return;const{bandIds:l}=t,{bandCount:c}=t.raster.rasterInfo,f=l?.length?l.some(u=>u>=c):c>=3;l&&(f||t.renderer&&"raster-stretch"!==t.renderer.type)&&t._set("bandIds",null),t._configDefaultRenderer("auto")})()}updateRenderer(){var t=this;return(0,M.A)(function*(){const{loaded:r,symbolizer:a}=t;if(!r||!a||!t.renderer)return;const{rasterInfo:s}=t.raster,o=(0,X.ct)(s,{multidimensionalDefinition:t.multidimensionalDefinition,multidimensionalSubset:t.multidimensionalSubset}),l=o?.name,c=(0,ie.$P)({...t.renderer.toJSON(),variableName:l});if(JSON.stringify(t._cachedRendererJson)===JSON.stringify(c))return;const f=t._rasterJobHandler.instance;f&&(a.rasterInfo=(0,ie.m7)(s,l),a.rendererJSON=c,a.bind(),yield f.updateSymbolizer(a),t._cachedRendererJson=c)})()}applyRenderer(t,r){var a=this;return(0,M.A)(function*(){const s=t?.pixelBlock;if(!(null!=s&&s.pixels&&s.pixels.length>0))return null;let o;yield a.updateRenderer();const l=a._rasterJobHandler.instance,c=a.bandIds??[];return o=l?yield l.symbolize({...t,simpleStretchParams:r,bandIds:c}):a.symbolizer.symbolize({...t,simpleStretchParams:r,bandIds:c}),o})()}getTileUrl(t,r,a){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${t}/${r}/${a}`:""}getCompatibleTileInfo(t,r,a=!1){if(!this.loaded||null==r)return null;if(a&&t.equals(this.spatialReference))return this.tileInfo;const s=(0,nt.Vp)(t);return oe.A.create({size:256,spatialReference:t,origin:s?{x:s.origin[0],y:s.origin[1]}:{x:r.xmin,y:r.ymax}})}getCompatibleFullExtent(t){return this.loaded?(this._compatibleFullExtent?.spatialReference.equals(t)||(this._compatibleFullExtent=this.raster.computeExtent(t)),this._compatibleFullExtent):null}fetchTile(t,r,a,s={}){var o=this;return(0,M.A)(function*(){if(i(o),s.requestAsImageElement){const c=o.getTileUrl(t,r,a);return(0,tt.A)(c,{responseType:"image",query:{...o.refreshParameters,...o.raster.ioConfig.customFetchParameters},signal:s.signal}).then(f=>f.data)}const{serviceRasterInfo:l}=o;return null!=l.multidimensionalInfo&&null==(s=o.normalizeRasterFetchOptions(s)).multidimensionalDefinition?{extent:o.raster.getTileExtentFromTileInfo(t,r,a,s.tileInfo||l.storageInfo.tileInfo),pixelBlock:null}:(yield o._initJobHandler(),yield o.updateRasterFunction(),"raster-shaded-relief"===o.renderer?.type&&(s={...s,buffer:{cols:1,rows:1}}),o.raster.fetchTile(t,r,a,s))})()}fetchPixels(t,r,a,s={}){var o=this;return(0,M.A)(function*(){return null!=o.serviceRasterInfo.multidimensionalInfo&&null==(s=o.normalizeRasterFetchOptions(s)).multidimensionalDefinition?{extent:t,pixelBlock:null}:(yield o._initJobHandler(),yield o.updateRasterFunction(),r=Math.round(r),a=Math.round(a),o.raster.fetchPixels(t,r,a,s))})()}identify(t,r={}){var a=this;return(0,M.A)(function*(){yield a.load();const{raster:s,serviceRasterInfo:o}=a;if(!(null==o?.multidimensionalInfo||o.hasMultidimensionalTranspose&&((0,X.DY)(r.multidimensionalDefinition)||r.transposedVariableName||r.timeExtent)||null!=(r=a.normalizeRasterFetchOptions(r)).multidimensionalDefinition))return{location:t,value:null};const l=a.multidimensionalSubset?.areaOfInterest;if(l&&!l.contains(t))throw new J.A("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return s.identify(t,r)})()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}hasStandardTime(){const t=this.serviceRasterInfo?.multidimensionalInfo;if(null==t||"standard-time"!==this.serviceRasterInfo?.dataType)return!1;const r=this.multidimensionalDefinition,a=r?.[0]?.variableName;return t.variables.some(s=>s.name===a&&(!r?.[0].dimensionName||s.dimensions.some(o=>"StdTime"===o.name)))}getStandardTimeValue(t){return new Date(24*(t-25569)*3600*1e3).toString()}getMultidimensionalSubsetVariables(t){return(0,X.z2)(this.multidimensionalSubset,t??this.serviceRasterInfo?.multidimensionalInfo)}_configDefaultSettings(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=(0,X.fy)(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&"Function"===this.raster.datasetFormat&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()}_initJobHandler(){var t=this;if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const r=new Ft.A;return this._rasterJobHandler.connectionPromise=r.initialize().then((0,M.A)(function*(){i(t),t._rasterJobHandler.instance=r,t.raster.rasterJobHandler=r,"Function"===t.raster.datasetFormat&&t.raster.syncJobHandler(),t.rasterFunction&&(yield t.updateRasterFunction().catch(()=>{})),t.renderer&&t.updateRenderer()})).catch(()=>{}),this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)}_configDefaultInterpolation(){if(null==this.interpolation){i(this);const{raster:t}=this,r=(0,ie.w6)(t.rasterInfo,t.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",r)}}_configDefaultRenderer(t="no"){i(this);const{rasterInfo:r}=this.raster;!this.bandIds&&r.bandCount>1&&(this.bandIds=(0,ie.ci)(r));const a=(0,X.ct)(r,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),s=a?.name,o=(0,ie.mZ)(this.raster);if(!this.renderer||"override"===t){const u=(0,ie.PD)(r,{bandIds:this.bandIds,variableName:s,rasterFunctionColorRamp:o}),d=r.statistics,m=d&&d.length>0?d[0]:null;"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===u.type&&((m?.max??0)>1e24||(m?.min??0)<-1e24)&&(u.dynamicRangeAdjustment=!0,u.statistics=null,"none"===u.stretchType&&(u.stretchType="min-max")),this.renderer=u}const l=(0,ie.$P)({...this.renderer.toJSON(),variableName:s}),c=(0,ie.m7)(r,s);this.symbolizer?(this.symbolizer.rendererJSON=l,this.symbolizer.rasterInfo=c):this.symbolizer=new jt.A({rendererJSON:l,rasterInfo:c});const f=this.symbolizer.bind();if(f.success){if("auto"===t){const{colormap:u}=this.raster.rasterInfo,d=this.renderer;if(null!=u&&"raster-colormap"===d.type){const m=(0,ie.PD)(this.raster.rasterInfo);JSON.stringify(m)!==JSON.stringify(d)&&this._configDefaultRenderer("override")}else if("raster-stretch"===d.type){const m=this.bandIds?.length,y=d.statistics?.length;!d.dynamicRangeAdjustment&&y&&m&&y!==m&&this._configDefaultRenderer("override")}}}else ue.A.getLogger(this).warn("imagery-tile-mixin",f.error||"The given renderer is not supported by the layer."),"auto"===t&&this._configDefaultRenderer("override")}};function i(t){if(!t.raster||!t.serviceRasterInfo)throw new J.A("imagery-tile","no raster")}return(0,R._)([(0,w.MZ)({clonable:!1})],e.prototype,"_cachedRendererJson",void 0),(0,R._)([(0,w.MZ)({clonable:!1})],e.prototype,"_cachedRasterFunctionJson",void 0),(0,R._)([(0,w.MZ)({clonable:!1})],e.prototype,"_compatibleFullExtent",void 0),(0,R._)([(0,w.MZ)({clonable:!1})],e.prototype,"_isConstructedFromFunctionRaster",void 0),(0,R._)([(0,w.MZ)({clonable:!1})],e.prototype,"_rasterJobHandler",void 0),(0,R._)([(0,w.MZ)()],e.prototype,"bandIds",void 0),(0,R._)([(0,w.MZ)({json:{origins:{service:{read:{source:"copyrightText"}}}}})],e.prototype,"copyright",void 0),(0,R._)([(0,w.MZ)({json:{read:!1}})],e.prototype,"fullExtent",null),(0,R._)([(0,w.MZ)()],e.prototype,"interpolation",void 0),(0,R._)([(0,w.MZ)()],e.prototype,"ioConfig",void 0),(0,R._)([(0,w.MZ)({type:[ke.A],json:{write:!0}})],e.prototype,"multidimensionalDefinition",null),(0,R._)([(0,w.MZ)({type:Mt.A,json:{write:!0}})],e.prototype,"multidimensionalSubset",void 0),(0,R._)([(0,w.MZ)()],e.prototype,"raster",void 0),(0,R._)([(0,w.MZ)({type:Le.A,json:{name:"renderingRule",write:!0}})],e.prototype,"rasterFunction",null),(0,R._)([(0,w.MZ)({readOnly:!0})],e.prototype,"rasterInfo",null),(0,R._)([(0,w.MZ)()],e.prototype,"serviceRasterInfo",void 0),(0,R._)([(0,w.MZ)()],e.prototype,"sourceJSON",void 0),(0,R._)([(0,w.MZ)({readOnly:!0,type:U.A,json:{read:!1}})],e.prototype,"spatialReference",void 0),(0,R._)([(0,w.MZ)({type:oe.A})],e.prototype,"tileInfo",void 0),(0,R._)([(0,w.MZ)(Ee.OZ)],e.prototype,"url",null),(0,R._)([(0,w.MZ)({types:Be.uy,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||!("raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma)}}},origins:{"web-scene":{types:Be.Gj,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:t=>({enabled:t&&"vector-field"!==t.type&&"flow"!==t.type})}}}}})],e.prototype,"renderer",null),(0,R._)([(0,Tt.w)("renderer")],e.prototype,"readRenderer",null),(0,R._)([(0,w.MZ)({clonable:!1})],e.prototype,"symbolizer",void 0),e=(0,R._)([(0,q.$)("esri.layers.mixins.ImageryTileMixin")],e),e};var Yt=v(17049),Kt=v(85551),Qt=v(1151),_t=v(33036),qt=v(84311),ve=v(29141),en=v(9932),tn=v(68677),nn=v(88996);function ct(n){return["x","e","east","long","longitude"].includes(n.toLowerCase())}function ut(n){return["y","n","west","lat","latitude"].includes(n.toLowerCase())}function Ze(n){const e=(0,nn.Z0)();return e?n[e]??Object.values(n)[0]:Object.values(n)[0]}function je(){return Math.round(255*Math.random())}function an(n){let e=Number.MAX_VALUE,i=-Number.MAX_VALUE;for(let t=0;t<n.length;t++){const r=n[t];null!=r&&(r<e&&(e=r),r>i&&(i=r))}return(0,it.X1)(e,i)}function on(n,e,i){const t=n.map((l,c)=>({name:l,count:e[c]})).sort((l,c)=>l.name>c.name?-1:1),r=(a=1,l=>a*=l.count);var a;const s=[...t.slice(1),{name:"",count:1}].reverse().map(r).reverse();let o=0;for(let l=n.length-1;l>=0;l--)o+=s[t.findIndex(({name:c})=>c===n[l])]*(i%e[l]),i=Math.floor(i/e[l]);return o}var Fe=v(83179);let Ie=class extends fe{constructor(){super(...arguments),this.datasetFormat="MEMORY",this.source=null}get url(){return""}open(n){var e=this;return(0,M.A)(function*(){yield e.init();const i=e.source,{pixelBlocks:t,attributeTable:r,statistics:a,histograms:s,name:o,nativeExtent:l,transform:c}=i,f=t[0],{width:u,height:d,pixelType:m}=f,y=i.extent??new G.A({xmin:-.5,ymin:.5,xmax:u-.5,ymax:d-.5,spatialReference:new U.A({wkid:3857})}),x=i.isPseudoSpatialReference??!i.extent,p={x:y.width/u,y:y.height/d},h={...i.keyProperties};r&&(h.DataType="Thematic");const g=new Fe.A({width:u,height:d,pixelType:m,extent:y,nativeExtent:l,attributeTable:r,transform:c,pixelSize:p,spatialReference:y.spatialReference,bandCount:f.pixels.length,keyProperties:h,multidimensionalInfo:i.multidimensionalInfo,statistics:a,isPseudoSpatialReference:x,histograms:s});e.ioConfig.skipMapInfo&&e.updateImageSpaceRasterInfo(g),e.createRemoteDatasetStorageInfo(g,512,512),e._set("rasterInfo",g),e.updateTileInfo(),g.multidimensionalInfo?yield e._buildMDimStats(i.pixelBlocks,g.multidimensionalInfo):yield e._buildInMemoryRaster(f,{width:512,height:512},n),g.multidimensionalInfo||(e.source=null),e.datasetName=o})()}fetchRawTile(n,e,i,t={}){if(!this._pixelBlockTiles){const{rasterInfo:a}=this,[s,o]=a.storageInfo.tileInfo.size,{sliceId:l}=t,{pixelBlocks:c}=this.source,f={pixelBlock:null==l?c[0]:c[l],useBilinear:"thematic"!==a.dataType,tileSize:{width:s,height:o},level:n,row:e,col:i},u=this.rasterJobHandler?this.rasterJobHandler.clipTile(f,t):(0,re.J$)(f);return Promise.resolve(u)}const r=this._pixelBlockTiles.get(`${n}/${e}/${i}`);return Promise.resolve(r)}_buildInMemoryRaster(n,e,i){var t=this;return(0,M.A)(function*(){const{rasterInfo:r}=t,a=r.storageInfo.maximumPyramidLevel??0,s="thematic"!==r.dataType,o=t.rasterJobHandler?t.rasterJobHandler.split({pixelBlock:n,tileSize:e,maximumPyramidLevel:a,useBilinear:s},i):Promise.resolve((0,re.lD)(n,e,a,s)),l=null!=r.statistics,c=null!=r.histograms,f=t.ioConfig.skipStatistics||l?Promise.resolve({statistics:null,histograms:null}):t.rasterJobHandler?t.rasterJobHandler.estimateStatisticsHistograms({pixelBlock:n},i):Promise.resolve((0,me.f4)(n)),u=yield(0,xe.Lx)([o,f]);if(!u[0].value&&u[1].value)throw new J.A("inmemory-raster:open","failed to build in memory raster");t._pixelBlockTiles=u[0].value,l||(r.statistics=u[1].value?.statistics),c||(r.histograms=u[1].value?.histograms)})()}_buildMDimStats(n,e,i){var t=this;return(0,M.A)(function*(){for(let r=0;r<e.variables.length;r++){const a=e.variables[r];if(a.statistics)continue;const s=a.dimensions.map(f=>new ke.A({variableName:a.name,dimensionName:f.name,values:[f.values?.[0]??f.extent?.[0]],isSlice:!0})),o=(0,X.NG)(s,e),l=null==o?null:n[o];if(null==l)continue;const c=t.rasterJobHandler?yield t.rasterJobHandler.computeStatisticsHistograms({pixelBlock:l},i):(0,me.eH)(l);a.statistics=c.statistics,a.histograms||(a.histograms=c.histograms)}})()}};(0,R._)([(0,w.MZ)({type:String,json:{write:!0}})],Ie.prototype,"datasetFormat",void 0),(0,R._)([(0,w.MZ)()],Ie.prototype,"source",void 0),(0,R._)([(0,w.MZ)()],Ie.prototype,"url",null),Ie=(0,R._)([(0,q.$)("esri.layers.support.rasterDatasets.InMemoryRaster")],Ie);const Ve=Ie;let be=class extends fe{constructor(){super(...arguments),this.datasetFormat="CovJSON"}open(n){var e=this;return(0,M.A)(function*(){yield e.init();const{extent:i,pixelBlocks:t,multidimensionalInfo:r,attributeTable:a,bandNames:s}=yield e._fetchData(n),{statistics:o,histograms:l}=(0,me.eH)(t[0]),c=s?.map(m=>({BandName:m})),f={DataType:a?"Thematic":r?"Scientific":"Generic",BandProperties:c},u=new Ve({source:{extent:i,pixelBlocks:t,attributeTable:a?We.A.fromJSON(a):null,multidimensionalInfo:r,statistics:o,histograms:l,keyProperties:f,isPseudoSpatialReference:!1}});yield u.open(),e._inMemoryRaster=u;const d=e.source?"":e.url.slice(e.url.lastIndexOf("/")+1);e._set("datasetName",d.slice(0,d.indexOf("."))),e._set("rasterInfo",u.rasterInfo)})()}fetchRawTile(n,e,i,t={}){return this._inMemoryRaster.fetchRawTile(n,e,i,t)}_fetchData(n){var e=this;return(0,M.A)(function*(){const i=e.source??(yield e.request(e.url,{signal:n?.signal})).data,t="imagery-tile-layer:open-coverage-json";if("coverage"!==i.type?.toLowerCase()||"grid"!==i.domain?.domainType?.toLowerCase())throw new J.A(t,"Only coverage with Grid domain type is supported");if(!i.ranges)throw new J.A(t,"Missing ranges in the grid coverage data");if(!i.domain.referencing?.length)throw new J.A(t,"Missing domain referencing in the grid coverage data");const r=Object.values(i.ranges);for(let a=0;a<r.length;a++){const{axisNames:s,shape:o,type:l,values:c}=r[a];if(!("ndarray"===l.toLowerCase()&&c?.length&&s?.length&&o?.length))throw new J.A(t,"Only ranges with valid NdArray, axisNames, shape, and inline values are supported");if(!ct(s[s.length-1])||!ut(s[s.length-2]))throw new J.A(t,"Only row-major ordered pixel values are supported. X axis must be the last axis.")}return function ln(n){const{width:e,height:i,extent:t,dimensions:r}=function rn(n){const{axes:e}=n.domain,i=Object.keys(e),t=[],r=[];let a=-1,s=-1,o=[];for(let g=0;g<i.length;g++){const S=i[g];ct(S)?a=g:ut(S)&&(s=g);const I=e[S],b=[];if("values"in I){I.values.forEach(P=>b.push("string"==typeof P?new Date(P).getTime():P));const T=b[1]-b[0];t.push([b[0]-.5*T,b[b.length-1]+.5*T]),r.push(T)}else{const{start:T,stop:P,num:A}=I,F=(P-T)/(A-1);t.push([T-.5*F,P+.5*F]),r.push(F);for(let O=0;O<A;O++)b.push(T+F*O)}o.push({name:S,values:b,extent:[b[0],b[b.length-1]]})}a>-1&&-1===s?s=0===a?1:0:s>-1&&-1===a?a=0===s?1:0:-1===s&&-1===a&&(a=0,s=1),o=o.filter((g,S)=>!(S===a||S===s));const{referencing:l}=n.domain,c=l.find(g=>g.coordinates.includes(i[a])).system.id,f=c?.slice(c.lastIndexOf("/")+1),u=null==f||"CRS84"===f?4326:Number(f),d=new U.A({wkid:u}),[m,y]=t[a],[x,p]=t[s],h=new G.A({xmin:m,xmax:y,ymin:x,ymax:p,spatialReference:d});return{width:Math.round(h.width/r[a]),height:Math.round(h.height/r[s]),extent:h,dimensions:o}}(n),{ranges:a}=n,s=Object.keys(a).sort((d,m)=>d<m?-1:1),o=[];for(let d=0;d<s.length;d++){const m=s[d];r?.length&&o.push({name:m,dimensions:r})}const l=function sn(n){const e={},{parameters:i}=n;if(!i)return e;for(const[t,r]of Object.entries(i)){const{type:a,description:s,unit:o,categoryEncoding:l,observedProperty:c}=r;if("Parameter"===a&&(e[t]={},s&&(e[t].description=Ze(s)),o&&(e[t].unit=o.label?Ze(o.label):null,e[t].symbol=o.symbol?.value),l)){const f=Object.entries(l).map((m,y)=>({OID:y,Value:Number(m[1]),ClassName:m[0].slice(m[0].lastIndexOf("/")+1),Count:1}));let u=!1;c?.categories?.length&&(c.categories.forEach(m=>{if(!m.id)return;const y=m.id.slice(m.id.lastIndexOf("/")+1),x=f.find(h=>h.ClassName===y);if(!x)return;const p=m.label?Ze(m.label):null;if(x.Label=p,m.preferredColor){const h=tn.A.fromHex(m.preferredColor);h&&(u=!0,x.Red=h.r,x.Green=h.g,x.Blue=h.b)}}),u&&f.forEach(m=>{null==m.Red&&(m.Red=je(),m.Green=je(),m.Blue=je())}));const d={objectIdFieldName:"",fields:[{name:"OID",type:"esriFieldTypeOID",alias:"OID",domain:null},{name:"Value",type:"esriFieldTypeInteger",alias:"Value",domain:null},{name:"Count",type:"esriFieldTypeDouble",alias:"Count",domain:null},{name:"ClassName",type:"esriFieldTypeString",alias:"ClassName",domain:null,length:50},{name:"Label",type:"esriFieldTypeString",alias:"Label",domain:null,length:50}],features:f.map(m=>({attributes:m}))};u&&d.fields.push({name:"Red",type:"esriFieldTypeInteger",alias:"Red",domain:null},{name:"Green",type:"esriFieldTypeInteger",alias:"Green",domain:null},{name:"Blue",type:"esriFieldTypeInteger",alias:"Blue",domain:null}),e[t].attributeTable=d}}return e}(n);o.forEach(d=>l[d.name]&&Object.assign(d,l[d.name]));const c=o.length?{variables:o}:void 0,f=[];for(let d=0;d<s.length;d++){const m=s[d],{values:y,dataType:x,axisNames:p,shape:h}=a[m],g=h.length>2?d*h.slice(0,-2).reduce((A,F)=>A*F):0,S=p.slice(0,-2),I=h.slice(0,-2),b="float"===x?"f32":an(y),T=e*i,P=y.length/T;for(let A=0;A<P;A++){const F=K.A.createEmptyBand(b,T),O=new Uint8Array(T).fill(255);let D=!1;const C=A*T;for(let N=0;N<T;N++){const B=y[C+N];null==B?(O[N]=0,D=!0):F[N]=B}if(0===d||r?.length){const N=new K.A({width:e,height:i,mask:D?O:null,pixels:[F],pixelType:b});N.updateStatistics(),r?.length?f[on(S,I,A)+g]=N:f.push(N)}else{const N=f[A];N.pixels.push(F),D?N.mask&&(N.mask=K.A.combineBandMasks([N.mask,O])):N.mask=D?O:null}}}const u=Object.values(l).find(d=>d.attributeTable)?.attributeTable;return{extent:t,pixelBlocks:f,multidimensionalInfo:c,attributeTable:u,bandNames:c?void 0:s}}(i)})()}};(0,R._)([(0,w.MZ)({type:String,json:{write:!0}})],be.prototype,"datasetFormat",void 0),(0,R._)([(0,w.MZ)({constructOnly:!0})],be.prototype,"source",void 0),be=(0,R._)([(0,q.$)("esri.layers.support.rasterDatasets.CovJSONRaster")],be);const cn=be;var $e=v(89952);function Re(n,e){if(!n||!e)return[];let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=[];if(e){const a=Re(n,i);for(let s=0;s<a.length;s++)Re(a[s],e).forEach(o=>t.push(o));return t}const r=n.getElementsByTagNameNS("*",i);if(!r||0===r.length)return[];for(let a=0;a<r.length;a++)t.push(r[a]||r.item(a));return t}function Y(n,e){if(!n||!e)return null;let i=e;e.includes("/")?(i=e.slice(0,e.indexOf("/")),e=e.slice(e.indexOf("/")+1)):e="";const t=Re(n,i);return t.length>0?e?Y(t[0],e):t[0]:null}function Q(n,e=null){const i=e?Y(n,e):n;let t;return i?(t=i.textContent||i.nodeValue,t?t.trim():null):null}function Pe(n,e){return function un(n,e){const i=Re(n,e),t=[];let r;for(let a=0;a<i.length;a++)r=i[a].textContent||i[a].nodeValue,r&&(r=r.trim(),""!==r&&t.push(r));return t}(n,e).map(i=>Number(i))}function he(n,e){const i=Q(n,e);return Number(i)}function Xe(n,e){const i=n?.nodeName?.toLowerCase(),t=e.toLowerCase();return i.slice(i.lastIndexOf(":")+1)===t}var Ye=v(47168);function ft(n,e){if(!n||!e)return null;const i=[];for(let t=0;t<n.length;t++)i.push(n[t]),i.push(e[t]);return i}function Ce(n){if(!n)return null;let e=Number(n);if(!isNaN(e)&&0!==e)return new U.A({wkid:e});if(n=String(n).trim(),(0,nt.jp)(n))return new U.A({wkt2:n});const i=n.toUpperCase();if(i.startsWith("COMPD_CS")){if(!i.includes("VERTCS")||!i.includes("GEOGCS")&&!i.startsWith("PROJCS"))return null;const t=i.indexOf("VERTCS"),r=i.indexOf("PROJCS"),a=r>-1?r:i.indexOf("GEOGCS");if(-1===a)return null;const s=n.slice(a,n.lastIndexOf("]",t)+1).trim(),o=n.slice(t,n.lastIndexOf("]")).trim();e=Ke(s);const l=new U.A(e?{wkid:e}:{wkt:s}),c=Ke(o);return c&&(l.vcsWkid=c),l}return i.startsWith("GEOGCS")||i.startsWith("PROJCS")?(e=Ke(n),new U.A(0!==e?{wkid:e}:{wkt:n})):null}function Ke(n){const e=n.replaceAll("]","[").replaceAll('"',"").split("[").map(r=>r.trim()).filter(r=>""!==r),i=e[e.length-1].split(","),t=i[0]?.toLowerCase();if(("epsg"===t||"esri"===t)&&n.endsWith('"]]')){const r=Number(i[1]);if(!isNaN(r)&&0!==r)return r}return 0}function Qe(n){if("pamdataset"!==n?.documentElement.tagName?.toLowerCase())return{};const e={spatialReference:null,transform:null,metadata:{},rasterBands:[],statistics:null,histograms:null};n.documentElement.childNodes.forEach(t=>{if(1===t.nodeType)if(Xe(t,"SRS")){if(!e.spatialReference){const r=Q(t);e.spatialReference=Ce(r)}}else if(Xe(t,"Metadata"))if("xml:ESRI"===t.getAttribute("domain")){const{spatialReference:r,transform:a}=function fn(n){const e=Y(n,"GeodataXform"),i=Ce(he(e,"SpatialReference/WKID")||Q(e,"SpatialReference/WKT"));if("typens:PolynomialXform"!==e.getAttribute("xsi:type"))return{spatialReference:i,transform:null};const t=he(e,"PolynomialOrder")??1,r=Pe(e,"CoeffX/Double"),a=Pe(e,"CoeffY/Double"),s=Pe(e,"InverseCoeffX/Double"),o=Pe(e,"InverseCoeffY/Double"),l=ft(r,a),c=ft(s,o);return{spatialReference:i,transform:l&&c&&l.length&&c.length?new Ye.A({spatialReference:i,polynomialOrder:t,forwardCoefficients:l,inverseCoefficients:c}):null}}(t);e.transform=a,e.spatialReference||(e.spatialReference=r)}else Re(t,"MDI").forEach(r=>e.metadata[r.getAttribute("key")]=Q(r));else if(Xe(t,"PAMRasterBand")){const r=function dn(n){const e=he(n,"NoDataValue"),i=Y(n,"Histograms/HistItem"),t=he(i,"HistMin"),r=he(i,"HistMax"),a=he(i,"BucketCount"),s=Q(i,"HistCounts")?.split("|").map(d=>Number(d));let o,l,c,f;Re(n,"Metadata/MDI").forEach(d=>{const m=Number(d.textContent??d.nodeValue);switch(d.getAttribute("key").toUpperCase()){case"STATISTICS_MINIMUM":o=m;break;case"STATISTICS_MAXIMUM":l=m;break;case"STATISTICS_MEAN":c=m;break;case"STATISTICS_STDDEV":f=m}});const u=he(n,"Metadata/SourceBandIndex");return{noDataValue:e,histogram:s?.length&&null!=t&&null!=r?{min:t,max:r,size:a||s.length,counts:s}:null,sourceBandIndex:u,statistics:null!=o&&null!=l?{min:o,max:l,avg:c,stddev:f}:null}}(t);null!=r.sourceBandIndex&&null==e.rasterBands[r.sourceBandIndex]?e.rasterBands[r.sourceBandIndex]=r:e.rasterBands.push(r)}});const i=e.rasterBands;return i.length&&(e.statistics=i[0].statistics?i.map(a=>a.statistics).filter($e.Ru):null,e.histograms=i[0].histogram?i.map(a=>a.histogram).filter($e.Ru):null),e}let Oe=class extends fe{open(n){var e=this;return(0,M.A)(function*(){yield e.init();const i=yield e._fetchData(n);let{spatialReference:t,statistics:r,histograms:a,transform:s}=yield e._fetchAuxiliaryData(n);const o=!t;o&&(t=new U.A({wkid:3857})),a?.length&&null==r&&(r=(0,me.Pg)(a));const{width:l,height:c}=i;let f=new G.A({xmin:-.5,ymin:.5-c,xmax:l-.5,ymax:.5,spatialReference:t});const u=s?s.forwardTransform(f):f;let d=!0;if(s){const y=s.forwardCoefficients;d=y&&0===y[1]&&0===y[2],d&&(s=null,f=u)}const m=new Ve({source:{extent:u,nativeExtent:f,transform:s,pixelBlocks:[i],statistics:r,histograms:a,keyProperties:{DateType:"Processed"},isPseudoSpatialReference:o},ioConfig:{sampling:"closest",skipStatistics:!0}});e.ioConfig.skipMapInfo&&(m.ioConfig.skipMapInfo=!0),yield m.open(),m.source=null,e._set("rasterInfo",m.rasterInfo),e._inMemoryRaster=m})()}fetchRawTile(n,e,i,t={}){return this._inMemoryRaster.fetchRawTile(n,e,i,t)}_fetchData(n){var e=this;return(0,M.A)(function*(){const{data:i}=yield e.request(e.url,{responseType:"array-buffer",signal:n?.signal}),t=(0,st.g)(i).toUpperCase();if("JPG"!==t&&"PNG"!==t&&"GIF"!==t&&"BMP"!==t)throw new J.A("image-aux-raster:open","the data is not a supported format");e._set("datasetFormat",t);const r=t.toLowerCase(),a="gif"===r||"bmp"===r||!(0,vt.A)("ios"),s=yield e.decodePixelBlock(i,{format:r,useCanvas:a,hasNoZlibMask:!0});if(null==s)throw new J.A("image-aux-raster:open","the data cannot be decoded");return s})()}_fetchAuxiliaryData(n){var e=this;return(0,M.A)(function*(){const i=n?.signal,{skipExtensions:t=[],skipMapInfo:r}=e.ioConfig,a=r||t.includes("aux.xml")?null:e.request(e.url+".aux.xml",{responseType:"xml",signal:i}),s=e.datasetFormat,o="JPG"===s?"jgw":"PNG"===s?"pgw":"BMP"===s?"bpw":null,l=o&&t.includes(o)?null:e.request(e.url.slice(0,e.url.lastIndexOf("."))+"."+o,{responseType:"text",signal:i}),c=yield(0,xe.Lx)([a,l]);if(i?.aborted)throw(0,xe.NK)();const f=Qe(c[0].value?.data);if(!f.transform){const u=c[1].value?c[1].value.data.split("\n").slice(0,6).map(d=>Number(d)):null;f.transform=6===u?.length?new Ye.A({forwardCoefficients:[u[4],u[5],u[0],-u[1],u[2],-u[3]]}):null}return f})()}};(0,R._)([(0,w.MZ)({type:String,json:{write:!0}})],Oe.prototype,"datasetFormat",void 0),Oe=(0,R._)([(0,q.$)("esri.layers.support.rasterDatasets.ImageAuxRaster")],Oe);const Ne=Oe;var mn=v(11432),hn=v(45272),pn=v(77677),yn=v(39181),dt=v(93091);let we=class extends fe{constructor(){super(...arguments),this._levelOffset=0,this._tilemapCache=null,this._slices=null,this.datasetFormat="RasterTileServer",this.tileType=null}open(n){var e=this;return(0,M.A)(function*(){yield e.init();const i=n?.signal,t=e.sourceJSON?{data:e.sourceJSON}:yield e.request(e.url,{query:{f:"json"},signal:i});t.ssl&&(e.url=e.url.replace(/^http:/i,"https:"));const r=t.data;if(e.sourceJSON=r,!r)throw new J.A("imageserverraster:open","cannot initialize tiled image service, missing service info");if(!r.tileInfo)throw new J.A("imageserverraster:open","use ImageryLayer to open non-tiled image services");e._fixScaleInServiceInfo(),e.tileType=r.cacheType,null==e.tileType&&(e.tileType=["jpg","jpeg","png","png8","png24","png32","mixed"].includes(r.tileInfo.format.toLowerCase())?"Map":"lerc"===r.tileInfo.format.toLowerCase()?"Elevation":"Raster"),e.datasetName=r.name?.slice(r.name.indexOf("/")+1)??"";const s=yield e._fetchRasterInfo({signal:i});if(null==s)throw new J.A("image-server-raster:open","cannot initialize image service");(0,dt.E9)(s,r);const o="Map"===e.tileType?function gn(n,e){if(!n)return null;const{minScale:i,maxScale:t,minLOD:r,maxLOD:a}=e;if(null!=r&&null!=a)return oe.A.fromJSON({...n,lods:n.lods.filter(({level:s})=>null!=s&&s>=r&&s<=a)});if(0!==i&&0!==t){const s=c=>Math.round(1e4*c)/1e4,o=i?s(i):1/0,l=t?s(t):-1/0;return oe.A.fromJSON({...n,lods:n.lods.filter(c=>{const f=s(c.scale);return f<=o&&f>=l})})}return oe.A.fromJSON(n)}(r.tileInfo,r):oe.A.fromJSON(r.tileInfo);(0,mn.Lw)(o);const[l,c]=e._computeMinMaxLOD(s,o),{extent:f,pixelSize:u}=s,d=.5/s.width*u.x,m=Math.max(u.x,u.y),{lods:y}=o;("Map"!==e.tileType&&0!==r.maxScale||Math.abs(u.x-u.y)>d||!y.some(A=>Math.abs(A.resolution-m)<d))&&(u.x=u.y=l.resolution,s.width=Math.ceil((f.xmax-f.xmin)/u.x-.1),s.height=Math.ceil((f.ymax-f.ymin)/u.y-.1));const x=l.level-c.level,[p,h]=o.size,g=[],S=[];y.forEach((A,F)=>{A.level>=c.level&&A.level<=l.level&&g.push({x:A.resolution,y:A.resolution}),F<y.length-1&&S.push(Math.round(10*A.resolution/y[F+1].resolution)/10)}),g.sort((A,F)=>A.x-F.x);const I=e.computeBlockBoundary(f,p,h,o.origin,g,x),b=g.length>1?g.slice(1):null;let T;r.transposeInfo&&(T={tileSize:[r.transposeInfo.rows,r.transposeInfo.cols],packetSize:s.keyProperties?._yxs.PacketSize??0});const P=S.length<=1||S.length>=3&&S.slice(0,-1).every(A=>A===S[0])?S[0]??2:Math.round(10/(c.resolution/l.resolution)**(-1/x))/10;if(s.storageInfo=new Me.A({blockWidth:o.size[0],blockHeight:o.size[1],pyramidBlockWidth:o.size[0],pyramidBlockHeight:o.size[1],pyramidResolutions:b,pyramidScalingFactor:P,compression:o.format,origin:o.origin,firstPyramidLevel:1,maximumPyramidLevel:x,tileInfo:o,transposeInfo:T,blockBoundary:I}),function xn(n){const{extent:e,spatialReference:i}=n;e.xmin>-1&&e.xmax>181&&i?.wkid&&i.isGeographic&&(n.nativeExtent=n.extent,n.transform=new yn.A,n.extent=n.transform.forwardTransform(e))}(s),e._set("rasterInfo",s),r.capabilities.toLowerCase().includes("tilemap")){const A={tileInfo:s.storageInfo.tileInfo,parsedUrl:(0,hn.An)(e.url),url:e.url,tileServers:[]};e._tilemapCache=new pn.d({layer:A})}})()}fetchRawTile(n,e,i,t={}){var r=this;return(0,M.A)(function*(){const{storageInfo:a,extent:s}=r.rasterInfo,{transposeInfo:o}=a,l=null!=o&&!!t.transposedVariableName;if(r._slices&&!l&&null==t.sliceId)return null;const f=`${r.url}/tile/${l?0:a.maximumPyramidLevel-n+r._levelOffset}/${e}/${i}`,u=r._slices?l?{variable:t.transposedVariableName}:{sliceId:t.sliceId||0}:null,{data:d}=yield r.request(f,{query:u,responseType:"array-buffer",signal:t.signal});if(!d)return null;const m=l?o.tileSize:a.tileInfo.size,y=yield r.decodePixelBlock(d,{width:m[0],height:m[1],planes:null,pixelType:null,isPoint:"Elevation"===r.tileType,returnInterleaved:l,noDataValue:r.rasterInfo.noDataValue});if(null==y)return null;const x=a.blockBoundary[n];if("jpg"!==a.compression||i>x.minCol&&i<x.maxCol&&e>x.minRow&&e<x.maxRow)return y;const{origin:p,blockWidth:h,blockHeight:g}=a,{x:S,y:I}=r.getPyramidPixelSize(n),b=Math.round((s.xmin-p.x)/S)%h,T=Math.round((s.xmax-p.x)/S)%h||h,P=Math.round((p.y-s.ymax)/I)%g,A=Math.round((p.y-s.ymin)/I)%g||g,F=i===x.minCol?b:0,O=e===x.minRow?P:0;return(0,re.z$)(y,{x:F,y:O},{width:(i===x.maxCol?T:h)-F,height:(e===x.maxRow?A:g)-O}),y})()}getSliceIndex(n){if(!this._slices||null==n||0===n.length)return null;const e=n;for(let i=0;i<this._slices.length;i++){const t=this._slices[i].multidimensionalDefinition;if(t.length===e.length&&!t.some(r=>{const a=e.find(s=>r.variableName===s.variableName&&s.dimensionName===r.dimensionName);return!a||(Array.isArray(r.values[0])?`${r.values[0][0]}-${r.values[0][1]}`:r.values[0])!==(Array.isArray(a.values[0])?`${a.values[0][0]}-${a.values[0][1]}`:a.values[0])}))return i}return null}fetchVariableStatisticsHistograms(n,e){var i=this;return(0,M.A)(function*(){const t=i.request(i.url+"/statistics",{query:{variable:n,f:"json"},signal:e}).then(s=>s.data?.statistics),r=i.request(i.url+"/histograms",{query:{variable:n,f:"json"},signal:e}).then(s=>s.data?.histograms),a=yield Promise.all([t,r]);return a[0]&&a[0].forEach(s=>{s.avg=s.mean,s.stddev=s.standardDeviation}),a[1]?.[0]?.counts?.length||(a[1]=null),{statistics:a[0]||null,histograms:a[1]||null}})()}computeBestPyramidLevelForLocation(n,e={}){var i=this;return(0,M.A)(function*(){if(!i._tilemapCache)return 0;let t=i.identifyPixelLocation(n,0,e.datumTransformation);if(null===t)return null;let r=0;const{maximumPyramidLevel:a}=i.rasterInfo.storageInfo;let s=a-r+i._levelOffset;const o=t.srcLocation;for(;s>=0;){try{if("available"===(yield i._tilemapCache.fetchAvailability(s,t.row,t.col,e)))break}catch{}if(s--,r++,t=i.identifyPixelLocation(o,r,e.datumTransformation),null===t)return null}return-1===s||null==t?null:r})()}_fetchRasterInfo(n){var e=this;return(0,M.A)(function*(){const i=e.sourceJSON;if("Map"===e.tileType){const o=i.fullExtent||i.extent,l=Math.ceil((o.xmax-o.xmin)/i.pixelSizeX-.1),c=Math.ceil((o.ymax-o.ymin)/i.pixelSizeY-.1),f=U.A.fromJSON(i.spatialReference||o.spatialReference),u=new W.A({x:i.pixelSizeX,y:i.pixelSizeY,spatialReference:f});return new Fe.A({width:l,height:c,bandCount:3,extent:G.A.fromJSON(o),spatialReference:f,pixelSize:u,pixelType:"u8",statistics:null,keyProperties:{DataType:"processed"}})}const{signal:t}=n,r=(0,dt.Tw)(e.url,e.sourceJSON,{signal:t,query:e.ioConfig.customFetchParameters}),a=i.hasMultidimensions?e.request(`${e.url}/slices`,{query:{f:"json"},signal:t}).then(o=>o.data?.slices).catch(()=>null):null,s=yield Promise.all([r,a]);return e._slices=s[1],s[0]})()}_fixScaleInServiceInfo(){const{sourceJSON:n}=this;n.minScale&&n.minScale<0&&(n.minScale=0),n.maxScale&&n.maxScale<0&&(n.maxScale=0)}_computeMinMaxLOD(n,e){const{pixelSize:i}=n,t=.5/n.width*i.x,{lods:r}=e,a=e.lodAt(Math.max.apply(null,r.map(d=>d.level))),s=e.lodAt(Math.min.apply(null,r.map(d=>d.level))),{tileType:o}=this;if("Map"===o)return this._levelOffset=r[0].level,[a,s];if("Raster"===o)return[r.find(d=>d.resolution===i.x)??a,s];const{minScale:l,maxScale:c}=this.sourceJSON;let f=a;c>0&&(f=r.find(d=>Math.abs(d.scale-c)<t),f||(f=r.filter(d=>d.scale>c).sort((d,m)=>d.scale>m.scale?1:-1)[0]??a));let u=s;return l>0&&(u=r.find(d=>Math.abs(d.scale-l)<t)??s,this._levelOffset=u.level-s.level),[f,u]}};(0,R._)([(0,w.MZ)({type:String,json:{write:!0}})],we.prototype,"datasetFormat",void 0),(0,R._)([(0,w.MZ)()],we.prototype,"tileType",void 0),we=(0,R._)([(0,q.$)("esri.layers.support.rasterDatasets.ImageServerRaster")],we);const vn=we;var In=v(79892);const ee=new Map;ee.set("Int8","s8"),ee.set("UInt8","u8"),ee.set("Int16","s16"),ee.set("UInt16","u16"),ee.set("Int32","s32"),ee.set("UInt32","u32"),ee.set("Float32","f32"),ee.set("Float64","f32"),ee.set("Double64","f32");const ce=new Map;ce.set("none",{blobExtension:".til",isOneSegment:!0,decoderFormat:"bip"}),ce.set("lerc",{blobExtension:".lrc",isOneSegment:!1,decoderFormat:"lerc"}),ce.set("deflate",{blobExtension:".pzp",isOneSegment:!0,decoderFormat:"deflate"}),ce.set("jpeg",{blobExtension:".pjg",isOneSegment:!0,decoderFormat:"jpg"});let Se=class extends fe{constructor(){super(...arguments),this._files=null,this._storageIndex=null,this.datasetFormat="MRF"}open(n){var e=this;return(0,M.A)(function*(){yield e.init(),e.datasetName=e.url.slice(e.url.lastIndexOf("/")+1);const i=n?n.signal:null,t=yield e.request(e.url,{responseType:"xml",signal:i}),{rasterInfo:r,files:a}=e._parseHeader(t.data),{skipMapInfo:s,skipExtensions:o=[]}=e.ioConfig;if(!o.includes("aux.xml")&&!s){const g=yield e._fetchAuxiliaryData(n);null!=g&&(r.statistics=g.statistics??r.statistics,r.histograms=g.histograms,g.histograms&&null==r.statistics&&(r.statistics=(0,me.Pg)(g.histograms)))}s&&e.updateImageSpaceRasterInfo(r),e._set("rasterInfo",r),e._files=a;const l=yield e.request(a.index,{responseType:"array-buffer",signal:i});e._storageIndex=function Rn(n){if(n.byteLength%16>0)throw new Error("invalid array buffer must be multiples of 16");let e,i,t,r,a,s;if(In.Z){for(i=new Uint8Array(n),r=new ArrayBuffer(n.byteLength),t=new Uint8Array(r),a=0;a<n.byteLength/4;a++)for(s=0;s<4;s++)t[4*a+s]=i[4*a+3-s];e=new Uint32Array(r)}else e=new Uint32Array(n);return e}(l.data);const{blockWidth:c,blockHeight:f}=e.rasterInfo.storageInfo,u=e.rasterInfo.storageInfo.pyramidScalingFactor,{width:d,height:m}=e.rasterInfo,y=[],x=e._getBandSegmentCount();let p=0,h=-1;for(;p<e._storageIndex.length;){h++;const g=Math.ceil(d/c/u**h)-1,S=Math.ceil(m/f/u**h)-1;p+=(g+1)*(S+1)*x*4,y.push({maxRow:S,maxCol:g,minCol:0,minRow:0})}e.rasterInfo.storageInfo.blockBoundary=y,h>0&&(e.rasterInfo.storageInfo.firstPyramidLevel=1,e.rasterInfo.storageInfo.maximumPyramidLevel=h),e.updateTileInfo()})()}fetchRawTile(n,e,i,t={}){var r=this;return(0,M.A)(function*(){const{blockWidth:a,blockHeight:s,blockBoundary:o}=r.rasterInfo.storageInfo,l=o[n];if(!l||l.maxRow<e||l.maxCol<i||l.minRow>e||l.minCol>i)return null;const{bandCount:c,pixelType:f}=r.rasterInfo,{ranges:u,actualTileWidth:d,actualTileHeight:m}=r._getTileLocation(n,e,i);if(!u||0===u.length)return null;if(0===u[0].from&&0===u[0].to){const C=new Uint8Array(a*s);return new K.A({width:a,height:s,pixels:void 0,mask:C,validPixelCount:0})}const{bandIds:y}=r.ioConfig,x=r._getBandSegmentCount(),p=[];let h=0;for(h=0;h<x;h++)y&&!y.includes(h)||p.push(r.request(r._files.data,{range:{from:u[h].from,to:u[h].to},responseType:"array-buffer",signal:t.signal}));const g=yield Promise.all(p),S=g.map(C=>C.data.byteLength).reduce((C,N)=>C+N),I=new Uint8Array(S),b=[];let T=0;for(h=0;h<x;h++)b.push(T),I.set(new Uint8Array(g[h].data),T),T+=g[h].data.byteLength;const P=ce.get(r.rasterInfo.storageInfo.compression).decoderFormat,A=yield r.decodePixelBlock(I.buffer,{width:a,height:s,format:P,planes:y?.length||c,offsets:b,pixelType:f});if(null==A)return null;let{noDataValue:F}=r.rasterInfo;if(null!=F&&"lerc"!==P&&!A.mask&&(F=F[0],null!=F)){const C=A.width*A.height,N=new Uint8Array(C);if(Math.abs(F)>1e24)for(h=0;h<C;h++)Math.abs((A.pixels[0][h]-F)/F)>1e-6&&(N[h]=1);else for(h=0;h<C;h++)A.pixels[0][h]!==F&&(N[h]=1);A.mask=N}let O=0,D=0;if(d!==a||m!==s){let C=A.mask;if(C)for(h=0;h<s;h++)if(D=h*a,h<m)for(O=d;O<a;O++)C[D+O]=0;else for(O=0;O<a;O++)C[D+O]=0;else for(C=new Uint8Array(a*s),A.mask=C,h=0;h<m;h++)for(D=h*a,O=0;O<d;O++)C[D+O]=1}return A})()}_getBandSegmentCount(){return ce.get(this.rasterInfo.storageInfo.compression).isOneSegment?1:this.rasterInfo.bandCount}_getTileLocation(n,e,i){const{blockWidth:t,blockHeight:r,pyramidScalingFactor:a}=this.rasterInfo.storageInfo,{width:s,height:o}=this.rasterInfo,l=this._getBandSegmentCount();let c,f,u,d=0,m=0;for(u=0;u<n;u++)m=a**u,c=Math.ceil(s/t/m),f=Math.ceil(o/r/m),d+=c*f;m=a**n,c=Math.ceil(s/t/m),f=Math.ceil(o/r/m),d+=e*c+i,d*=4*l;const y=this._storageIndex.subarray(d,d+4*l);let x=0,p=0;const h=[];for(let g=0;g<l;g++)x=y[4*g]*2**32+y[4*g+1],p=x+y[4*g+2]*2**32+y[4*g+3],h.push({from:x,to:p});return{ranges:h,actualTileWidth:i<c-1?t:Math.ceil(s/m)-t*(c-1),actualTileHeight:e<f-1?r:Math.ceil(o/m)-r*(f-1)}}_parseHeader(n){const e=Y(n,"MRF_META/Raster");if(!e)throw new J.A("mrf:open","not a valid MRF format");const i=Y(e,"Size"),t=parseInt(i.getAttribute("x"),10),r=parseInt(i.getAttribute("y"),10),a=parseInt(i.getAttribute("c"),10),s=(Q(e,"Compression")||"none").toLowerCase();if(!ce.has(s))throw new J.A("mrf:open","currently does not support compression "+s);const o=Q(e,"DataType")||"UInt8",l=ee.get(o);if(null==l)throw new J.A("mrf:open","currently does not support pixel type "+o);const c=Y(e,"PageSize"),f=parseInt(c.getAttribute("x"),10),u=parseInt(c.getAttribute("y"),10),d=Y(e,"DataValues");let m,y;if(d&&(y=d.getAttribute("NoData"),null!=y&&(m=y.trim().split(" ").map(D=>parseFloat(D)))),Y(n,"MRF_META/CachedSource"))throw new J.A("mrf:open","currently does not support MRF referencing other data files");const x=Y(n,"MRF_META/GeoTags"),p=Y(x,"BoundingBox");let h,g=!1;if(null!=p){const D=parseFloat(p.getAttribute("minx")),C=parseFloat(p.getAttribute("miny")),N=parseFloat(p.getAttribute("maxx")),B=parseFloat(p.getAttribute("maxy")),k=Q(x,"Projection")||"";let L=U.A.WGS84;if("LOCAL_CS[]"!==k)if(k.toLowerCase().startsWith("epsg:")){const z=Number(k.slice(5));isNaN(z)||0===z||(L=new U.A({wkid:z}))}else L=Ce(k)??U.A.WGS84;else g=!0,L=new U.A({wkid:3857});h=new G.A(D,C,N,B),h.spatialReference=L}else g=!0,h=new G.A({xmin:-.5,ymin:.5-r,xmax:t-.5,ymax:.5,spatialReference:new U.A({wkid:3857})});const S=Y(n,"MRF_META/Rsets"),I=parseInt(S?.getAttribute("scale")||"2",10),b=h.spatialReference,T=new Me.A({origin:new W.A({x:h.xmin,y:h.ymax,spatialReference:b}),blockWidth:f,blockHeight:u,pyramidBlockWidth:f,pyramidBlockHeight:u,compression:s,pyramidScalingFactor:I}),P=new W.A({x:h.width/t,y:h.height/r,spatialReference:b}),A=new Fe.A({width:t,height:r,extent:h,isPseudoSpatialReference:g,spatialReference:b,bandCount:a,pixelType:l,pixelSize:P,noDataValue:m,storageInfo:T}),F=Q(n,"datafile"),O=Q(n,"IndexFile");return{rasterInfo:A,files:{mrf:this.url,index:O||this.url.replace(".mrf",".idx"),data:F||this.url.replace(".mrf",ce.get(s).blobExtension)}}}_fetchAuxiliaryData(n){var e=this;return(0,M.A)(function*(){try{const{data:i}=yield e.request(e.url+".aux.xml",{responseType:"xml",signal:n?.signal});return Qe(i)}catch{return null}})()}};(0,R._)([(0,w.MZ)()],Se.prototype,"_files",void 0),(0,R._)([(0,w.MZ)()],Se.prototype,"_storageIndex",void 0),(0,R._)([(0,w.MZ)({type:String,json:{write:!0}})],Se.prototype,"datasetFormat",void 0),Se=(0,R._)([(0,q.$)("esri.layers.support.rasterDatasets.MRFRaster")],Se);const Sn=Se;var mt=v(38497);function bn(n){const e=n.fields,i=n.records,t=e.some(c=>"oid"===c.name.toLowerCase())?"OBJECTID":"OID",r=[{name:t,type:"esriFieldTypeOID",alias:"OID"}].concat(e.map(c=>({name:c.name,type:"esriFieldType"+c.typeName,alias:c.name}))),a=r.map(c=>c.name),s=[];let o=0,l=0;return i.forEach(c=>{const f={};for(f[t]=o++,l=1;l<a.length;l++)f[a[l]]=c[l-1];s.push({attributes:f})}),{displayFieldName:"",fields:r,features:s}}class wn{static get supportedVersions(){return[5]}static parse(e){const i=new DataView(e),t=3&i.getUint8(0);if(3!==t)return{header:{version:t},recordSet:null};const r=i.getUint32(4,!0),a=i.getUint16(8,!0),s=i.getUint16(10,!0),o={version:t,recordCount:r,headerByteCount:a,recordByteCount:s};let l=32;const c=[],f=[];let u;if(3===t){for(;13!==i.getUint8(l);)u=String.fromCharCode(i.getUint8(l+11)).trim(),c.push({name:(0,mt.w)(new Uint8Array(e,l,11)),type:u,typeName:["String","Date","Double","Boolean","String","Integer"][["C","D","F","L","M","N"].indexOf(u)],length:i.getUint8(l+16)}),l+=32;if(l+=1,c.length>0)for(;f.length<r&&e.byteLength-l>s;){const d=[];32===i.getUint8(l)?(l+=1,c.forEach(m=>{if("C"===m.type)d.push((0,mt.w)(new Uint8Array(e,l,m.length)).trim());else if("N"===m.type)d.push(parseInt(String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim(),10));else if("F"===m.type)d.push(parseFloat(String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim()));else if("D"===m.type){const y=String.fromCharCode.apply(null,new Uint8Array(e,l,m.length)).trim();d.push(new Date(parseInt(y.substring(0,4),10),parseInt(y.substring(4,6),10)-1,parseInt(y.substring(6,8),10)))}l+=m.length}),f.push(d)):l+=s}}return{header:o,fields:c,records:f,recordSet:bn({fields:c,records:f})}}}var pe=v(59520),De=v(77835);const _e=(n,e)=>n.get(e)?.values,Ae=(n,e)=>n.get(e)?.values?.[0];let ye=class extends fe{constructor(){super(...arguments),this._files=null,this._headerInfo=null,this._bufferSize=1048576,this.datasetFormat="TIFF"}open(n){var e=this;return(0,M.A)(function*(){yield e.init();const i=n?n.signal:null,{data:t}=yield e.request(e.url,{range:{from:0,to:e._bufferSize},responseType:"array-buffer",signal:i});if(!t)throw new J.A("tiffraster:open","failed to open url "+e.url);e.datasetName=e.url.slice(e.url.lastIndexOf("/")+1,e.url.lastIndexOf("."));const{littleEndian:r,firstIFDPos:a,isBigTiff:s}=(0,pe.uT)(t),o=[];yield e._readIFDs(o,t,r,a,0,s?8:4,i);const{imageInfo:l,rasterInfo:c}=function An(n){const e=(0,pe.uc)(n),{width:i,height:t,tileWidth:r,tileHeight:a,planes:s,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:f,pyramidBlockWidth:u,pyramidBlockHeight:d,pyramidResolutions:m,tileBoundary:y,affine:x,metadata:p}=e;let g=Ce(e.extent.spatialReference?.wkt||e.extent.spatialReference?.wkid),S=!!e.isPseudoGeographic;null==g&&(S=!0,g=new U.A({wkid:3857}));const I=new G.A({...e.extent,spatialReference:g}),b=new W.A(I?{x:I.xmin,y:I.ymax,spatialReference:g}:{x:0,y:0}),T=new Me.A({blockWidth:r,blockHeight:a,pyramidBlockWidth:u,pyramidBlockHeight:d,compression:l,origin:b,firstPyramidLevel:c,maximumPyramidLevel:f,pyramidResolutions:m,blockBoundary:y}),P=new W.A({x:(I.xmax-I.xmin)/i,y:(I.ymax-I.ymin)/t,spatialReference:g}),A=p?{BandProperties:p.bandProperties,DataType:p.dataType}:{};let F=null;const O=Ae(n[0],"PHOTOMETRICINTERPRETATION"),D=_e(n[0],"COLORMAP");if(O<=3&&D?.length>3&&D.length%3==0){F=[];const N=D.length/3;for(let B=0;B<N;B++)F.push([B,D[B]>>>8,D[B+N]>>>8,D[B+2*N]>>>8])}const C=new Fe.A({width:i,height:t,bandCount:s,pixelType:o,pixelSize:P,storageInfo:T,spatialReference:g,isPseudoSpatialReference:S,keyProperties:A,extent:I,colormap:F,statistics:p?p.statistics:null});if(x?.length&&(C.nativeExtent=new G.A({xmin:-.5,ymin:.5-t,xmax:i-.5,ymax:.5,spatialReference:g}),C.transform=new Ye.A({polynomialOrder:1,forwardCoefficients:[x[2]+x[0]/2,x[5]-x[3]/2,x[0],x[3],-x[1],-x[4]]}),C.extent=C.transform.forwardTransform(C.nativeExtent),C.pixelSize=new W.A({x:(I.xmax-I.xmin)/i,y:(I.ymax-I.ymin)/t,spatialReference:g}),T.origin.x=-.5,T.origin.y=.5),m){const{x:N,y:B}=C.pixelSize;m.forEach(k=>{k.x*=N,k.y*=B})}return{imageInfo:e,rasterInfo:C}}(o),f=(0,pe.zS)(o),u=(0,pe.r9)(o);if(e._headerInfo={littleEndian:r,isBigTiff:s,ifds:o,pyramidIFDs:f,maskIFDs:u,...l},e._set("rasterInfo",c),!l.isSupported)throw new J.A("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new J.A("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");c.isPseudoSpatialReference&&ue.A.getLogger(e).warn("The spatial reference for this tiff is unsupported. Only EPSG spatial reference codes and Esri WKTs are supported.");const d=o[0].get("PREDICTOR")?.values?.[0];if(3===o[0].get("SAMPLEFORMAT")?.values?.[0]&&2===d)throw new J.A("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floating point data");const{skipMapInfo:y,skipExtensions:x=[]}=e.ioConfig;if(!x.includes("aux.xml")&&!y){const p=yield e._fetchAuxiliaryMetaData(n);null!=p&&function Tn(n,e){if(e.statistics=n.statistics??e.statistics,e.histograms=n.histograms,n.histograms&&null==e.statistics&&(e.statistics=(0,me.Pg)(n.histograms)),n.transform&&null==e.transform){e.transform=n.transform,e.nativeExtent=e.extent;const i=e.transform.forwardTransform(e.nativeExtent);e.pixelSize=new W.A({x:(i.xmax-i.xmin)/e.width,y:(i.ymax-i.ymin)/e.height,spatialReference:e.spatialReference}),e.extent=i}e.isPseudoSpatialReference&&n.spatialReference&&(e.spatialReference=n.spatialReference,e.extent.spatialReference=e.nativeExtent.spatialReference=e.storageInfo.origin.spatialReference=e.spatialReference)}(p,c)}x.includes("vat.dbf")||1!==c.bandCount||"u8"!==c.pixelType||y||(c.attributeTable=yield e._fetchAuxiliaryTable(n),null!=c.attributeTable&&(c.keyProperties.DataType="thematic")),y&&e.updateImageSpaceRasterInfo(c),e.updateTileInfo()})()}fetchRawTile(n,e,i,t={}){var r=this;return(0,M.A)(function*(){if(!r._headerInfo?.isSupported||r.isBlockOutside(n,e,i))return null;const a=yield r._fetchRawTiffTile(n,e,i,!1,t);if(null!=a&&r._headerInfo.hasMaskBand){const s=yield r._fetchRawTiffTile(n,e,i,!0,t);null!=s&&s.pixels[0]instanceof Uint8Array&&(a.mask=s.pixels[0])}return a})()}_readIFDs(n,e,i,t,r,a=4,s){var o=this;return(0,M.A)(function*(){if(!t)return null;(t>=e.byteLength||t<0)&&(e=(yield o.request(o.url,{range:{from:t+r,to:t+r+o._bufferSize},responseType:"array-buffer",signal:s})).data,r=t+r,t=0);const l=yield o._readIFD(e,i,t,r,De.A.tiffTags,a,s);if(n.push(l.ifd),!l.nextIFD)return null;yield o._readIFDs(n,e,i,l.nextIFD-r,r,a,s)})()}_readIFD(n,e,i,t,r=De.A.tiffTags,a=4,s){var o=this;return(0,M.A)(function*(){if(!n)return null;const l=(0,pe.JM)(n,e,i,t,r,a);if(l.success){const c=[];if(l.ifd?.forEach(f=>{f.values||c.push(f)}),c.length>0){const f=c.map(d=>d.offlineOffsetSize).filter($e.Ru),u=Math.min.apply(null,f.map(d=>d[0]));if(Math.min.apply(null,f.map(d=>d[0]+d[1]))-u<=o._bufferSize){const{data:d}=yield o.request(o.url,{range:{from:u,to:u+o._bufferSize},responseType:"array-buffer",signal:s});n=d,t=u,c.forEach(m=>(0,pe.Cr)(n,e,m,t))}}if(l.ifd?.has("GEOKEYDIRECTORY")){const f=l.ifd.get("GEOKEYDIRECTORY"),u=f?.values;if(u&&u.length>4){const d=u[0]+"."+u[1]+"."+u[2],m=yield o._readIFD(n,e,f.valueOffset+6-t,t,De.A.geoKeys,2,s);f.data=m.ifd,f.data&&f.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[d]})}}return l}return l.requiredBufferSize&&l.requiredBufferSize!==n.byteLength?(n=(yield o.request(o.url,{range:{from:t,to:t+l.requiredBufferSize+4},responseType:"array-buffer",signal:s})).data).byteLength<l.requiredBufferSize?null:o._readIFD(n,e,0,t,De.A.tiffTags,4,s):void 0})()}_fetchRawTiffTile(n,e,i,t,r={}){var a=this;return(0,M.A)(function*(){const s=a._getTileLocation(n,e,i,t);if(!s)return null;const{ranges:o,actualTileWidth:l,actualTileHeight:c,ifd:f}=s,u=o.map(P=>a.request(a.url,{range:P,responseType:"array-buffer",signal:r.signal})),d=yield Promise.all(u),m=d.map(P=>P.data.byteLength).reduce((P,A)=>P+A),y=1===d.length?d[0].data:new ArrayBuffer(m),x=[0],p=[0];if(d.length>1){const P=new Uint8Array(y);for(let A=0,F=0;A<d.length;A++){const O=d[A].data;P.set(new Uint8Array(O),F),x[A]=F,F+=O.byteLength,p[A]=O.byteLength}}const{blockWidth:h,blockHeight:g}=a.getBlockWidthHeight(n),S=yield a.decodePixelBlock(y,{format:"tiff",customOptions:{headerInfo:a._headerInfo,ifd:f,offsets:x,sizes:p},width:h,height:g,planes:null,pixelType:null});if(null==S)return null;let I,b,T;if(l!==h||c!==g){let P=S.mask;if(P)for(I=0;I<g;I++)if(T=I*h,I<c)for(b=l;b<h;b++)P[T+b]=0;else for(b=0;b<h;b++)P[T+b]=0;else for(P=new Uint8Array(h*g),S.mask=P,I=0;I<c;I++)for(T=I*h,b=0;b<l;b++)P[T+b]=1}return S})()}_getTileLocation(n,e,i,t=!1){const{firstPyramidLevel:r,blockBoundary:a}=this.rasterInfo.storageInfo,s=0===n?0:n-(r-1),{_headerInfo:o}=this;if(!o)return null;const l=t?o.maskIFDs[s]:0===s?o?.ifds[0]:o?.pyramidIFDs[s-1];if(!l)return null;const c=(0,pe.XO)(l,o),f=_e(l,"TILEOFFSETS");if(void 0===f)return null;const u=_e(l,"TILEBYTECOUNTS"),{minRow:d,minCol:m,maxRow:y,maxCol:x}=a[s];if(e>y||i>x||e<d||i<m)return null;const p=Ae(l,"IMAGEWIDTH"),h=Ae(l,"IMAGELENGTH"),g=Ae(l,"TILEWIDTH"),S=Ae(l,"TILELENGTH"),I=[];if(c){const{bandCount:b}=this.rasterInfo;for(let T=0;T<b;T++){const P=T*(y+1)*(x+1)+e*(x+1)+i;I[T]={from:f[P],to:f[P]+u[P]-1}}}else{const b=e*(x+1)+i;I.push({from:f[b],to:f[b]+u[b]-1})}for(let b=0;b<I.length;b++)if(null==I[b].from||!I[b].to||I[b].to<0)return null;return{ranges:I,ifd:l,actualTileWidth:i===x&&p%g||g,actualTileHeight:e===y&&h%S||S}}_fetchAuxiliaryMetaData(n){var e=this;return(0,M.A)(function*(){try{const{data:i}=yield e.request(e.url+".aux.xml",{responseType:"xml",signal:n?.signal});return Qe(i)}catch{return null}})()}_fetchAuxiliaryTable(n){var e=this;return(0,M.A)(function*(){try{const{data:i}=yield e.request(e.url+".vat.dbf",{responseType:"array-buffer",signal:n?.signal}),t=wn.parse(i);return t?.recordSet?We.A.fromJSON(t.recordSet):null}catch{return null}})()}};(0,R._)([(0,w.MZ)()],ye.prototype,"_files",void 0),(0,R._)([(0,w.MZ)()],ye.prototype,"_headerInfo",void 0),(0,R._)([(0,w.MZ)()],ye.prototype,"_bufferSize",void 0),(0,R._)([(0,w.MZ)({type:String,json:{write:!0}})],ye.prototype,"datasetFormat",void 0),ye=(0,R._)([(0,q.$)("esri.layers.support.rasterDatasets.TIFFRaster")],ye);const Mn=ye,j=new Map;j.set("MRF",{desc:"Meta Raster Format",constructor:Sn}),j.set("TIFF",{desc:"GeoTIFF",constructor:Mn}),j.set("RasterTileServer",{desc:"Raster Tile Server",constructor:vn}),j.set("JPG",{desc:"JPG Raster Format",constructor:Ne}),j.set("PNG",{desc:"PNG Raster Format",constructor:Ne}),j.set("GIF",{desc:"GIF Raster Format",constructor:Ne}),j.set("BMP",{desc:"BMP Raster Format",constructor:Ne}),j.set("CovJSON",{desc:"COVJSON Raster Format",constructor:cn}),j.set("MEMORY",{desc:"In Memory Raster Format",constructor:Ve});class qe{static get supportedFormats(){const e=new Set;return j.forEach((i,t)=>e.add(t)),e}static open(e){var i=this;return(0,M.A)(function*(){const{url:t,ioConfig:r,source:a,sourceJSON:s}=e;let o=e.datasetFormat??r?.datasetFormat;null==o&&(t.includes(".")?o=t.slice(t.lastIndexOf(".")+1).toUpperCase():"coverage"===a?.type?.toLowerCase()?o="CovJSON":a?.extent&&a.pixelblocks&&(o="MEMORY")),"OVR"===o||"TIF"===o?o="TIFF":"JPG"===o||"JPEG"===o||"JFIF"===o?o="JPG":"COVJSON"===o&&(o="CovJSON"),t.toLowerCase().includes("/imageserver")&&!t.toLowerCase().includes("/wcsserver")&&(o="RasterTileServer");const l={url:t,source:a,sourceJSON:s,datasetFormat:o,ioConfig:r??{bandIds:null,sampling:null}};if(Object.keys(l).forEach(d=>{null==l[d]&&delete l[d]}),o){if(!i.supportedFormats.has(o))throw new J.A("rasterfactory:open","not a supported format "+o);if("CRF"===o)throw new J.A("rasterfactory:open",`cannot open raster: ${t}`);const d=new(j.get(o).constructor)(l);return yield d.open({signal:e.signal}),d}const c=Array.from(j.keys()).filter(d=>"CovJSON"!==d&&"Memory"!==d);let f=0;const u=()=>{if(o=c[f++],!o||"CRF"===o)return null;const d=new(j.get(o).constructor)(l);return d.open({signal:e.signal}).then(()=>d).catch(()=>u())};return u()})()}static register(e,i,t){j.has(e.toUpperCase())||j.set(e.toUpperCase(),{desc:i,constructor:t})}}var Fn=v(41843),Je=v(71655);let H=class extends((0,bt.dM)((0,_t.j)((0,Yt.q)((0,Kt.A)((0,wt.d)(Xt((0,qt.e)((0,St.b)((0,Qt.J)((0,gt.P)((0,yt.O)(Rt.A)))))))))))){constructor(...n){var e;super(...n),e=this,this._primaryRasters=[],this.bandIds=null,this.interpolation=null,this.legendEnabled=!0,this.isReference=null,this.listMode="show",this.sourceJSON=null,this.version=null,this.type="imagery-tile",this.operationalLayerType="ArcGISTiledImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.fields=null,this.source=void 0,this._debouncedSaveOperations=(0,xe.sg)(function(){var i=(0,M.A)(function*(t,r,a){const{save:s,saveAs:o}=yield Promise.all([v.e(2076),v.e(3236)]).then(v.bind(v,23518));switch(t){case Je.X.SAVE:return s(e,r);case Je.X.SAVE_AS:return o(e,a,r)}});return function(t,r,a){return i.apply(this,arguments)}}())}normalizeCtorArgs(n,e){return"string"==typeof n?{url:n,...e}:n}load(n){const e=null!=n?n.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},n).catch(xe.QP).then(()=>this._openRaster(e))),Promise.resolve(this)}get defaultPopupTemplate(){return this.createPopupTemplate()}get rasterFields(){const n=[new ve.A({name:"Raster.ServicePixelValue",alias:"Pixel Value",domain:null,editable:!1,length:50,type:"string"}),new ve.A({name:"Raster.ServicePixelValue.Raw",alias:"Raw Pixel Value",domain:null,editable:!1,length:50,type:"string"})],e=this.raster?.rasterInfo??this.serviceRasterInfo,i=e?.attributeTable,t=null!=i?i.fields:null;if(t){const o=t.filter(l=>"oid"!==l.type&&"value"!==l.name.toLowerCase()).map(l=>{const c=l.clone();return c.name="Raster."+l.name,c});n.push(...o)}const a=e?.dataType,s=e?.multidimensionalInfo;if(("vector-magdir"===a||"vector-uv"===a)&&null!=s){const o=s.variables[0].unit?.trim();n.push(new ve.A({name:"Raster.Magnitude",alias:"Magnitude"+(o?` (${o})`:""),domain:null,editable:!1,type:"double"})),n.push(new ve.A({name:"Raster.Direction",alias:"Direction (\xb0)",domain:null,editable:!1,type:"double"}))}return n}createPopupTemplate(n){const{rasterFields:e}=this,i=new Set(e.map(({name:t})=>t).filter(t=>"raster.servicepixelvalue.raw"!==t.toLowerCase()));return(0,Fn.tn)({fields:e,title:this.title},{...n,visibleFieldNames:i})}generateRasterInfo(n,e){var i=this;return(0,M.A)(function*(){if(n=(0,Te.PZ)(Le.A,n),yield i.load(),!n||"none"===n.functionName?.toLowerCase())return i.serviceRasterInfo;try{const{rasterInfo:t}=yield i._openFunctionRaster(n,e);return t}catch(t){throw t instanceof J.A?t:new J.A("imagery-tile-layer","the given raster function is not supported")}})()}save(n){var e=this;return(0,M.A)(function*(){return e._debouncedSaveOperations(Je.X.SAVE,n)})()}saveAs(n,e){var i=this;return(0,M.A)(function*(){return i._debouncedSaveOperations(Je.X.SAVE_AS,e,n)})()}write(n,e){const i=this._primaryRasters[0]??this.raster;return(this.loaded?"RasterTileServer"===i.datasetFormat&&("Raster"===i.tileType||"Map"===i.tileType):this.url&&/\/ImageServer(\/|\/?$)/i.test(this.url))?super.write(n,e):(e?.messages&&e.messages.push(new J.A("layer:unsupported",`Layers (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${e.origin}/${e.layerContainerType||"operational-layers"}'`,{layer:this})),null)}_openRaster(n){var e=this;return(0,M.A)(function*(){let i=!1;if(e.raster)yield e._openFromRaster(e.raster,n),i="Function"===e.raster.datasetFormat;else{const{url:r,rasterFunction:a,source:s}=e;if(!r&&!s)throw new J.A("imagery-tile-layer:open","missing url or source parameter");s?yield e._openFromSource(s,n):a?yield e._openFromUrlWithRasterFunction(r,a,n):yield e._openFromUrl(r,n)}const t=e.raster.rasterInfo;if(!t)throw new J.A("imagery-tile-layer:load","cannot load resources on "+e.url);if(e._set("serviceRasterInfo",i?t:e._primaryRasters[0].rasterInfo),e._set("spatialReference",t.spatialReference),e.sourceJSON=e.sourceJSON||e.raster.sourceJSON,null!=e.sourceJSON){const r="Map"===e.raster.tileType&&null!=e.sourceJSON.minLOD&&null!=e.sourceJSON.maxLOD?e.sourceJSON:{...e.sourceJSON,minScale:0,maxScale:0};e.read(r,{origin:"service"})}else e.read({tileInfo:e.serviceRasterInfo?.storageInfo.tileInfo.toJSON()},{origin:"service"});e.title||(e.title=e.raster.datasetName),"Map"===e.raster.tileType&&(e.popupEnabled=!1),e._configDefaultSettings(),e.addHandles((0,xt.wB)(()=>e.customParameters,r=>{e.raster&&(e.raster.ioConfig.customFetchParameters=r)}))})()}_openFromRaster(n,e){var i=this;return(0,M.A)(function*(){n.rasterInfo||(yield n.open({signal:e})),i._primaryRasters="Function"===n.datasetFormat?n.primaryRasters.rasters:[n],i.url||(i.url=i._primaryRasters[0].url)})()}_openFromUrlWithRasterFunction(n,e,i){var t=this;return(0,M.A)(function*(){const r=[n];e&&(0,Ue.UD)(e.toJSON(),r);const a=yield Promise.all(r.map(o=>qe.open({url:o,sourceJSON:t.sourceJSON,ioConfig:{sampling:"closest",...t.ioConfig,customFetchParameters:t.customParameters},signal:i}))),s=a.findIndex(o=>null==o);if(s>-1)throw new J.A("imagery-tile-layer:open",`cannot open raster: ${r[s]}`);return t._primaryRasters=a,t._initializeWithFunctionRaster(e)})()}_openFromUrl(n,e){var i=this;return(0,M.A)(function*(){const t=yield qe.open({url:n,sourceJSON:i.sourceJSON,ioConfig:{sampling:"closest",...i.ioConfig,customFetchParameters:i.customParameters},signal:e});if(null==t)throw new J.A("imagery-tile-layer:open",`cannot open raster: ${n}`);i._primaryRasters=[t],i.raster=t})()}_openFromSource(n,e){var i=this;return(0,M.A)(function*(){const t="the tiled imagery data source is not supported",r="coverage"===n.type?.toLowerCase()?"CovJSON":n.extent&&n.pixelBlock?"MEMORY":null;if(!r)throw new J.A("imagery-tile-layer:open",t);"MEMORY"===r&&(n={extent:n.extent,pixelBlocks:[n.pixelBlock]});const a=yield qe.open({url:"",source:n,datasetFormat:r,ioConfig:{sampling:"closest",...i.ioConfig,customFetchParameters:i.customParameters},signal:e});if(null==a)throw new J.A("imagery-tile-layer:open",t);i._primaryRasters=[a],i.rasterFunction?yield i._initializeWithFunctionRaster(i.rasterFunction):i.raster=a})()}_openFunctionRaster(n,e){var i=this;return(0,M.A)(function*(){const t={raster:i._primaryRasters[0]};i._primaryRasters.length>1&&i._primaryRasters.forEach(s=>t[s.url]=s);const r=(0,Ue.vt)(n.functionDefinition?.toJSON()??n.toJSON(),t),a=new lt({rasterFunction:r});return yield a.open(e),a})()}_initializeWithFunctionRaster(n,e){var i=this;return(0,M.A)(function*(){try{i.raster=yield i._openFunctionRaster(n,e)}catch(t){t instanceof J.A&&ue.A.getLogger(i).error("imagery-tile-layer:open",t.message),ue.A.getLogger(i).warn("imagery-tile-layer:open","the raster function cannot be applied and is removed"),i._set("rasterFunction",null),i.raster=i._primaryRasters[0]}})()}};(0,R._)([(0,w.MZ)({clonable:!1})],H.prototype,"_primaryRasters",void 0),(0,R._)([(0,w.MZ)({type:[Te.jz],json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"0,1,2"!==this.bandIds?.join(",")}}}}})],H.prototype,"bandIds",void 0),(0,R._)([(0,w.MZ)({json:{write:{overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType||"bilinear"!==this.interpolation}}}}}),(0,It.e)(en.SZ)],H.prototype,"interpolation",void 0),(0,R._)([(0,w.MZ)(Ee.fV)],H.prototype,"legendEnabled",void 0),(0,R._)([(0,w.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],H.prototype,"isReference",void 0),(0,R._)([(0,w.MZ)({type:["show","hide"]})],H.prototype,"listMode",void 0),(0,R._)([(0,w.MZ)({json:{read:!0,write:!0}})],H.prototype,"blendMode",void 0),(0,R._)([(0,w.MZ)()],H.prototype,"sourceJSON",void 0),(0,R._)([(0,w.MZ)({readOnly:!0,json:{origins:{service:{read:{source:"currentVersion"}}}}})],H.prototype,"version",void 0),(0,R._)([(0,w.MZ)({readOnly:!0,json:{read:!1}})],H.prototype,"type",void 0),(0,R._)([(0,w.MZ)({type:["ArcGISTiledImageServiceLayer"]})],H.prototype,"operationalLayerType",void 0),(0,R._)([(0,w.MZ)({type:Boolean,value:!0,json:{read:{source:"disablePopup",reader:(n,e)=>!e.disablePopup},write:{target:"disablePopup",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}},writer(n,e,i){e[i]=!n}}}})],H.prototype,"popupEnabled",void 0),(0,R._)([(0,w.MZ)({type:pt.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo",overridePolicy(){return{enabled:!this.loaded||"Raster"===this.raster.tileType}}}}})],H.prototype,"popupTemplate",void 0),(0,R._)([(0,w.MZ)({readOnly:!0})],H.prototype,"defaultPopupTemplate",null),(0,R._)([(0,w.MZ)({readOnly:!0,type:[ve.A]})],H.prototype,"fields",void 0),(0,R._)([(0,w.MZ)({readOnly:!0,type:[ve.A]})],H.prototype,"rasterFields",null),(0,R._)([(0,w.MZ)({constructOnly:!0})],H.prototype,"source",void 0),H=(0,R._)([(0,q.$)("esri.layers.ImageryTileLayer")],H);const Pn=H}}]);