"use strict";(self.webpackChunkangular_18_test=self.webpackChunkangular_18_test||[]).push([[1375,3014,9557],{64123:(Ae,W,p)=>{p.r(W),p.d(W,{default:()=>cn});var y=p(10467),s=p(8189),M=p(92165),w=p(90660),v=p(5922),_=p(39693),b=p(56492),o=p(85211),j=(p(3248),p(35150)),g=(p(40707),p(76576)),F=p(50305),te=p(95478),z=p(21152),fe=p(81098),Pe=p(75257),D=p(89563),_e=p(23159),$=p(77806),vr=p(48900),Rr=p(45272),V=p(55739),Y=p(17221),vt=p(58701),et=p(22329),Ir=p(52593),N=p(71065),O=p(49343),Sr=p(96115);const xr={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}};var Ce=p(32681),Ar=p(97890),_r=p(84495);const Mr=new Set(["u1","u2","u4","u8","s8","u16","s16"]),wr={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},br=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function nr(n){return br.has(n.type)}function Rt(n,r){if(!n||!r)return(0,$.o8)(n||r);const a=(0,$.o8)(n);if(a.functionDefinition&&r.rasterFunctionDefinition){const e=r.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=void 0),sr(a.functionDefinition.arguments,r),a.rasterFunctionDefinition=a.functionDefinition.toJSON()}else"none"!==r.functionName?.toLowerCase()&&(or(a.functionArguments).Raster=r);return a}function sr(n,r){for(const a in n)"raster"===a.toLowerCase()&&("RasterFunctionVariable"===n[a].type?(n[a]=r.rasterFunctionDefinition,n[a].type="RasterFunctionTemplate"):"RasterFunctionTemplate"===n[a].type&&sr(n[a].arguments,r))}function me(n){const r=(0,$.o8)(xr[n.functionName+"Function"]),a=n.functionArguments;for(const e in a)"raster"===e.toLowerCase()?(r.arguments[e]=me(a[e]),r.arguments[e].type="RasterFunctionTemplate"):"colormap"===e.toLowerCase()?(r.arguments[e].value=Cr(a[e]),r.arguments.ColorSchemeType.value=0):r.arguments[e].value=a[e];return r}function or(n){const r=n?.Raster??n?.raster;return r&&"esri.layers.support.RasterFunction"===r.declaredClass?or(r.functionArguments):n}const $e={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function tt(n,r){const a=Mr.has(r)?(0,Sr.hP)(r):null;return a&&n.push([Math.floor(a[0]-1),0,0,0],[Math.ceil(a[1]+1),0,0,0]),n}function ar(n){if(null==n)return;const{fields:r}=n;return r?.find(e=>e?.name&&"value"===e.name.toLowerCase())?.name}function lr(n){return"polygon-3d"===n.symbol?.type?n.symbol.symbolLayers?.find(r=>"fill"===r.type)?.material?.color:n.symbol?.color}function Zr(n){const r=[];return n?.forEach(a=>{const e=a;if(Array.isArray(e))r.push(e);else{if(null==e.min||null==e.max)return;r.push([e.min,e.max,e.avg||0,e.stddev||0])}}),r}function Cr(n){const r=[],a=[];return n.forEach(e=>{r.push(e[0]),a.push((0,Ce.vL)([...e.slice(1),255]))}),{type:"RasterColormap",values:r,colors:a}}var ie=p(3147),q=p(9932);let L=class extends N.oY{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(n,r,a){this.layer.version<10.3||(r[a]=n)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(n,r,a){this.format&&this.format.toLowerCase().includes("jpg")&&null!=n&&(r[a]=n)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(n,r,a){"lerc"===this.format&&null!=n&&(r[a]=n)}get format(){return"vector-field"===this.layer.renderer?.type?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(n,r,a){"lerc"===this.format&&this.layer.version>=10.5&&(r[a]=n)}get version(){const n=this.layer;return n.commitProperty("bandIds"),n.commitProperty("format"),n.commitProperty("compressionQuality"),n.commitProperty("compressionTolerance"),n.commitProperty("interpolation"),n.commitProperty("noData"),n.commitProperty("noDataInterpretation"),n.commitProperty("mosaicRule"),n.commitProperty("rasterFunction"),n.commitProperty("adjustAspectRatio"),n.commitProperty("pixelFilter"),n.commitProperty("definitionExpression"),n.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(n){this._set("version",n)}get mosaicRule(){const n=this.layer;let r=n.mosaicRule;const a=n.definitionExpression;return r?a&&a!==r.where&&(r=r.clone(),r.where=a):a&&(r=new ie.A({where:a})),r}get rasterFunction(){const n=this.layer;let{rasterFunction:r}=n;const a=n.pixelFilter,e=!n.format||n.format.includes("jpg")||n.format.includes("png");r=this._addResampleRasterFunction(r);const t=n.multidimensionalSubset?.areaOfInterest;return t&&(r=function Vr(n,r){return Rt(new O.A({functionName:"Clip",functionArguments:{ClippingGeometry:r.toJSON(),ClippingType:1}}),n)}(r,t)),e&&!a&&"vector-field"!==n.renderer?.type&&(r=this.combineRendererWithRenderingRule(r)),r}combineRendererWithRenderingRule(n){const r=this.layer,{rasterInfo:a,renderer:e}=r;return n=n||r.rasterFunction,e&&nr(e)?Rt(function Fr(n,r){switch(r=r||{},n.type){case"raster-stretch":return function Tr(n,r){const a=r.convertToRFT,e=new O.A;e.functionName="Stretch";const t=$e[Ar.u.toJSON(n.stretchType)],i="u8",l={StretchType:t,Statistics:Zr(n.statistics??[]),DRA:n.dynamicRangeAdjustment,UseGamma:n.useGamma,Gamma:n.gamma,ComputeGamma:n.computeGamma};if(null!=n.outputMin&&(l.Min=n.outputMin),null!=n.outputMax&&(l.Max=n.outputMax),t===$e.standardDeviation?(l.NumberOfStandardDeviations=n.numberOfStandardDeviations,e.outputPixelType=i):t===$e.percentClip?(l.MinPercent=n.minPercent,l.MaxPercent=n.maxPercent,e.outputPixelType=i):t===$e.minMax?e.outputPixelType=i:t===$e.sigmoid&&(l.SigmoidStrengthLevel=n.sigmoidStrengthLevel),e.functionArguments=l,e.variableName="Raster",n.colorRamp){const u=n.colorRamp,m=new O.A;if(a)m.functionArguments={ColorRamp:(0,Ce.hf)(u)};else{const d=(0,Ce.hs)(u,!0);if(d)m.functionArguments={colorRampName:d};else if(!r.convertColorRampToColormap||"algorithmic"!==u.type&&"multipart"!==u.type){const c=n.colorRamp.toJSON();"algorithmic"===c.type?c.algorithm=c.algorithm||"esriCIELabAlgorithm":"multipart"===c.type&&c.colorRamps?.length&&c.colorRamps.forEach(h=>h.algorithm=h.algorithm||"esriCIELabAlgorithm"),m.functionArguments={colorRamp:c}}else m.functionArguments={Colormap:(0,Ce.R8)(u)}}return m.variableName="Raster",m.functionName="Colormap",m.functionArguments.Raster=e,a?new O.A({rasterFunctionDefinition:me(m)}):m}return a?new O.A({rasterFunctionDefinition:me(e)}):e}(n,r);case"class-breaks":return function jr(n,r){const a=[],e=[],t=[],i=[],{pixelType:u,rasterAttributeTable:m}=r,d=null==m?null:m.features,c=ar(m);if(c&&d&&Array.isArray(d)&&n.classBreakInfos){n.classBreakInfos.forEach((f,P)=>{const U=f.symbol?.color;let J;U?.a&&null!=f.minValue&&null!=f.maxValue&&d.forEach(B=>{null!=f.minValue&&null!=f.maxValue&&(J=B.attributes[n.field],(J>=f.minValue&&J<f.maxValue||P===n.classBreakInfos.length-1&&J>=f.minValue)&&i.push([B.attributes[c],U.r,U.g,U.b]))})});const x=u?tt(i,u):i,S=new O.A;return S.functionName="Colormap",S.functionArguments={},S.functionArguments.Colormap=x,S.variableName="Raster",r.convertToRFT?new O.A({rasterFunctionDefinition:me(S)}):S}n.classBreakInfos.forEach((x,S)=>{if(null==x.minValue||null==x.maxValue)return;const f=x.symbol&&x.symbol.color;f?.a?(a.push(0===S?x.minValue:x.minValue+1e-4,x.maxValue+1e-4),e.push(S),i.push([S,f.r,f.g,f.b])):t.push(x.minValue,x.maxValue)});const h=u?tt(i,u):i,I=new O.A;I.functionName="Remap",I.functionArguments={InputRanges:a,OutputValues:e,NoDataRanges:t},I.variableName="Raster";const R=new O.A;return R.functionName="Colormap",R.functionArguments={Colormap:h,Raster:I},r.convertToRFT?new O.A({rasterFunctionDefinition:me(R)}):R}(n,r);case"unique-value":return function Or(n,r){const a=[],{pixelType:e,rasterAttributeTable:t}=r,i=null==t?null:t.features,l=ar(t),u=n.defaultSymbol?.color?.toRgb(),m=n.uniqueValueInfos;if(m)if(i){if(l){const h=new Map;m.forEach(R=>{const x=R.value,S=lr(R);null!=x&&S?.a&&h.set(String(x),S.toRgb())});const I=n.field;I&&i.forEach(({attributes:R})=>{const x=String(R[I]),S=R[l],f=h.get(x);f?a.push([S,...f]):u&&a.push([S,...u])})}}else for(let h=0;h<m.length;h++){const I=m[h],R=lr(I),x=+I.value;if(R?.a){if(isNaN(x))return null;a.push([x,R.r,R.g,R.b])}}const d=e?tt(a,e):a,c=new O.A;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=d,c.variableName="Raster",r.convertToRFT?new O.A({rasterFunctionDefinition:me(c)}):c}(n,r);case"raster-colormap":return function Nr(n,r){const a=n.extractColormap();if(!a||0===a.length)return null;const{pixelType:e}=r,t=e?tt(a,e):a,i=new O.A;return i.functionName="Colormap",i.functionArguments={},i.functionArguments.Colormap=t,r.convertToRFT?new O.A({rasterFunctionDefinition:me(i)}):i}(n,r);case"vector-field":return function Pr(n,r){const a=new O.A;a.functionName="VectorFieldRenderer";const{dataType:e,bandNames:t}=r,i="vector-uv"===e;let l,u;if(t&&2===t.length){const R=t.map(x=>x.toLowerCase());l=R.indexOf("magnitude"),u=R.indexOf("direction")}-1!==l&&null!==l||(l=0,u=1);const m="arithmetic"===n.rotationType?1:2,d="flow-from"===n.flowRepresentation?0:1,c=n.visualVariables?n.visualVariables.find(R=>"Magnitude"===R.field):new _r.A,h={magnitudeBandID:l,directionBandID:u,isUVComponents:i,referenceSystem:m,massFlowAngleRepresentation:d,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:wr[n.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};a.functionArguments=h;const I=me(a);return r.convertToRFT?O.A.fromJSON({rasterFunctionDefinition:I}):a}(n,r);case"raster-shaded-relief":return function Dr(n,r){const a=r.convertToRFT;if("elevation"!==r.dataType&&("generic"!==r.dataType||1!==r.bandCount||"s16"!==r.pixelType&&"s32"!==r.pixelType&&"f32"!==r.pixelType&&"f64"!==r.pixelType))return new O.A;const e=new O.A;e.functionName="Hillshade";const t="traditional"===n.hillshadeType?0:1,i="none"===n.scalingType?1:3,l={HillshadeType:t,SlopeType:i,ZFactor:n.zFactor};return 0===t&&(l.Azimuth=n.azimuth,l.Altitude=n.altitude),3===i&&(l.PSPower=n.pixelSizePower,l.PSZFactor=n.pixelSizeFactor),e.functionArguments=l,e.variableName="Raster",n.colorRamp&&(e.functionName="ShadedRelief",a?l.ColorRamp=(0,Ce.hf)(n.colorRamp):l.Colormap=(0,Ce.R8)(n.colorRamp)),a?new O.A({rasterFunctionDefinition:me(e)}):e}(n,r);case"flow":throw new Error("Unsupported rendering rule.")}}(e,{rasterAttributeTable:a.attributeTable,pixelType:a.pixelType,dataType:a.dataType,bandNames:a.bandInfos.map(({name:t})=>t),convertColorRampToColormap:r.version<10.6,convertToRFT:!!n?.rasterFunctionDefinition,bandCount:a.bandCount}),n):n}_addResampleRasterFunction(n){if("vector-field"!==this.layer.renderer?.type||"Resample"===n?.functionName)return n;let e=new O.A({functionName:"Resample",functionArguments:{ResamplingType:"esriImageServiceDataTypeVector-UV"===this.layer.serviceDataType?7:10,InputCellSize:this.layer.serviceRasterInfo.pixelSize}});return e=n?.rasterFunctionDefinition?new O.A({rasterFunctionDefinition:me(e)}):e,Rt(e,n)}};(0,s._)([(0,o.MZ)()],L.prototype,"layer",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],L.prototype,"adjustAspectRatio",null),(0,s._)([(0,F.K)("adjustAspectRatio")],L.prototype,"writeAdjustAspectRatio",null),(0,s._)([(0,o.MZ)({json:{write:!0}})],L.prototype,"bandIds",null),(0,s._)([(0,o.MZ)({json:{write:!0}})],L.prototype,"compression",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],L.prototype,"compressionQuality",null),(0,s._)([(0,F.K)("compressionQuality")],L.prototype,"writeCompressionQuality",null),(0,s._)([(0,o.MZ)({json:{write:!0}})],L.prototype,"compressionTolerance",null),(0,s._)([(0,F.K)("compressionTolerance")],L.prototype,"writeCompressionTolerance",null),(0,s._)([(0,o.MZ)({json:{write:!0}})],L.prototype,"format",null),(0,s._)([(0,o.MZ)({type:String,json:{read:{reader:q.SZ.read},write:{writer:q.SZ.write}}})],L.prototype,"interpolation",null),(0,s._)([(0,o.MZ)({json:{write:!0}})],L.prototype,"noData",null),(0,s._)([(0,o.MZ)({type:String,json:{read:{reader:q.hm.read},write:{writer:q.hm.write}}})],L.prototype,"noDataInterpretation",null),(0,s._)([(0,o.MZ)({json:{write:!0}})],L.prototype,"pixelType",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],L.prototype,"lercVersion",void 0),(0,s._)([(0,F.K)("lercVersion")],L.prototype,"writeLercVersion",null),(0,s._)([(0,o.MZ)({type:Number})],L.prototype,"version",null),(0,s._)([(0,o.MZ)({json:{write:!0}})],L.prototype,"mosaicRule",null),(0,s._)([(0,o.MZ)({json:{write:!0,name:"renderingRule"}})],L.prototype,"rasterFunction",null),L=(0,s._)([(0,g.$)("esri.layers.support.ExportImageServiceParameters")],L);var De=p(29141),Er=p(73258),ur=p(63014),Jr=p(70489),It=p(21980),pr=p(83179),Lr=p(85889),He=p(20053),St=p(99263),Gr=p(50444),rt=p(22151),Ur=p(54636),Te=p(77098),A=p(68800),K=p(1749);let Me=class extends((0,w.O)(N.oY)){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};(0,s._)([(0,o.MZ)({type:K.A,json:{read:!0}})],Me.prototype,"fromGeometry",void 0),(0,s._)([(0,o.MZ)({type:K.A,json:{read:!0,write:!0}})],Me.prototype,"toGeometry",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],Me.prototype,"objectIds",void 0),(0,s._)([(0,o.MZ)({type:String,json:{write:!0}})],Me.prototype,"where",void 0),(0,s._)([(0,o.MZ)({type:Number,json:{write:!0}})],Me.prototype,"maxCount",void 0),Me=(0,s._)([(0,g.$)("esri.rest.support.FindImagesParameters")],Me);const Br=Me,mr=n=>{let r=class extends n{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return(0,s._)([(0,o.MZ)({json:{write:!0}})],r.prototype,"make",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],r.prototype,"model",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],r.prototype,"focalLength",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],r.prototype,"pixelSize",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],r.prototype,"rows",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],r.prototype,"cols",void 0),r=(0,s._)([(0,g.$)("esri.rest.support.CameraInfoMixin")],r),r};let oe=class extends(mr(N.oY)){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(n,r){r.acquisitionDate=n?.getTime()}};(0,s._)([(0,o.MZ)({json:{write:!0}})],oe.prototype,"id",void 0),(0,s._)([(0,o.MZ)({json:{name:"uri",write:!0}})],oe.prototype,"referenceUri",void 0),(0,s._)([(0,o.MZ)({type:Date,json:{write:!0}})],oe.prototype,"acquisitionDate",void 0),(0,s._)([(0,F.K)("acquisitionDate")],oe.prototype,"writeAcquisitionDate",null),(0,s._)([(0,o.MZ)({json:{write:!0}})],oe.prototype,"cameraID",void 0),(0,s._)([(0,o.MZ)({type:K.A,json:{write:!0}})],oe.prototype,"center",void 0),(0,s._)([(0,o.MZ)({type:K.A,json:{write:!0}})],oe.prototype,"perspectiveCenter",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],oe.prototype,"orientation",void 0),oe=(0,s._)([(0,g.$)("esri.rest.support.ImageInspectionInfo")],oe);const zr=oe;let it=class extends N.oY{constructor(){super(...arguments),this.images=null}};(0,s._)([(0,o.MZ)({type:[zr],json:{write:!0}})],it.prototype,"images",void 0),it=(0,s._)([(0,g.$)("esri.rest.support.FindImagesResult")],it);const $r=it;var xt,ce=p(32034);let je=xt=class extends N.oY{constructor(n){super(n),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new xt((0,$.o8)({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};(0,s._)([(0,o.MZ)({type:[String],json:{name:"angleName",write:!0}})],je.prototype,"angleNames",void 0),(0,s._)([(0,o.MZ)({type:K.A,json:{write:!0}})],je.prototype,"point",void 0),(0,s._)([(0,o.MZ)({type:ce.A,json:{write:!0}})],je.prototype,"spatialReference",void 0),(0,s._)([(0,o.MZ)({type:V.jz,json:{write:!0}})],je.prototype,"rasterId",void 0),je=xt=(0,s._)([(0,g.$)("esri.rest.support.ImageAngleParameters")],je);const Hr=je;let Ve=class extends N.oY{constructor(n){super(n),this.north=null,this.up=null,this.spatialReference=null}};(0,s._)([(0,o.MZ)({type:Number,json:{write:!0}})],Ve.prototype,"north",void 0),(0,s._)([(0,o.MZ)({type:Number,json:{write:!0}})],Ve.prototype,"up",void 0),(0,s._)([(0,o.MZ)({type:ce.A,json:{write:!0}})],Ve.prototype,"spatialReference",void 0),Ve=(0,s._)([(0,g.$)("esri.rest.support.ImageAngleResult")],Ve);const Qr=Ve;var k=p(82663),G=p(61320);const ne=new(p(49976).J)({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let ae=class extends N.oY{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};var At;(0,s._)([(0,o.MZ)()],ae.prototype,"type",void 0),(0,s._)([(0,o.MZ)({type:ne.apiValues,json:{read:ne.read,write:ne.write}})],ae.prototype,"measureOperation",void 0),(0,s._)([(0,o.MZ)({type:ie.A,json:{write:!0}})],ae.prototype,"mosaicRule",void 0),(0,s._)([(0,o.MZ)({type:K.A,json:{write:!0}})],ae.prototype,"pixelSize",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],ae.prototype,"raster",void 0),ae=(0,s._)([(0,g.$)("esri.rest.support.BaseImageMeasureParameters")],ae);let ve=At=class extends ae{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(n,r,a){null!=n&&(r.geometryType=(0,G.$B)(n),r[a]=n.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new At((0,$.o8)({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,s._)([(0,o.MZ)({types:z.yR,json:{name:"fromGeometry",read:!0,write:!0}})],ve.prototype,"geometry",void 0),(0,s._)([(0,F.K)("geometry")],ve.prototype,"writeGeometry",null),(0,s._)([(0,o.MZ)({type:ne.apiValues,json:{write:ne.write}})],ve.prototype,"measureOperation",null),(0,s._)([(0,o.MZ)({json:{read:!0}})],ve.prototype,"is3D",void 0),(0,s._)([(0,o.MZ)({type:String,json:{read:k.Sk.read,write:k.Sk.write}})],ve.prototype,"linearUnit",void 0),(0,s._)([(0,o.MZ)({type:String,json:{read:k.dk.read,write:k.dk.write}})],ve.prototype,"areaUnit",void 0),ve=At=(0,s._)([(0,g.$)("esri.rest.support.ImageAreaParameters")],ve);const Wr=ve;let we=class extends N.oY{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};(0,s._)([(0,o.MZ)({type:Number,json:{read:!0,write:!0}})],we.prototype,"value",void 0),(0,s._)([(0,o.MZ)({type:String,json:{read:!0,write:!0}})],we.prototype,"displayValue",void 0),(0,s._)([(0,o.MZ)({type:Number,json:{read:!0,write:!0}})],we.prototype,"uncertainty",void 0),we=(0,s._)([(0,g.$)("esri.rest.support.BaseImageMeasureResult.BaseImageMeasureResultValue")],we);let Ee=class extends we{constructor(){super(...arguments),this.unit=null}};(0,s._)([(0,o.MZ)({type:String,json:{read:k.Sk.read,write:k.Sk.write}})],Ee.prototype,"unit",void 0),Ee=(0,s._)([(0,g.$)("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultLengthValue")],Ee);let nt=class extends we{constructor(){super(...arguments),this.unit=null}};(0,s._)([(0,o.MZ)({type:String,json:{read:k.dk.read,write:k.dk.write}})],nt.prototype,"unit",void 0),nt=(0,s._)([(0,g.$)("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAreaValue")],nt);let Qe=class extends we{constructor(){super(...arguments),this.unit=null}};(0,s._)([(0,o.MZ)({type:String,json:{read:k.b$.read,write:k.b$.write}})],Qe.prototype,"unit",void 0),Qe=(0,s._)([(0,g.$)("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAngleValue")],Qe);let be=class extends N.oY{constructor(){super(...arguments),this.name=null,this.sensorName=null}};(0,s._)([(0,o.MZ)({type:String,json:{read:!0,write:!0}})],be.prototype,"name",void 0),(0,s._)([(0,o.MZ)({type:String,json:{read:!0,write:!0}})],be.prototype,"sensorName",void 0),be=(0,s._)([(0,g.$)("esri.rest.support.BaseImageMeasureResult")],be);let Ke=class extends be{constructor(){super(...arguments),this.area=null,this.perimeter=null}};(0,s._)([(0,o.MZ)({type:nt,json:{read:!0,write:!0}})],Ke.prototype,"area",void 0),(0,s._)([(0,o.MZ)({type:Ee,json:{read:!0,write:!0}})],Ke.prototype,"perimeter",void 0),Ke=(0,s._)([(0,g.$)("esri.rest.support.ImageAreaResult")],Ke);const Yr=Ke;let st=class extends((0,w.O)(N.oY)){constructor(){super(...arguments),this.outSpatialReference=null}};(0,s._)([(0,o.MZ)({type:ce.A,json:{name:"outSR",write:!0}})],st.prototype,"outSpatialReference",void 0),st=(0,s._)([(0,g.$)("esri.rest.support.ImageBoundaryParameters")],st);const Xr=st;var We=p(28067),ot=p(55861);let Je=class extends N.oY{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(n,r){return null==n?null:n.rings?ot.A.fromJSON(n):We.A.fromJSON(n)}};(0,s._)([(0,o.MZ)({type:Number,json:{write:!0}})],Je.prototype,"area",void 0),(0,s._)([(0,o.MZ)({json:{name:"shape",write:!0}})],Je.prototype,"geometry",void 0),(0,s._)([(0,Y.w)("geometry")],Je.prototype,"readGeometry",null),Je=(0,s._)([(0,g.$)("esri.rest.support.ImageBoundaryResult")],Je);const qr=Je;var _t;let de=_t=class extends ae{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(n,r,a){null!=n&&(r.geometryType=(0,G.$B)(n),r[a]=n.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new _t((0,$.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,s._)([(0,o.MZ)({type:K.A,json:{read:!0,write:!0}})],de.prototype,"fromGeometry",void 0),(0,s._)([(0,F.K)("fromGeometry")],de.prototype,"writeFromGeometry",null),(0,s._)([(0,o.MZ)({type:K.A,json:{read:!0,write:!0}})],de.prototype,"toGeometry",void 0),(0,s._)([(0,o.MZ)({type:ne.apiValues,json:{write:ne.write}})],de.prototype,"measureOperation",null),(0,s._)([(0,o.MZ)({json:{read:!0}})],de.prototype,"is3D",void 0),(0,s._)([(0,o.MZ)({type:String,json:{read:k.Sk.read,write:k.Sk.write}})],de.prototype,"linearUnit",void 0),(0,s._)([(0,o.MZ)({type:String,json:{read:k.b$.read,write:k.b$.write}})],de.prototype,"angularUnit",void 0),de=_t=(0,s._)([(0,g.$)("esri.rest.support.ImageDistanceParameters")],de);const kr=de;let Le=class extends be{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};(0,s._)([(0,o.MZ)({type:Ee,json:{read:!0,write:!0}})],Le.prototype,"distance",void 0),(0,s._)([(0,o.MZ)({type:Qe,json:{read:!0,write:!0}})],Le.prototype,"azimuthAngle",void 0),(0,s._)([(0,o.MZ)({type:Qe,json:{read:!0,write:!0}})],Le.prototype,"elevationAngle",void 0),Le=(0,s._)([(0,g.$)("esri.rest.support.ImageDistanceResult")],Le);const ei=Le;var Mt=p(12849),ti=p(15463),ri=p(37086);let Re=class extends((0,w.O)(N.oY)){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(n,r,a){null!=n&&(r.geometryType=(0,G.$B)(n),r[a]=JSON.stringify(n.toJSON()))}};(0,s._)([(0,o.MZ)({types:z.yR,json:{read:G.rS,write:!0}})],Re.prototype,"geometry",void 0),(0,s._)([(0,F.K)("geometry")],Re.prototype,"writeGeometry",null),(0,s._)([(0,o.MZ)({json:{write:!0}})],Re.prototype,"objectIds",void 0),(0,s._)([(0,ti.e)(ri.x,{ignoreUnknown:!1,name:"spatialRel"})],Re.prototype,"spatialRelationship",void 0),(0,s._)([(0,o.MZ)({type:Mt.A,json:{name:"time",write:!0}})],Re.prototype,"timeExtent",void 0),(0,s._)([(0,o.MZ)({type:String,json:{write:!0}})],Re.prototype,"where",void 0),Re=(0,s._)([(0,g.$)("esri.rest.support.ImageGPSInfoParameters")],Re);const ii=Re;let at=class extends(mr(N.oY)){constructor(){super(...arguments),this.id=null}};(0,s._)([(0,o.MZ)({json:{write:!0}})],at.prototype,"id",void 0),at=(0,s._)([(0,g.$)("esri.rest.support.CameraInfo")],at);const ni=at;let le=class extends N.oY{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(n,r){r.acquisitionDate=n?.getTime()}};(0,s._)([(0,o.MZ)({json:{write:!0}})],le.prototype,"id",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],le.prototype,"name",void 0),(0,s._)([(0,o.MZ)({type:Date,json:{write:!0}})],le.prototype,"acquisitionDate",void 0),(0,s._)([(0,F.K)("acquisitionDate")],le.prototype,"writeAcquisitionDate",null),(0,s._)([(0,o.MZ)({json:{write:!0}})],le.prototype,"cameraID",void 0),(0,s._)([(0,o.MZ)({type:K.A,json:{write:!0}})],le.prototype,"center",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],le.prototype,"gps",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],le.prototype,"orientation",void 0),le=(0,s._)([(0,g.$)("esri.rest.support.ImageGPSInfo")],le);const si=le;let Ye=class extends N.oY{constructor(){super(...arguments),this.images=null,this.cameras=null}};(0,s._)([(0,o.MZ)({type:[si],json:{write:!0}})],Ye.prototype,"images",void 0),(0,s._)([(0,o.MZ)({type:[ni],json:{write:!0}})],Ye.prototype,"cameras",void 0),Ye=(0,s._)([(0,g.$)("esri.rest.support.ImageGPSInfoResult")],Ye);const oi=Ye;var wt;let Ie=wt=class extends ae{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(n,r,a){null!=n&&(r.geometryType=(0,G.$B)(n),r[a]=n.toJSON())}get measureOperation(){return this.operationType}clone(){return new wt((0,$.o8)({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,s._)([(0,o.MZ)({type:K.A,json:{read:!0}})],Ie.prototype,"fromGeometry",void 0),(0,s._)([(0,F.K)("fromGeometry")],Ie.prototype,"writeFromGeometry",null),(0,s._)([(0,o.MZ)({type:K.A,json:{read:!0,write:!0}})],Ie.prototype,"toGeometry",void 0),(0,s._)([(0,o.MZ)({type:ne.apiValues,json:{write:ne.write}})],Ie.prototype,"measureOperation",null),(0,s._)([(0,o.MZ)({json:{read:!0}})],Ie.prototype,"operationType",void 0),(0,s._)([(0,o.MZ)({type:String,json:{read:k.Sk.read,write:k.Sk.write}})],Ie.prototype,"linearUnit",void 0),Ie=wt=(0,s._)([(0,g.$)("esri.rest.support.ImageHeightParameters")],Ie);const ai=Ie;let lt=class extends be{constructor(){super(...arguments),this.height=null}};(0,s._)([(0,o.MZ)({type:Ee,json:{read:!0,write:!0}})],lt.prototype,"height",void 0),lt=(0,s._)([(0,g.$)("esri.rest.support.ImageHeightResult")],lt);const li=lt;var bt,ui=p(98464);let E=bt=class extends N.oY{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(n,r,a){null!=n&&(r.geometryType=(0,G.$B)(n),r[a]=JSON.stringify(n.toJSON()))}set mosaicRule(n){let r=n;r?.mosaicMethod&&(r=ie.A.fromJSON({...r.toJSON(),mosaicMethod:r.mosaicMethod,mosaicOperation:r.mosaicOperation})),this._set("mosaicRule",r)}writeMosaicRule(n,r,a){null!=n&&(r[a]=JSON.stringify(n.toJSON()))}get renderingRule(){return(0,_e.Lx)(j.A.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._get("rasterFunction")}set renderingRule(n){(0,_e.Lx)(j.A.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",n)}get renderingRules(){return(0,_e.Lx)(j.A.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._get("rasterFunctions")}set renderingRules(n){(0,_e.Lx)(j.A.getLogger(this),"renderingRules",{replacement:"rasterFunctions",version:"4.27",warnOnce:!0}),this._set("rasterFunctions",n)}set rasterFunction(n){let r=n;r?.rasterFunction&&(r=O.A.fromJSON({...r.toJSON(),rasterFunction:r.rasterFunction,rasterFunctionArguments:r.rasterFunctionArguments})),this._set("rasterFunction",r)}writeRasterFunction(n,r,a){null!=n&&(r[a]=JSON.stringify(n.toJSON())),n.rasterFunctionDefinition&&(r[a]=JSON.stringify(n.rasterFunctionDefinition))}writeRasterFunctions(n,r,a){null!=n&&(r[a]=JSON.stringify(n.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(n,r,a){null!=n&&(r[a]=JSON.stringify(n))}writeTimeExtent(n,r,a){if(null!=n){const e=null!=n.start?n.start.getTime():null,t=null!=n.end?n.end.getTime():null;r[a]=null!=e?null!=t?`${e},${t}`:`${e}`:null}}clone(){return new bt((0,$.o8)({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};(0,s._)([(0,o.MZ)({json:{write:!0}})],E.prototype,"geometry",void 0),(0,s._)([(0,F.K)("geometry")],E.prototype,"writeGeometry",null),(0,s._)([(0,o.MZ)({type:ie.A,json:{write:!0}})],E.prototype,"mosaicRule",null),(0,s._)([(0,F.K)("mosaicRule")],E.prototype,"writeMosaicRule",null),(0,s._)([(0,o.MZ)({type:O.A})],E.prototype,"renderingRule",null),(0,s._)([(0,o.MZ)({type:[O.A]})],E.prototype,"renderingRules",null),(0,s._)([(0,o.MZ)({type:O.A,json:{write:!0,name:"renderingRule"}})],E.prototype,"rasterFunction",null),(0,s._)([(0,F.K)("rasterFunction")],E.prototype,"writeRasterFunction",null),(0,s._)([(0,o.MZ)({type:[O.A],json:{write:!0,name:"renderingRules"}})],E.prototype,"rasterFunctions",void 0),(0,s._)([(0,F.K)("rasterFunctions")],E.prototype,"writeRasterFunctions",null),(0,s._)([(0,o.MZ)({type:K.A,json:{write:!0}})],E.prototype,"pixelSize",void 0),(0,s._)([(0,F.K)("pixelSize")],E.prototype,"writePixelSize",null),(0,s._)([(0,o.MZ)({type:Boolean,json:{write:!0}})],E.prototype,"returnGeometry",void 0),(0,s._)([(0,o.MZ)({type:Boolean,json:{write:!0}})],E.prototype,"returnCatalogItems",void 0),(0,s._)([(0,o.MZ)({type:Boolean,json:{write:!0}})],E.prototype,"returnPixelValues",void 0),(0,s._)([(0,o.MZ)({type:Number,json:{write:!0}})],E.prototype,"maxItemCount",void 0),(0,s._)([(0,o.MZ)({type:Mt.A,json:{write:{target:"time"}}})],E.prototype,"timeExtent",void 0),(0,s._)([(0,F.K)("timeExtent")],E.prototype,"writeTimeExtent",null),(0,s._)([(0,o.MZ)({json:{write:!0}})],E.prototype,"raster",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],E.prototype,"viewId",void 0),(0,s._)([(0,o.MZ)({type:Boolean,json:{write:!0}})],E.prototype,"processAsMultidimensional",void 0),E=bt=(0,s._)([(0,g.$)("esri.rest.support.ImageIdentifyParameters")],E);const cr=E;var dr=p(93327);let ue=class extends N.oY{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};(0,s._)([(0,o.MZ)({json:{write:!0}})],ue.prototype,"catalogItemVisibilities",void 0),(0,s._)([(0,o.MZ)({type:dr.A,json:{write:!0}})],ue.prototype,"catalogItems",void 0),(0,s._)([(0,o.MZ)({type:K.A,json:{write:!0}})],ue.prototype,"location",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],ue.prototype,"name",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],ue.prototype,"objectId",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],ue.prototype,"processedValues",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],ue.prototype,"properties",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],ue.prototype,"value",void 0),ue=(0,s._)([(0,g.$)("esri.rest.support.ImageIdentifyResult")],ue);const pi=ue;var Ft;let Ge=Ft=class extends N.oY{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(n,r,a){r.geometries={geometryType:"esriGeometryPoint",geometries:n.map(e=>e.toJSON())}}clone(){return new Ft({geometries:this.geometries?.map(n=>n.clone())??[],rasterId:this.rasterId})}};(0,s._)([(0,o.MZ)({type:[K.A],json:{write:!0}})],Ge.prototype,"geometries",void 0),(0,s._)([(0,F.K)("geometries")],Ge.prototype,"writeGeometry",null),(0,s._)([(0,o.MZ)({type:V.jz,json:{write:!0}})],Ge.prototype,"rasterId",void 0),Ge=Ft=(0,s._)([(0,g.$)("esri.rest.support.ImagePixelLocationParameters")],Ge);const mi=Ge;let ut=class extends N.oY{constructor(){super(...arguments),this.geometries=null}};(0,s._)([(0,o.MZ)({json:{write:!0}})],ut.prototype,"geometries",void 0),ut=(0,s._)([(0,g.$)("esri.rest.support.ImagePixelLocationResult")],ut);const ci=ut;var Pt;let Oe=Pt=class extends ae{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(n,r,a){null!=n&&(r.geometryType=(0,G.$B)(n),r[a]=n.toJSON())}get measureOperation(){const{is3D:n,geometry:r}=this;return"point"===r.type?n?"point-3D":"point":n?"centroid-3D":"centroid"}clone(){return new Pt((0,$.o8)({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};(0,s._)([(0,o.MZ)({types:z.yR,json:{name:"fromGeometry",read:G.rS}})],Oe.prototype,"geometry",void 0),(0,s._)([(0,F.K)("geometry")],Oe.prototype,"writeGeometry",null),(0,s._)([(0,o.MZ)({type:ne.apiValues,json:{read:ne.read,write:ne.write}})],Oe.prototype,"measureOperation",null),(0,s._)([(0,o.MZ)({json:{read:!0}})],Oe.prototype,"is3D",void 0),Oe=Pt=(0,s._)([(0,g.$)("esri.rest.support.ImagePointParameters")],Oe);const di=Oe;let pt=class extends be{constructor(){super(...arguments),this.point=null}};(0,s._)([(0,o.MZ)({type:K.A,json:{name:"point.value",read:!0,write:!0}})],pt.prototype,"point",void 0),pt=(0,s._)([(0,g.$)("esri.rest.support.ImagePointResult")],pt);const yi=pt;var Dt,hi=p(21870);let ee=Dt=class extends N.oY{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(n,r,a){null!=n&&(r.geometryType=(0,G.$B)(n),r[a]=n.toJSON())}set locations(n){if(n?.length){const r=new hi.A({spatialReference:n[0].spatialReference,points:n.map(({x:a,y:e})=>[a,e])});this._set("locations",n),this.geometry=r}}clone(){return new Dt((0,$.o8)({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};(0,s._)([(0,o.MZ)({types:z.yR,json:{read:G.rS}})],ee.prototype,"geometry",void 0),(0,s._)([(0,F.K)("geometry")],ee.prototype,"writeGeometry",null),(0,s._)([(0,o.MZ)()],ee.prototype,"locations",null),(0,s._)([(0,o.MZ)({type:String,json:{type:q.SZ.jsonValues,read:q.SZ.read,write:q.SZ.write}})],ee.prototype,"interpolation",void 0),(0,s._)([(0,o.MZ)({type:ie.A,json:{write:!0}})],ee.prototype,"mosaicRule",void 0),(0,s._)([(0,o.MZ)({type:[String],json:{write:!0}})],ee.prototype,"outFields",void 0),(0,s._)([(0,o.MZ)({type:K.A,json:{write:!0}})],ee.prototype,"pixelSize",void 0),(0,s._)([(0,o.MZ)({type:String,json:{write:!0}})],ee.prototype,"raster",void 0),(0,s._)([(0,o.MZ)({type:Boolean,json:{write:!0}})],ee.prototype,"returnFirstValueOnly",void 0),(0,s._)([(0,o.MZ)({type:Number,json:{write:!0}})],ee.prototype,"sampleDistance",void 0),(0,s._)([(0,o.MZ)({type:Number,json:{write:!0}})],ee.prototype,"sampleCount",void 0),(0,s._)([(0,o.MZ)({type:Number,json:{write:!0}})],ee.prototype,"sliceId",void 0),(0,s._)([(0,o.MZ)({type:Mt.A,json:{read:{source:"time"},write:{target:"time"}}})],ee.prototype,"timeExtent",void 0),ee=Dt=(0,s._)([(0,g.$)("esri.rest.support.ImageSampleParameters")],ee);const gi=ee;let Se=class extends N.oY{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};(0,s._)([(0,o.MZ)({json:{write:!0}})],Se.prototype,"attributes",void 0),(0,s._)([(0,o.MZ)({type:K.A,json:{write:!0}})],Se.prototype,"location",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],Se.prototype,"locationId",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],Se.prototype,"rasterId",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],Se.prototype,"resolution",void 0),(0,s._)([(0,o.MZ)({json:{write:!0}})],Se.prototype,"pixelValue",void 0),Se=(0,s._)([(0,g.$)("esri.rest.support.ImageSample")],Se);const fi=Se;let mt=class extends N.oY{constructor(){super(...arguments),this.samples=null}};(0,s._)([(0,o.MZ)({type:[fi],json:{write:!0}})],mt.prototype,"samples",void 0),mt=(0,s._)([(0,g.$)("esri.rest.support.ImageSampleResult")],mt);const vi=mt;let Ne=class extends((0,w.O)(N.oY)){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(n,r,a){r.geometries=n?.length?{geometryType:(0,G.$B)(n[0]),geometries:n.map(e=>({...e.toJSON(),spatialReference:void 0}))}:null}};(0,s._)([(0,o.MZ)({types:[z.yR]})],Ne.prototype,"geometries",void 0),(0,s._)([(0,F.K)("geometries")],Ne.prototype,"writeGeometries",null),(0,s._)([(0,o.MZ)({type:[V.jz],json:{write:!0}})],Ne.prototype,"rasterIds",void 0),(0,s._)([(0,o.MZ)({type:ce.A,json:{name:"outSR",write:!0}})],Ne.prototype,"outSpatialReference",void 0),Ne=(0,s._)([(0,g.$)("esri.rest.support.ImageToMapMultirayParameters")],Ne);const Ri=Ne;let xe=class extends((0,w.O)(N.oY)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(n,r,a){null!=n&&(r.geometryType=(0,G.$B)(n),r[a]={...n.toJSON(),spatialReference:void 0})}};(0,s._)([(0,o.MZ)({types:z.yR,json:{read:G.rS,write:!0}})],xe.prototype,"geometry",void 0),(0,s._)([(0,F.K)("geometry")],xe.prototype,"writeGeometry",null),(0,s._)([(0,o.MZ)({json:{write:!0}})],xe.prototype,"rasterId",void 0),(0,s._)([(0,o.MZ)({type:ce.A,json:{name:"outSR",write:!0}})],xe.prototype,"outSpatialReference",void 0),(0,s._)([(0,o.MZ)({json:{name:"options.DOff",write:!0}})],xe.prototype,"depthOffset",void 0),(0,s._)([(0,o.MZ)({json:{name:"options.Adjust",write:!0}})],xe.prototype,"adjust",void 0),xe=(0,s._)([(0,g.$)("esri.rest.support.ImageToMapParameters")],xe);const Ii=xe;let Xe=class extends((0,w.O)(N.oY)){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};(0,s._)([(0,o.MZ)({type:String,json:{name:"uri",write:!0}})],Xe.prototype,"referenceUri",void 0),(0,s._)([(0,o.MZ)({type:Number,json:{write:!0}})],Xe.prototype,"rasterId",void 0),Xe=(0,s._)([(0,g.$)("esri.rest.support.ImageUrlParameters")],Xe);const Si=Xe;let ct=class extends N.oY{constructor(){super(...arguments),this.url=null}};(0,s._)([(0,o.MZ)({json:{name:"imageURL",write:!0}})],ct.prototype,"url",void 0),ct=(0,s._)([(0,g.$)("esri.rest.support.ImageUrlResult")],ct);const xi=ct;let Ze=class extends((0,w.O)(N.oY)){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(n,r,a){null!=n&&(r.geometryType=(0,G.$B)(n),r[a]=JSON.stringify(n))}};(0,s._)([(0,o.MZ)({types:z.yR,json:{read:G.rS,write:!0}})],Ze.prototype,"geometry",void 0),(0,s._)([(0,F.K)("geometry")],Ze.prototype,"writeGeometry",null),(0,s._)([(0,o.MZ)({json:{write:!0}})],Ze.prototype,"rasterId",void 0),(0,s._)([(0,o.MZ)({json:{name:"options.VisibleOnly",write:!0}})],Ze.prototype,"visibleOnly",void 0),Ze=(0,s._)([(0,g.$)("esri.rest.support.MapToImageParameters")],Ze);const Ai=Ze;let Fe=class extends N.oY{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(n,r){return n.spatialReference||(n={...n,spatialReference:r.Shape.spatialReference}),K.A.fromJSON(n)}};(0,s._)([(0,o.MZ)({types:z.yR,json:{name:"Shape",read:G.rS,write:!0}})],Fe.prototype,"geometry",void 0),(0,s._)([(0,o.MZ)({json:{name:"Length",write:!0}})],Fe.prototype,"length",void 0),(0,s._)([(0,o.MZ)({json:{name:"Area",write:!0}})],Fe.prototype,"area",void 0),(0,s._)([(0,o.MZ)({json:{name:"Center",write:!0}})],Fe.prototype,"center",void 0),(0,s._)([(0,Y.w)("center")],Fe.prototype,"readCenter",null),Fe=(0,s._)([(0,g.$)("esri.rest.support.MeasureAreaFromImageResult")],Fe);const _i=Fe;var Tt;let Ue=Tt=class extends N.oY{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(n,r,a){null!=n&&(r.geometryType=(0,G.$B)(n),r[a]={...n.toJSON(),spatialReference:void 0})}clone(){const n=(0,$.o8)({geometry:this.geometry,rasterId:this.rasterId});return new Tt(n)}};(0,s._)([(0,o.MZ)({types:z.yR,json:{name:"fromGeometry",read:G.rS,write:!0}})],Ue.prototype,"geometry",void 0),(0,s._)([(0,F.K)("geometry")],Ue.prototype,"writeGeometry",null),(0,s._)([(0,o.MZ)({json:{write:!0}})],Ue.prototype,"rasterId",void 0),Ue=Tt=(0,s._)([(0,g.$)("esri.rest.support.MeasureFromImageParameters")],Ue);const Mi=Ue;let qe=class extends N.oY{constructor(){super(...arguments),this.geometry=null,this.length=null}};(0,s._)([(0,o.MZ)({types:z.yR,json:{name:"Shape",read:G.rS,write:!0}})],qe.prototype,"geometry",void 0),(0,s._)([(0,o.MZ)({json:{name:"Length",write:!0}})],qe.prototype,"length",void 0),qe=(0,s._)([(0,g.$)("esri.rest.support.MeasureLengthFromImageResult")],qe);const wi=qe;function jt(n){const r=n?.time;if(r&&(null!=r.start||null!=r.end)){const a=[];null!=r.start&&a.push(r.start),null==r.end||a.includes(r.end)||a.push(r.end),n.time=a.join(",")}}function yr(n,r,a){return Ot.apply(this,arguments)}function Ot(){return(Ot=(0,y.A)(function*(n,r,a){r=(0,V.PZ)(ui.A,r);const e=(0,A.Dl)(n),t=r.geometry?[r.geometry]:[],i=yield(0,Te.el)(t),l=r.toJSON();jt(l);const u=i?.[0];null!=u&&(l.geometry=ye(u));const m=(0,A.lF)({...e.query,f:"json",...l});return(0,A.jV)(m,a)})).apply(this,arguments)}function Nt(){return(Nt=(0,y.A)(function*(n,r,a){const e=(r=(0,V.PZ)(Hr,r)).toJSON();null!=e.angleName&&(e.angleName=e.angleName.join(",")),r?.point?.spatialReference?.imageCoordinateSystem&&(e.point.spatialReference=yt(r.point.spatialReference)),r?.spatialReference?.imageCoordinateSystem&&(e.spatialReference=Be(r.spatialReference));const t=(0,A.Dl)(n),i=(0,A.lF)({...t.query,f:"json",...e}),l=(0,A.jV)(i,a),{data:u}=yield(0,D.A)(`${t.path}/computeAngles`,l);return u.spatialReference=u.spatialReference?null!=u.spatialReference.geodataXform?new ce.A({wkid:0,imageCoordinateSystem:u.spatialReference}):ce.A.fromJSON(u.spatialReference):null,"NaN"===u.north&&(u.north=null),"NaN"===u.up&&(u.up=null),new Qr(u)})).apply(this,arguments)}function Zt(){return(Zt=(0,y.A)(function*(n,r,a){const e=(r=(0,V.PZ)(mi,r)).toJSON(),{geometries:t}=r;if(t)for(let d=0;d<t.length;d++)t[d].spatialReference?.imageCoordinateSystem&&(e.geometries.geometries[d].spatialReference=yt(t[d].spatialReference));const i=(0,A.Dl)(n),l=(0,A.lF)({...i.query,f:"json",...e}),u=(0,A.jV)(l,a),{data:m}=yield(0,D.A)(`${i.path}/computePixelLocation`,u);return ci.fromJSON(m)})).apply(this,arguments)}function Ct(){return(Ct=(0,y.A)(function*(n,r,a){const e=yield yr(n,r,a),t=(0,A.Dl)(n),{data:i}=yield(0,D.A)(`${t.path}/computeStatisticsHistograms`,e),{statistics:l}=i;return l?.length&&l.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:l,histograms:i.histograms}})).apply(this,arguments)}function Vt(){return(Vt=(0,y.A)(function*(n,r,a){const e=yield yr(n,r,a),t=(0,A.Dl)(n),{data:i}=yield(0,D.A)(`${t.path}/computeHistograms`,e);return{histograms:i.histograms}})).apply(this,arguments)}function Et(){return(Et=(0,y.A)(function*(n,r,a){const e=(r=(0,V.PZ)(gi,r)).toJSON();jt(e),e.outFields?.length&&(e.outFields=e.outFields.join(","));const t=yield(0,Te.el)(r.geometry),i=t?.[0];null!=i&&(e.geometry=ye(i));const l=(0,A.Dl)(n),u=(0,A.lF)({...l.query,f:"json",...e}),m=(0,A.jV)(u,a),{data:d}=yield(0,D.A)(`${l.path}/getSamples`,m),c=d?.samples?.map(h=>{const I="NaN"===h.value||""===h.value?null:h.value.split(" ").map(R=>Number(R));return{...h,pixelValue:I}});return vi.fromJSON({samples:c})})).apply(this,arguments)}function hr(n,r,a){return Jt.apply(this,arguments)}function Jt(){return(Jt=(0,y.A)(function*(n,r,a){r=(0,V.PZ)(cr,r);const e=(0,A.Dl)(n);return(0,Te.el)(r.geometry?[r.geometry]:[]).then(i=>{const l=r.toJSON(),u=i?.[0];null!=u&&(l.geometry=JSON.stringify(ye(u)));const m=(0,A.lF)({...e.query,f:"json",...l}),d=(0,A.jV)(m,a);return(0,D.A)(e.path+"/identify",d)}).then(i=>pi.fromJSON(i.data))})).apply(this,arguments)}function Lt(){return(Lt=(0,y.A)(function*(n,r,a){r=(0,V.PZ)(ai,r);const e=yield dt(n,r,[r.fromGeometry,r.toGeometry],a);return li.fromJSON(e)})).apply(this,arguments)}function Gt(){return(Gt=(0,y.A)(function*(n,r,a){r=(0,V.PZ)(Wr,r);const e=yield dt(n,r,[r.geometry],a);return Yr.fromJSON(e)})).apply(this,arguments)}function Ut(){return(Ut=(0,y.A)(function*(n,r,a){r=(0,V.PZ)(di,r);const e=yield dt(n,r,[r.geometry],a);return yi.fromJSON(e)})).apply(this,arguments)}function Bt(){return(Bt=(0,y.A)(function*(n,r,a){r=(0,V.PZ)(kr,r);const e=yield dt(n,r,[r.fromGeometry,r.toGeometry],a);return ei.fromJSON(e)})).apply(this,arguments)}function dt(n,r,a,e){return zt.apply(this,arguments)}function zt(){return(zt=(0,y.A)(function*(n,r,a,e){const t=(0,A.Dl)(n),i=yield(0,Te.el)(a),l=r.toJSON();null!=i[0]&&(l.fromGeometry=JSON.stringify(ye(i[0]))),null!=i[1]&&(l.toGeometry=JSON.stringify(ye(i[1])));const u=(0,A.lF)({...t.query,f:"json",...l}),m=(0,A.jV)(u,e),{data:d}=yield(0,D.A)(t.path+"/measure",m);return d})).apply(this,arguments)}function $t(){return($t=(0,y.A)(function*(n,r,a){const e=yield gr(n,r,a);return wi.fromJSON(e)})).apply(this,arguments)}function Ht(){return(Ht=(0,y.A)(function*(n,r,a){const e=yield gr(n,r,a);return _i.fromJSON(e)})).apply(this,arguments)}function gr(n,r,a){return Qt.apply(this,arguments)}function Qt(){return(Qt=(0,y.A)(function*(n,r,a){r=(0,V.PZ)(Mi,r);const e=(0,A.Dl)(n),t=r.toJSON(),i=(0,A.lF)({...e.query,f:"json",...t}),l=(0,A.jV)(i,a),{data:u}=yield(0,D.A)(e.path+"/measureFromImage",l);return u})).apply(this,arguments)}function ye(n){const r=n.toJSON();return n.spatialReference?.imageCoordinateSystem&&(r.spatialReference=yt(n.spatialReference)),r}function yt(n){const{imageCoordinateSystem:r}=n;if(r){const{id:a,referenceServiceName:e}=r;return null!=a?e?{icsid:a,icsns:e}:{icsid:a}:{ics:r}}return n.toJSON()}function Be(n,r){if(!n.imageCoordinateSystem)return(0,vt.YX)(n);const a=yt(n),{icsid:e,icsns:t}=a;return null==e||null!=t&&!r?.toLowerCase().includes("/"+t.toLowerCase()+"/")?JSON.stringify(a):`0:${e}`}function Kt(){return(Kt=(0,y.A)(function*(n,r,a){r=(0,V.PZ)(Xr,r);const e=(0,A.Dl)(n),t=r.toJSON();r.outSpatialReference&&(t.outSR=Be(r.outSpatialReference));const i=(0,A.lF)({...e.query,f:"json",...t}),l=(0,A.jV)(i,a),{data:u}=yield(0,D.A)(e.path+"/queryBoundary",l);return qr.fromJSON(u)})).apply(this,arguments)}function Wt(){return(Wt=(0,y.A)(function*(n,r,a){const e=(r=(0,V.PZ)(ii,r)).toJSON();jt(e),e.objectIds?.length&&(e.objectIds=e.objectIds.join(",")),e.geometry||e.objectIds||e.time||e.where||(e.where="1=1");const t=yield(0,Te.el)(r.geometry),i=t?.[0];null!=i&&(e.geometry=ye(i));const l=i?.spatialReference??r.geometry?.spatialReference;l&&(e.inSR=Be(l));const u=(0,A.Dl)(n),m=(0,A.lF)({...u.query,f:"json",...e}),d=(0,A.jV)(m,a),{data:c}=yield(0,D.A)(`${u.path}/queryGPSInfo`,d);return oi.fromJSON(c)})).apply(this,arguments)}function Yt(){return(Yt=(0,y.A)(function*(n,r,a){const e=(r=(0,V.PZ)(Ii,r)).toJSON();r.geometry.spatialReference.imageCoordinateSystem&&(e.geometry=ye(r.geometry)),r.depthOffset&&r.adjust||delete e.options;const t=(0,A.Dl)(n),i=(0,A.lF)({...t.query,f:"json",...e}),l=(0,A.jV)(i,a),{data:u}=yield(0,D.A)(`${t.path}/imageToMap`,l);return(0,G.rS)(u)})).apply(this,arguments)}function Xt(){return(Xt=(0,y.A)(function*(n,r,a){const e=(r=(0,V.PZ)(Ri,r)).toJSON();r.rasterIds?.length&&(e.rasterIds=r.rasterIds.join(","));const t=(0,A.Dl)(n),i=(0,A.lF)({...t.query,f:"json",...e}),l=(0,A.jV)(i,a),{data:u}=yield(0,D.A)(`${t.path}/imageToMapMultiray`,l);return(0,G.rS)(u)})).apply(this,arguments)}function qt(){return(qt=(0,y.A)(function*(n,r,a){const e=(r=(0,V.PZ)(Ai,r)).toJSON(),t=yield(0,Te.el)(r.geometry),i=t?.[0];null!=i&&(e.geometry=ye(i)),r.visibleOnly||delete e.options;const l=i?.spatialReference??r.geometry?.spatialReference;l&&(e.inSR=Be(l));const u=(0,A.Dl)(n),m=(0,A.lF)({...u.query,f:"json",...e}),d=(0,A.jV)(m,a),{data:c}=yield(0,D.A)(`${u.path}/mapToImage`,d);return(0,G.rS)(c)})).apply(this,arguments)}function kt(){return(kt=(0,y.A)(function*(n,r,a){const e=(r=(0,V.PZ)(Si,r)).toJSON(),t=(0,A.Dl)(n),i=(0,A.lF)({...t.query,f:"json",...e}),l=(0,A.jV)(i,a),{data:u}=yield(0,D.A)(`${t.path}/getImageUrl`,l);return xi.fromJSON(u)})).apply(this,arguments)}function er(){return(er=(0,y.A)(function*(n,r,a){const e=(r=(0,V.PZ)(Br,r)).toJSON(),t=yield(0,Te.el)([r.fromGeometry,r.toGeometry]);null!=t[0]&&(e.fromGeometry=ye(t[0]),t[0].spatialReference&&(e.inSR=Be(t[0].spatialReference))),null!=t[1]&&(e.toGeometry=ye(t[1])),r.objectIds?.length&&(e.objectIds=e.objectIds.join(","));const i=(0,A.Dl)(n),l=(0,A.lF)({...i.query,f:"json",...e}),u=(0,A.jV)(l,a),{data:m}=yield(0,D.A)(`${i.path}/find`,u);return $r.fromJSON(m)})).apply(this,arguments)}p(93164);var $i=p(34687),tr=(p(23098),p(77469),p(87477),p(2296),p(69287),p(68643),p(93615),p(20914),p(47258),p(55912),p(87086)),Hi=(p(70994),p(52466),p(33063)),Qi=p(87342),rr=(p(59487),p(61569),p(93091)),Ki=p(61599);function ir(){return(ir=(0,y.A)(function*(n,r,a){const e=(0,A.Dl)(n),t=(0,A.lF)({...e?.query,f:"json"}),i=(0,A.jV)(t,a),l=`${e?.path}/${r}/info`,u=(0,D.A)(`${l}`,i),m=(0,D.A)(`${l}/keyProperties`,i),d=yield Promise.allSettled([u,m]),c="fulfilled"===d[0].status?d[0].value.data:null,h="fulfilled"===d[1].status?d[1].value.data:null;let I=null;c.statistics?.length&&(I=c.statistics.map(B=>({min:B[0],max:B[1],avg:B[2],stddev:B[3]})));const R=We.A.fromJSON(c.extent),x=Math.ceil(R.width/c.pixelSizeX-.1),S=Math.ceil(R.height/c.pixelSizeY-.1),f=R.spatialReference,P=new K.A({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:f}),U=c.histograms?.length?c.histograms:null,J=new Ki.A({origin:c.origin,blockWidth:c.blockWidth,blockHeight:c.blockHeight,firstPyramidLevel:c.firstPyramidLevel,maximumPyramidLevel:c.maxPyramidLevel});return new pr.A({width:x,height:S,bandCount:c.bandCount,extent:R,spatialReference:f,pixelSize:P,pixelType:c.pixelType.toLowerCase(),statistics:I,histograms:U,keyProperties:h,storageInfo:J})})).apply(this,arguments)}var Yi=p(91551);const Xi=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),qi=(0,o.Qp)(V.GB,{min:0,max:255}),en=n=>{let r=class extends n{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new L({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.length<1||null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(i=>"number"==typeof i))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,i){null!=e&&"lerc"!==this.format&&(t[i]=e)}writeCompressionTolerance(e,t,i){"lerc"===this.format&&null!=e&&(t[i]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?ie.A.fromJSON(t):null}get fieldsIndex(){return this.fields?new Er.A(this.fields):null}set format(e){e&&Xi.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return"esriImageServiceDataTypeVector-UV"===t.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===t.serviceDataType||null!=this.pixelFilter?"lerc":"jpgpng"}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}set mosaicRule(e){let t=e;t?.mosaicMethod&&(t=ie.A.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const i=e||t.mosaicRule;return i?ie.A.fromJSON(i):this._isMosaicRuleSupported(t)?ie.A.fromJSON(t):null}writeMosaicRule(e,t,i){let l=this.mosaicRule;const u=this.definitionExpression;l?u&&u!==l.where&&(l=l.clone(),l.where=u):u&&(l=new ie.A({where:u})),this._isValidCustomizedMosaicRule(l)&&(t[i]=l.toJSON())}writeNoData(e,t,i){null!=e&&"number"==typeof e&&(t[i]=qi(e))}readObjectIdField(e,t){return e||(e=t.fields.find(l=>"esriFieldTypeOID"===l.type||"oid"===l.type)?.name),e}get parsedUrl(){return(0,Rr.An)(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,i){const l=t?.layerDefinition?.drawingInfo?.renderer,u=(0,Pe.LF)(l,i);return null==u?null:("vector-field"===u.type&&t.symbolTileSize&&!l.symbolTileSize&&(u.symbolTileSize=t.symbolTileSize),nr(u)||j.A.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,t,i){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),"vector-field"===e.type&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this._rasterAttributeTableFieldPrefix,t=new De.A({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),i=new De.A({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),l=new De.A({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let u=this.fields?(0,$.o8)(this.fields):[];u.push(i),this.capabilities?.operations.supportsQuery&&this.fields&&this.fields.length>0&&u.push(t),this.version>=10.4&&null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.some(d=>"none"===d.name.toLowerCase())&&u.push(l),null!=this.rasterFunctionInfos&&this.rasterFunctionInfos.filter(d=>"none"!==d.name.toLowerCase()).forEach(d=>{u.push(new De.A({name:"Raster.ServicePixelValue."+d.name,alias:d.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(u.push(new De.A({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),u.push(new De.A({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:m}=this.rasterInfo??{};if(null!=m){const d=m.fields.filter(c=>"esriFieldTypeOID"!==c.type&&"value"!==c.name.toLowerCase()).map(c=>{const h=(0,$.o8)(c);return h.name=e+c.name,h});u=u.concat(d)}return u}get renderingRule(){return(0,_e.Lx)(j.A.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this.rasterFunction}set renderingRule(e){(0,_e.Lx)(j.A.getLogger(this),"renderingRule",{replacement:"rasterFunction",version:"4.27",warnOnce:!0}),this._set("rasterFunction",e)}set rasterFunction(e){let t=e;t?.rasterFunction&&(t=O.A.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const i=t.rasterFunctionInfos;return t.renderingRule||i?.length&&"None"!==i[0].name?this._isRFTJson(t.renderingRule)?O.A.fromJSON({rasterFunctionDefinition:t.renderingRule}):O.A.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const i=e||t.extent.spatialReference;return i?ce.A.fromJSON(i):null}readPixelType(e){return q.e8.fromJSON(e)||e}writePixelType(e,t,i){null!=this.serviceRasterInfo&&this.pixelType===this.serviceRasterInfo.pixelType||(t[i]=q.e8.toJSON(e))}readVersion(e,t){let i=t.currentVersion;return i||(i=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),i}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}applyRenderer(e,t){var i=this;return(0,y.A)(function*(){let l=e;const{renderer:u,symbolizer:m,pixelFilter:d,bandIds:c}=i;if(!i._isPicture()&&u&&m&&!d){const h=JSON.stringify(i._cachedRendererJson)!==JSON.stringify(u.toJSON()),I=i._rasterJobHandler.instance;if(I){h&&(m.bind(),yield I.updateSymbolizer(m,t),i._cachedRendererJson=u.toJSON());const R=yield I.symbolize({bandIds:c,...e},t);l={extent:e.extent,pixelBlock:R}}else l={extent:e.extent,pixelBlock:m.symbolize({bandIds:c,...e})}}return l})()}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}computeAngles(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsComputeAngles)throw new v.A("imagery-layer:compute-angles","this operation is not supported on the input image service");return function bi(n,r,a){return Nt.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}computePixelSpaceLocations(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsComputePixelLocation)throw new v.A("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return function Fi(n,r,a){return Zt.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}computeHistograms(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsComputeHistograms)throw new v.A("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=(0,$.o8)(e),i._applyMosaicAndRenderingRules(e),function Di(n,r,a){return Vt.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}computeStatisticsHistograms(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsComputeStatisticsHistograms)throw new v.A("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=(0,$.o8)(e),i._applyMosaicAndRenderingRules(e),function Pi(n,r,a){return Ct.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}measureHeight(e,t){var i=this;return(0,y.A)(function*(){const l=yield i._fetchCapabilities(t?.signal);if(!("base-and-top"===e.operationType?l.mensuration.supportsHeightFromBaseAndTop:"base-and-top-shadow"===e.operationType?l.mensuration.supportsHeightFromBaseAndTopShadow:l.mensuration.supportsHeightFromTopAndTopShadow))throw new v.A("imagery-layer:measure-height","this operation is not supported on the input image service");return e=(0,$.o8)(e),i._applyMosaicAndRenderingRules(e),function ji(n,r,a){return Lt.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}measureAreaAndPerimeter(e,t){var i=this;return(0,y.A)(function*(){const l=yield i._fetchCapabilities(t?.signal);if(!l.mensuration.supportsAreaAndPerimeter||e.is3D&&!l.mensuration.supports3D)throw new v.A("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=(0,$.o8)(e),i._applyMosaicAndRenderingRules(e),function Oi(n,r,a){return Gt.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}measureDistanceAndAngle(e,t){var i=this;return(0,y.A)(function*(){const l=yield i._fetchCapabilities(t?.signal);if(!l.mensuration.supportsDistanceAndAngle||e.is3D&&!l.mensuration.supports3D)throw new v.A("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=(0,$.o8)(e),i._applyMosaicAndRenderingRules(e),function Zi(n,r,a){return Bt.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}measurePointOrCentroid(e,t){var i=this;return(0,y.A)(function*(){const l=yield i._fetchCapabilities(t?.signal);if(!l.mensuration.supportsPointOrCentroid||e.is3D&&!l.mensuration.supports3D)throw new v.A("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=(0,$.o8)(e),i._applyMosaicAndRenderingRules(e),function Ni(n,r,a){return Ut.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}measureLengthFromImage(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new v.A("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if("polyline"!==e.geometry.type)throw new v.A("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return function Ci(n,r,a){return $t.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}measureAreaFromImage(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsMeasureFromImage)throw new v.A("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if("polygon"!==e.geometry.type)throw new v.A("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return function Vi(n,r,a){return Ht.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}getField(e){const{fieldsIndex:t}=this;return t?.get(e)}getFieldDomain(e,t){const i=this.getField(e);return i?i.domain:null}fetchImage(e,t,i,l={}){var u=this;return(0,y.A)(function*(){if(null==e||null==t||null==i)throw new v.A("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(u.renderer||u.symbolizer){const I=yield u._generateRasterInfo(u.rasterFunction,{signal:l.signal});I&&(u.rasterInfo=I)}const m=u.getExportImageServiceParameters(e,t,i,l.timeExtent);if(null==m){if(l.requestAsImageElement&&u._canRequestImageElement(u.format)){const U=document.createElement("canvas");return U.width=t,U.height=i,l.returnImageBitmap?{imageBitmap:yield(0,ur.m)(U,`${a(u.parsedUrl)}/exportImage`,l.signal)}:{imageOrCanvasElement:U}}const{bandIds:I,rasterInfo:R}=u,x=(I?.length||R.bandCount)??0,S=t*i,f=R.pixelType,P=[];for(let U=0;U<x;U++)P.push(It.A.createEmptyBand(f,S));return{pixelData:{pixelBlock:new It.A({width:t,height:i,pixels:P,mask:new Uint8Array(S),pixelType:f}),extent:e}}}const d=!!l.requestAsImageElement&&!u.pixelFilter;return u._requestArrayBuffer({imageServiceParameters:m,imageProps:{extent:e,width:t,height:i,format:u.format},requestAsImageElement:d,returnImageBitmap:d&&!!l.returnImageBitmap,signal:l.signal})})()}fetchKeyProperties(e){return(0,D.A)(a(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new v.A("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):(0,D.A)(a(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e?.rasterFunction:null})}).then(t=>dr.A.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const i={...t,query:this._getQueryParams()};return function Wi(n,r,a){return ir.apply(this,arguments)}(a(this.parsedUrl),e,i)}getCatalogItemICSInfo(e,t){var i=this;return(0,y.A)(function*(){const{data:l}=yield(0,D.A)(a(i.parsedUrl)+"/"+e+"/info/ics",{query:i._getQueryParams(),...t}),u=l?.ics;if(!u)return;let m=null;try{m=(yield(0,D.A)(a(i.parsedUrl)+"/"+e+"/info",{query:i._getQueryParams(),...t})).data.extent}catch{}if(!m?.spatialReference)return{ics:u,icsToPixelTransform:null,icsExtent:null,northDirection:null};const d=i.version>=10.7?(0,D.A)(a(i.parsedUrl)+"/"+e+"/info/icstopixel",{query:i._getQueryParams(),...t}).then(C=>C.data).catch(()=>({})):{},c=m.spatialReference,h={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[m]}),inSR:(0,vt.YX)(c),outSR:"0:"+e},I=(0,D.A)(a(i.parsedUrl)+"/project",{query:i._getQueryParams(h),...t}).then(C=>C.data).catch(()=>({})),x=(m.xmin+m.xmax)/2,S=(m.ymax-m.ymin)/6,f=m.ymin+S,P=[];for(let C=0;C<5;C++)P.push({x,y:f+S*C});const U={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:P}),inSR:(0,vt.YX)(c),outSR:"0:"+e},J=(0,D.A)(a(i.parsedUrl)+"/project",{query:i._getQueryParams(U),...t}).then(C=>C.data).catch(()=>({})),B=yield Promise.all([d,I,J]);let he=B[0].ipxf;if(null==he){const C=u.geodataXform?.xf_0;"topup"===C?.name?.toLowerCase()&&6===C?.coefficients?.length&&(he={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:C.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const H=We.A.fromJSON(B[1]?.geometries?.[0]);H&&(H.spatialReference=new ce.A({wkid:0,imageCoordinateSystem:u}));const Z=B[2].geometries?B[2].geometries.filter(C=>null!=C?.x&&null!=C.y&&"NaN"!==C.x&&"NaN"!==C.y):[],X=Z.length;if(X<3)return{ics:u,icsToPixelTransform:he,icsExtent:H,northDirection:null};let se=0,ke=0,gt=0,ft=0;for(let C=0;C<X;C++)se+=Z[C].x,ke+=Z[C].y,gt+=Z[C].x*Z[C].x,ft+=Z[C].x*Z[C].y;const pe=(X*ft-se*ke)/(X*gt-se*se);let ge=0;const ze=Z[4].x>Z[0].x,fr=Z[4].y>Z[0].y;return pe===1/0?ge=fr?90:270:0===pe?ge=ze?0:180:pe>0?ge=ze?180*Math.atan(pe)/Math.PI:180*Math.atan(pe)/Math.PI+180:pe<0&&(ge=fr?180+180*Math.atan(pe)/Math.PI:360+180*Math.atan(pe)/Math.PI),{ics:u,icsToPixelTransform:he,icsExtent:H,northDirection:ge}})()}generateRasterInfo(e,t){var i=this;return(0,y.A)(function*(){if(e=(0,V.PZ)(O.A,e),i.serviceRasterInfo&&(!e||"none"===e.functionName?.toLowerCase()||i._isVectorFieldResampleFunction(e)))return i.serviceRasterInfo;const l=function ki(n){if(!n)return null;const r=JSON.stringify(n).match(/"rasterFunction":"(.*?")/gi),a=r?.map(e=>e.slice(18,-1));return a?a.join("/"):null}(e);if(!l)throw new v.A("imagery-layer:generate-raster-info","the rendering rule is not supported");if(i._functionRasterInfos[l])return i._functionRasterInfos[l];const u={...t,query:i._getQueryParams()},m=(0,rr.X6)(a(i.parsedUrl),e,u);i._functionRasterInfos[l]=m;try{return yield m}catch(d){throw i._functionRasterInfos[l]=null,d}})()}getExportImageServiceParameters(e,t,i,l){const u=Be((e=e.clone().shiftCentralMeridian()).spatialReference,a(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const m=this.exportImageServiceParameters.toJSON(),{bandIds:d,noData:c}=m;let{renderingRule:h}=m;const I=this.rasterFunction?.rasterFunctionDefinition,R=!this.renderer||"raster-stretch"===this.renderer.type;if(d?.length&&this._hasRasterFunction(this.rasterFunction)&&!I&&R){const f={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:d}};if("Stretch"===h.rasterFunction)f.rasterFunctionArguments.Raster=h.rasterFunctionArguments.Raster,h.rasterFunctionArguments.Raster=f;else if("Colormap"===h.rasterFunction){const P=h.rasterFunctionArguments.Raster;"Stretch"===P?.rasterFunction?(f.rasterFunctionArguments.Raster=P.rasterFunctionArguments.Raster,P.rasterFunctionArguments.Raster=f):(f.rasterFunctionArguments.Raster=P,h.rasterFunctionArguments.Raster=f)}else f.rasterFunctionArguments.Raster=h,h=f;m.bandIds=void 0}else m.bandIds=d?.join(",");Array.isArray(c)&&c.length>0&&(m.noData=c.join(","));const x=this._processMultidimensionalIntersection(null,l,this.exportImageServiceParameters.mosaicRule);if(x.isOutSide)return null;m.mosaicRule=null!=x.mosaicRule?JSON.stringify(x.mosaicRule):null,l=x.timeExtent,m.renderingRule=this._getRenderingRuleString(O.A.fromJSON(h));const S={};if(null!=l){const{start:f,end:P}=l.toJSON();f&&P&&f===P?S.time=""+f:null==f&&null==P||(S.time=`${f??"null"},${P??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:t+","+i,...m,...S}}getSamples(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal))?.operations.supportsGetSamples)throw new v.A("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=(0,$.o8)(e);const{raster:u}=i;return u&&null==e.raster&&(e.raster=u),function Ti(n,r,a){return Et.apply(this,arguments)}(i.url,e,i._getRequestOptions(t))})()}identify(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsIdentify)throw new v.A("imagery-layer:identify","identify operation is not supported on the input image service");e=(0,$.o8)(e),i.version<10.91&&"extent"===e.geometry?.type&&(e.geometry=ot.A.fromExtent(e.geometry));const l=i._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||i.mosaicRule);if(l.isOutSide)throw new v.A("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=l.timeExtent,e.mosaicRule=l.mosaicRule;const{raster:u,rasterFunction:m}=i;return m&&null==e.rasterFunction&&(e.rasterFunction=m),u&&null==e.raster&&(e.raster=u),hr(i.url,e,i._getRequestOptions(t))})()}imageToMap(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsImageToMap)throw new v.A("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return function Li(n,r,a){return Yt.apply(this,arguments)}(a(i.parsedUrl),e,i._getRequestOptions(t))})()}imageToMapMultiray(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsImageToMapMultiray)throw new v.A("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return function Gi(n,r,a){return Xt.apply(this,arguments)}(a(i.parsedUrl),e,i._getRequestOptions(t))})()}mapToImage(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsMapToImage)throw new v.A("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return function Ui(n,r,a){return qt.apply(this,arguments)}(a(i.parsedUrl),e,i._getRequestOptions(t))})()}findImages(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsFindImages)throw new v.A("imagery-layer:find-images","findImages operation is not supported on the input image service");return function zi(n,r,a){return er.apply(this,arguments)}(a(i.parsedUrl),e,i._getRequestOptions(t))})()}getImageUrl(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsGetImageUrl)throw new v.A("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return function Bi(n,r,a){return kt.apply(this,arguments)}(a(i.parsedUrl),e,i._getRequestOptions(t))})()}createQuery(){return new tr.A({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}queryBoundary(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsQueryBoundary)throw new v.A("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:i.spatialReference},function Ei(n,r,a){return Kt.apply(this,arguments)}(a(i.parsedUrl),e,i._getRequestOptions(t))})()}queryRasters(e,t){var i=this;return(0,y.A)(function*(){return({query:e,requestOptions:t}=yield i._prepareForQuery(e,t)),(0,$i.s)(i.url,e,t)})()}queryObjectIds(e,t){var i=this;return(0,y.A)(function*(){return({query:e,requestOptions:t}=yield i._prepareForQuery(e,t)),(0,Qi.V)(i.url,e,t)})()}queryGPSInfo(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsQueryGPSInfo)throw new v.A("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},function Ji(n,r,a){return Wt.apply(this,arguments)}(a(i.parsedUrl),e,i._getRequestOptions(t))})()}queryRasterCount(e,t){var i=this;return(0,y.A)(function*(){return({query:e,requestOptions:t}=yield i._prepareForQuery(e,t)),(0,Hi.I)(i.url,e,t)})()}queryVisibleRasters(e,t){var i=this;return(0,y.A)(function*(){if(!e)throw new v.A("imagery-layer: query-visible-rasters","missing query parameter");yield i.load();const{pixelSize:l,returnDomainValues:u,returnTopmostRaster:m,showNoDataRecords:d}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let c=!1,h=null,I=null;const R="raster.servicepixelvalue",x=i._rasterFunctionNamesIndex;if(null!=e.outFields&&(c=e.outFields.some(H=>!H.toLowerCase().includes(R)),i.version>=10.4)){const H=e.outFields.filter(X=>X.toLowerCase().includes(R)&&X.length>24).map(X=>{const se=X.slice(25);return[i._updateRenderingRulesFunctionName(se,x),se]});h=H.map(X=>new O.A({functionName:X[0]})),I=H.map(X=>X[1]);const{rasterFunction:Z}=i;0===h.length?Z?.functionName?(h.push(Z),I.push(Z.functionName)):h=null:Z?.functionName&&!h.some(X=>X.functionName===Z.functionName)&&(h.push(Z),I.push(Z.functionName))}const S=null==e.outSpatialReference||e.outSpatialReference.equals(i.spatialReference),{multidimensionalSubset:f}=i;let P=e.timeExtent||i.timeExtent;if(f){const{isOutside:H,intersection:Z}=(0,He.Rp)(f,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:i.exportImageServiceParameters.mosaicRule?.multidimensionalDefinition});if(H)throw new v.A("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");null!=Z?.timeExtent&&(P=Z.timeExtent)}const U=i._combineMosaicRuleWithTimeExtent(i.exportImageServiceParameters.mosaicRule,P);let J=e.geometry;i.version<10.91&&"extent"===J?.type&&(J=ot.A.fromExtent(J));const B=i._getQueryParams({geometry:J,timeExtent:P,mosaicRule:U,rasterFunction:i.version<10.4?i.rasterFunction:null,rasterFunctions:h,pixelSize:l,returnCatalogItems:c,returnGeometry:S,raster:i.raster,maxItemCount:m?1:null});delete B.f;const he=new cr(B);try{yield i._generateRasterInfo(i.rasterFunction);const H=yield hr(i.url,he,{signal:t?.signal,query:{...i.customParameters}}),Z=e.outFields,X=null!=H.value&&H.value.toLowerCase().includes("nodata");if(!c||S||!H?.catalogItems?.features.length||!d&&X)return i._processVisibleRastersResponse(H,{returnDomainValues:u,templateRRFunctionNames:I,showNoDataRecords:d,templateFields:Z});const se=i.objectIdField||"ObjectId",ke=H.catalogItems?.features??[],gt=ke.map(ge=>ge.attributes?.[se]),ft=new tr.A({objectIds:gt,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[se]}),pe=yield i.queryRasters(ft);return pe?.features?.length&&pe.features.forEach(ge=>{ke.forEach(ze=>{ze.attributes[se]===ge.attributes[se]&&(ze.geometry=new ot.A(ge.geometry),null!=e.outSpatialReference&&(ze.geometry.spatialReference=e.outSpatialReference))})}),i._processVisibleRastersResponse(H,{returnDomainValues:u,templateRRFunctionNames:I,showNoDataRecords:d,templateFields:Z})}catch{throw new v.A("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}})()}fetchVariableStatisticsHistograms(e,t){var i=this;return(0,y.A)(function*(){const l=(0,D.A)(a(i.parsedUrl)+"/statistics",{query:i._getQueryParams({variable:e}),signal:t}).then(d=>d.data?.statistics),u=(0,D.A)(a(i.parsedUrl)+"/histograms",{query:i._getQueryParams({variable:e}),signal:t}).then(d=>d.data?.histograms),m=yield Promise.all([l,u]);return m[0]&&m[0].forEach(d=>{d.avg=d.mean,d.stddev=d.standardDeviation}),{statistics:m[0]||null,histograms:m[1]||null}})()}createFlowMesh(e,t){var i=this;return(0,y.A)(function*(){const l=i._rasterJobHandler.instance;return l?l.createFlowMesh(e,t):(0,Yi.CW)(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)})()}getMultidimensionalSubsetVariables(e){return(0,He.z2)(this.multidimensionalSubset,e??this.serviceRasterInfo.multidimensionalInfo)}_fetchService(e){var t=this;return(0,y.A)(function*(){yield t._fetchServiceInfo(e),t.rasterInfo||(t.rasterInfo=t.serviceRasterInfo);const i=t.sourceJSON,l=null!=t.serviceRasterInfo?Promise.resolve(t.serviceRasterInfo):(0,rr.Tw)(a(t.parsedUrl),i,{signal:e,query:t._getQueryParams()}).then(d=>(t._set("serviceRasterInfo",d),t._set("multidimensionalInfo",d.multidimensionalInfo),(0,rr.E9)(d,i),d)),u=t._hasRasterFunction(t.rasterFunction)?t._generateRasterInfo(t.rasterFunction,{signal:e}):null,m=t._getRasterFunctionInfos();return Promise.all([l,u,m]).then(d=>{t._set("rasterInfo",d[1]?d[1]:d[0]),d[2]&&t._set("rasterFunctionInfos",d[2]),t.renderer&&!t._isSupportedRenderer(t.renderer)&&(t._set("renderer",null),j.A.getLogger(t).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),t._set("renderer",t._configRenderer(t.renderer)),t.addHandles([(0,vr.wB)(()=>t.rasterFunction,h=>{(t.renderer||t.symbolizer||t.popupEnabled&&t.popupTemplate)&&t._generateRasterInfo(h).then(I=>{I&&(t.rasterInfo=I)})})]);const{serviceRasterInfo:c}=t;null!=c.multidimensionalInfo&&t._updateMultidimensionalDefinition(c)})})()}_combineMosaicRuleWithTimeExtent(e,t){const i=this.timeInfo,{multidimensionalInfo:l}=this.serviceRasterInfo;if(null==e||null==l||null==t||null==i?.startField)return e;const{startField:u}=i,m=l.variables.some(S=>S.dimensions.some(f=>f.name===u))?u:"StdTime";if(e=e.clone(),"mosaic-dataset"===this.sourceType)return e.multidimensionalDefinition=e.multidimensionalDefinition?.filter(S=>S.dimensionName!==m),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const d=e.multidimensionalDefinition.filter(S=>S.dimensionName===m),c=null!=t.start?t.start.getTime():null,h=null!=t.end?t.end.getTime():null,I=null==c||null==h||c===h,R=I?[c||h]:[[c,h]],x=this.version>=10.8;if(d.length)d.forEach(S=>{S.dimensionName===m&&(x?(S.dimensionName=null,S.isSlice=!1,S.values=[]):(S.isSlice=I,S.values=R))});else if(!x){const S=e.multidimensionalDefinition.filter(f=>null!=f.variableName&&null==f.dimensionName);S.length?S.forEach(f=>{f.dimensionName=m,f.isSlice=I,f.values=R}):e.multidimensionalDefinition.push(new Ir.A({variableName:"",dimensionName:m,isSlice:I,values:R}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return null==e?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),0===e.multidimensionalDefinition.length&&(e.multidimensionalDefinition=null)),"mosaic-dataset"!==this.sourceType&&null==e.multidimensionalDefinition?null:e)}_prepareForQuery(e,t){var i=this;return(0,y.A)(function*(){if(!(yield i._fetchCapabilities(t?.signal)).operations.supportsQuery)throw new v.A("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=null!=e?(0,V.PZ)(tr.A,e):i.createQuery(),t=i._getRequestOptions(t),i.raster&&(t.query={...t.query,raster:i.raster}),{query:e,requestOptions:t}})()}_initJobHandler(){var e=this;return(0,y.A)(function*(){if(null!=e._rasterJobHandler.connectionPromise)return e._rasterJobHandler.connectionPromise;const t=new Lr.A;e._rasterJobHandler.connectionPromise=t.initialize().then(()=>{e._rasterJobHandler.instance=t},()=>{}),yield e._rasterJobHandler.connectionPromise})()}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:i}=this;return"unique-value"===e.type&&this._hasRasterFunction(i)&&1===t?.bandCount&&["u8","s8"].includes(t.pixelType)||null!=t&&null!=e&&(0,rt.fp)(t).includes(e.type)}_fetchCapabilities(e){var t=this;return(0,y.A)(function*(){return t.capabilities||(yield t._fetchServiceInfo(e)),t.capabilities})()}_fetchServiceInfo(e){var t=this;return(0,y.A)(function*(){let i=t.sourceJSON;if(!i){const{data:l,ssl:u}=yield(0,D.A)(a(t.parsedUrl),{query:t._getQueryParams(),signal:e});i=l,t.sourceJSON=i,u&&(t.url=t.url.replace(/^http:/i,"https:"))}if(i.capabilities?.toLowerCase().split(",").map(l=>l.trim()).indexOf("tilesonly")>-1)throw new v.A("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");t.read(i,{origin:"service",url:t.parsedUrl})})()}_isMosaicDataset(e){return e.serviceSourceType?"esriImageServiceSourceTypeMosaicDataset"===e.serviceSourceType:e.fields?.length>0}_isMosaicRuleSupported(e){return!!e&&(this._isMosaicDataset(e)||e.currentVersion>=10.71&&e.hasMultidimensions&&!(e.fields?.length>1))}_isVectorFieldResampleFunction(e){if(null==e)return!1;const{functionName:t,functionArguments:i}=e,l="resample"===t?.toLowerCase(),u=i?.ResampleType||i?.resampleType;return l&&(7===u||10===u)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){const t=this._isPicture(),{rasterInfo:i}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&i.bandCount>=3){const u=(0,rt.ci)(i);!u||3===i.bandCount&&0===u[0]&&1===u[1]&&2===u[2]||(this.bandIds=u)}e||(e=(0,rt.PD)(i,{bandIds:this.bandIds,variableName:this.rasterFunction?null:this.mosaicRule?.multidimensionalDefinition?.[0].variableName}));const l=(0,rt.$P)(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=l,this.symbolizer.rasterInfo=i):this.symbolizer=new Ur.A({rendererJSON:l,rasterInfo:i}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return null==e?e:{extent:e.extent&&e.extent.clone(),pixelBlock:null!=e.pixelBlock?e.pixelBlock.clone():null}}_getQueryParams(e){null!=e?.renderingRule&&"string"!=typeof e.renderingRule&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:i}=this;return{raster:t,viewId:i,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e?.query,...this.customParameters}}}_decodePixelBlock(e,t,i){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):(0,St.D)(e,t,i)}_getRasterFunctionInfos(e){var t=this;return(0,y.A)(function*(){const i=t.sourceJSON.rasterFunctionInfos;return t.loaded?i:i&&t.version>=10.3?1===i.length&&"none"===i[0].name.toLowerCase()?i:(yield(0,D.A)(a(t.parsedUrl)+"/rasterFunctionInfos",{query:t._getQueryParams(),signal:e})).data?.rasterFunctionInfos:null})()}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}_requestArrayBuffer(e){var t=this;return(0,y.A)(function*(){const{imageProps:i,requestAsImageElement:l,returnImageBitmap:u,signal:m}=e;if(l&&t._canRequestImageElement(i.format)){const f=`${a(t.parsedUrl)}/exportImage`,{data:P}=yield(0,D.A)(f,{responseType:u?"blob":"image",query:t._getQueryParams({f:"image",...t.refreshParameters,...e.imageServiceParameters}),signal:m});return P instanceof Blob?{imageBitmap:yield(0,ur.m)(P,f,m),params:i}:{imageOrCanvasElement:P,params:i}}const d=t._initJobHandler(),c=(0,D.A)(a(t.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:t._getQueryParams({f:"image",...e.imageServiceParameters}),signal:m}),h=(yield Promise.all([c,d]))[0].data,I=i.format||"jpgpng";let R=I;if("bsq"!==R&&"bip"!==R&&(R=(0,St.g)(h)),!R)throw new v.A("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(h)));const x={signal:m};return{pixelData:{pixelBlock:yield"gif"===I||"bmp"===I||I.includes("png")&&("png"===R||"jpg"===R)?(0,St.D)(h,{useCanvas:!0,...i},x):t._decodePixelBlock(h,{width:i.width,height:i.height,planes:null,pixelType:null,noDataValue:null,format:I},x),extent:i.extent},params:i}})()}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch(()=>null)}_isValidCustomizedMosaicRule(e){return e&&JSON.stringify(e.toJSON())!==JSON.stringify(this.defaultMosaicRule?.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=(0,He.fy)(e,{multidimensionalSubset:this.multidimensionalSubset});if(null!=t&&t.length>0){this.mosaicRule=this.mosaicRule||new ie.A;const i=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&"none"!==this.rasterFunction.functionName?.toLowerCase()&&t.forEach(l=>l.variableName=""),t=t.filter(({variableName:l,dimensionName:u})=>l&&"*"!==l||u),!i?.length&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){t=t||{};const i=e.value,{templateRRFunctionNames:l,showNoDataRecords:u,returnDomainValues:m,templateFields:d}=t,c=e.processedValues;let h=e.catalogItems?.features,I=e.properties?.Values?.map(J=>J.replaceAll(/ /gi,", "))||[];const R=this.objectIdField||"ObjectId",x="string"==typeof i&&i.toLowerCase().includes("nodata"),S=[];if(i&&!h&&!x){const J={};J[R]=0,I=[i],h=[new fe.A({geometry:this.fullExtent,attributes:J})]}if(!h)return[];let f,P,U;this._updateResponseFieldNames(h,d),x&&!u&&(h=[]);for(let J=0;J<h.length;J++){if(f=h[J],null!=i){if(P=I[J],U=this.rasterFunction&&c&&c.length>0&&l&&l.length>0&&l.includes(this.rasterFunction.functionName)?c[l.indexOf(this.rasterFunction.functionName)]:i,"nodata"===P.toLowerCase()&&!u)continue;const he="Raster.ServicePixelValue";f.attributes["Raster.ItemPixelValue"]=P,f.attributes[he]=U,this._updateFeatureWithMagDirValues(f,P);const H=this.fields&&this.fields.length>0;let Z=this.rasterFunction&&null!=this.serviceRasterInfo.attributeTable?H?P:i:U;this.rasterFunction||(Z=H?P:i),this._updateFeatureWithRasterAttributeTableValues(f,Z)}if(f.sourceLayer=f.layer=this,m&&this._updateFeatureWithDomainValues(f),l&&c&&l.length===c.length)for(let B=0;B<l.length;B++)f.attributes["Raster.ServicePixelValue."+l[B]]=c[B];S.push(h[J])}return S}_processMultidimensionalIntersection(e,t,i){const{multidimensionalSubset:l}=this;if(!l)return{isOutSide:!1,timeExtent:t,mosaicRule:i=this._combineMosaicRuleWithTimeExtent(i,t)};if(l){const{isOutside:u,intersection:m}=(0,He.Rp)(l,{geometry:e,timeExtent:t});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};null!=m?.timeExtent&&(t=m.timeExtent)}if(i=this._combineMosaicRuleWithTimeExtent(i,t),i?.multidimensionalDefinition){const{isOutside:u}=(0,He.Rp)(l,{multidimensionalDefinition:i.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:i}}_updateFeatureWithRasterAttributeTableValues(e,t){const i=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(null==i)return;const{features:l,fields:u}=i,m=u.map(c=>c.name).find(c=>"value"===c.toLowerCase());if(!m)return;const d=l.filter(c=>c.attributes[m]===(null!=t?parseInt(t,10):null));d&&d[0]&&u.forEach(c=>{e.attributes[this._rasterAttributeTableFieldPrefix+c.name]=d[0].attributes[c.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const i=t.split(/,\s*/).map(c=>parseFloat(c)),l=i.map(c=>[c]),u=i.map(c=>({minValue:c,maxValue:c,noDataValue:null})),m=new It.A({height:1,width:1,pixelType:"f32",pixels:l,statistics:u});null!=this.pixelFilter&&this.pixelFilter({pixelBlock:m,extent:new We.A(0,0,0,0,this.spatialReference)});const d="esriImageServiceDataTypeVector-MagDir"===this.serviceDataType?[m.pixels[0][0],m.pixels[1][0]]:(0,Gr.Lu)([m.pixels[0][0],m.pixels[1][0]]);e.attributes["Raster.Magnitude"]=d[0],e.attributes["Raster.Direction"]=d[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(i=>i.domain&&"coded-value"===i.domain.type);t?.forEach(i=>{const l=e.attributes[i.name];if(null!=l){const u=i.domain.codedValues.find(m=>m.code===l);u&&(e.attributes[i.name]=u.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const i=this.fieldsIndex;null!=i&&e.forEach(l=>{if(l?.attributes)for(const u of t){const m=i.get(u)?.name;m&&m!==u&&(l.attributes[u]=l.attributes[m],delete l.attributes[m])}})}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return null!=e?.functionName&&"none"!==e.functionName.toLowerCase()}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if("Raw"===e)return e.replace("Raw","None");const i=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(i)?t.get(i):e}_isRFTJson(e){return e?.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return"esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:i,rasterFunction:l}=this;l&&"rasterFunction"in e&&null==e.rasterFunction&&(e.rasterFunction=l),i&&null==e.mosaicRule&&(e.mosaicRule=i),t&&null==e.raster&&(e.raster=t)}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(P=>P.trim()):["image","catalog"],{currentVersion:i,advancedQueryCapabilities:l,maxRecordCount:u}=e,m=t.includes("image"),d="esriImageServiceDataTypeElevation"===e.serviceDataType,c=!(!e.spatialReference&&!e.extent?.spatialReference),h=t.includes("edit"),I=t.includes("mensuration")&&c,R=null==e.mensurationCapabilities?[]:e.mensurationCapabilities.toLowerCase().split(",").map(P=>P.trim()),x=I&&R.includes("basic"),S=this._isMosaicDataset(e)&&t.includes("catalog"),f=t.includes("download");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:m,supportsExportImage:m,supportsIdentify:m,supportsImageToMap:i>=11.2&&S,supportsImageToMapMultiray:i>=11.2&&S,supportsMapToImage:i>=11.2&&S,supportsFindImages:i>=11.2&&S,supportsGetImageUrl:i>=11.3&&f,supportsMeasure:I,supportsMeasureFromImage:i>=11.2,supportsDownload:f,supportsQuery:S&&e.fields&&e.fields.length>0,supportsGetSamples:i>=10.2&&m,supportsProject:i>=10.3&&m,supportsComputeStatisticsHistograms:i>=10.4&&m,supportsQueryBoundary:i>=10.6&&m,supportsCalculateVolume:i>=10.7&&d,supportsComputePixelLocation:i>=10.7&&S,supportsComputeAngles:i>=10.91,supportsQueryGPSInfo:i>=11.2&&S,supportsAdd:h,supportsDelete:h,supportsEditing:h,supportsUpdate:h,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!l?.supportsStatistics,supportsOrderBy:!!l?.supportsOrderBy,supportsDistinct:!!l?.supportsDistinct,supportsPagination:!!l?.supportsPagination,supportsStandardizedQueriesOnly:!!l?.useStandardizedQueries,supportsPercentileStatistics:!!l?.supportsPercentileStatistics,supportsCentroid:!!l?.supportsReturningGeometryCentroid,supportsDistance:!!l?.supportsQueryWithDistance,supportsExtent:!!l?.supportsReturningQueryExtent,supportsGeometryProperties:!!l?.supportsReturningGeometryProperties,supportsHavingClause:!!l?.supportsHavingClause,supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!l?.supportsDefaultSR,supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:x,supportsAreaAndPerimeter:x,supportsPointOrCentroid:x,supportsHeightFromBaseAndTop:I&&R.includes("base-top height"),supportsHeightFromBaseAndTopShadow:I&&R.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:I&&R.includes("top-top shadow height"),supports3D:I&&R.includes("3d")}}}};function a(e){return e?.path??""}return(0,s._)([(0,o.MZ)({clonable:!1})],r.prototype,"_functionRasterInfos",void 0),(0,s._)([(0,o.MZ)({clonable:!1})],r.prototype,"_rasterJobHandler",void 0),(0,s._)([(0,o.MZ)({clonable:!1})],r.prototype,"_cachedRendererJson",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],r.prototype,"_serviceSupportsMosaicRule",void 0),(0,s._)([(0,Y.w)("_serviceSupportsMosaicRule",["currentVersion","fields"])],r.prototype,"readServiceSupportsMosaicRule",null),(0,s._)([(0,o.MZ)({readOnly:!0})],r.prototype,"_rasterAttributeTableFieldPrefix",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],r.prototype,"_rasterFunctionNamesIndex",null),(0,s._)([(0,o.MZ)()],r.prototype,"adjustAspectRatio",void 0),(0,s._)([(0,o.MZ)({type:[V.jz],json:{write:!0}})],r.prototype,"bandIds",void 0),(0,s._)([(0,Y.w)("bandIds")],r.prototype,"readBandIds",null),(0,s._)([(0,o.MZ)({readOnly:!0,json:{read:!1}})],r.prototype,"capabilities",void 0),(0,s._)([(0,Y.w)("service","capabilities",["capabilities","currentVersion","serviceDataType"])],r.prototype,"readCapabilities",null),(0,s._)([(0,o.MZ)({type:Number})],r.prototype,"compressionQuality",void 0),(0,s._)([(0,F.K)("compressionQuality")],r.prototype,"writeCompressionQuality",null),(0,s._)([(0,o.MZ)({type:Number})],r.prototype,"compressionTolerance",void 0),(0,s._)([(0,F.K)("compressionTolerance")],r.prototype,"writeCompressionTolerance",null),(0,s._)([(0,o.MZ)({json:{read:{source:"copyrightText"}}})],r.prototype,"copyright",void 0),(0,s._)([(0,o.MZ)({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],r.prototype,"defaultMosaicRule",void 0),(0,s._)([(0,Y.w)("defaultMosaicRule",["defaultMosaicMethod"])],r.prototype,"readDefaultMosaicRule",null),(0,s._)([(0,o.MZ)({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],r.prototype,"definitionExpression",void 0),(0,s._)([(0,o.MZ)({readOnly:!0,constructOnly:!0})],r.prototype,"exportImageServiceParameters",void 0),(0,s._)([(0,o.MZ)()],r.prototype,"rasterInfo",void 0),(0,s._)([(0,o.MZ)({readOnly:!0,type:[De.A]})],r.prototype,"fields",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],r.prototype,"fieldsIndex",null),(0,s._)([(0,o.MZ)({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],r.prototype,"format",null),(0,s._)([(0,Y.w)("service","format",["serviceDataType"])],r.prototype,"readFormat",null),(0,s._)([(0,o.MZ)({type:We.A})],r.prototype,"fullExtent",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],r.prototype,"hasMultidimensions",void 0),(0,s._)([(0,o.MZ)({json:{read:{source:"maxImageHeight"}}})],r.prototype,"imageMaxHeight",void 0),(0,s._)([(0,o.MZ)({json:{read:{source:"maxImageWidth"}}})],r.prototype,"imageMaxWidth",void 0),(0,s._)([(0,o.MZ)({type:String,json:{type:q.SZ.jsonValues,read:q.SZ.read,write:q.SZ.write}})],r.prototype,"interpolation",void 0),(0,s._)([(0,o.MZ)()],r.prototype,"minScale",void 0),(0,s._)([(0,Y.w)("service","minScale")],r.prototype,"readMinScale",null),(0,s._)([(0,o.MZ)()],r.prototype,"maxScale",void 0),(0,s._)([(0,Y.w)("service","maxScale")],r.prototype,"readMaxScale",null),(0,s._)([(0,o.MZ)({type:ie.A})],r.prototype,"mosaicRule",null),(0,s._)([(0,Y.w)("mosaicRule",["mosaicRule","defaultMosaicMethod"])],r.prototype,"readMosaicRule",null),(0,s._)([(0,F.K)("mosaicRule")],r.prototype,"writeMosaicRule",null),(0,s._)([(0,o.MZ)()],r.prototype,"multidimensionalInfo",void 0),(0,s._)([(0,o.MZ)({type:Jr.A,json:{write:!0}})],r.prototype,"multidimensionalSubset",void 0),(0,s._)([(0,o.MZ)({json:{type:V.jz}})],r.prototype,"noData",void 0),(0,s._)([(0,F.K)("noData")],r.prototype,"writeNoData",null),(0,s._)([(0,o.MZ)({type:String,json:{type:q.hm.jsonValues,read:q.hm.read,write:q.hm.write}})],r.prototype,"noDataInterpretation",void 0),(0,s._)([(0,o.MZ)({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],r.prototype,"objectIdField",void 0),(0,s._)([(0,Y.w)("objectIdField")],r.prototype,"readObjectIdField",null),(0,s._)([(0,o.MZ)({readOnly:!0})],r.prototype,"geometryType",void 0),(0,s._)([(0,o.MZ)({})],r.prototype,"typeIdField",void 0),(0,s._)([(0,o.MZ)({})],r.prototype,"types",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],r.prototype,"parsedUrl",null),(0,s._)([(0,o.MZ)({type:Function})],r.prototype,"pixelFilter",void 0),(0,s._)([(0,o.MZ)()],r.prototype,"raster",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],r.prototype,"sourceType",void 0),(0,s._)([(0,Y.w)("sourceType",["serviceSourceType","fields"])],r.prototype,"readSourceType",null),(0,s._)([(0,o.MZ)()],r.prototype,"viewId",void 0),(0,s._)([(0,o.MZ)({types:Pe.uy,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:Pe.Gj,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],r.prototype,"renderer",null),(0,s._)([(0,Y.w)("renderer")],r.prototype,"readRenderer",null),(0,s._)([(0,F.K)("renderer")],r.prototype,"writeRenderer",null),(0,s._)([(0,o.MZ)({clonable:!1})],r.prototype,"symbolizer",void 0),(0,s._)([(0,o.MZ)(et.ke)],r.prototype,"opacity",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],r.prototype,"rasterFields",null),(0,s._)([(0,o.MZ)({constructOnly:!0})],r.prototype,"rasterFunctionInfos",void 0),(0,s._)([(0,o.MZ)({type:O.A})],r.prototype,"renderingRule",null),(0,s._)([(0,o.MZ)({type:O.A,json:{name:"renderingRule"}})],r.prototype,"rasterFunction",null),(0,s._)([(0,Y.w)("rasterFunction",["renderingRule","rasterFunctionInfos"])],r.prototype,"readRasterFunction",null),(0,s._)([(0,o.MZ)({readOnly:!0})],r.prototype,"serviceDataType",void 0),(0,s._)([(0,o.MZ)({readOnly:!0,type:ce.A})],r.prototype,"spatialReference",void 0),(0,s._)([(0,Y.w)("spatialReference",["spatialReference","extent"])],r.prototype,"readSpatialReference",null),(0,s._)([(0,o.MZ)({json:{type:q.e8.jsonValues}})],r.prototype,"pixelType",void 0),(0,s._)([(0,Y.w)("pixelType")],r.prototype,"readPixelType",null),(0,s._)([(0,F.K)("pixelType")],r.prototype,"writePixelType",null),(0,s._)([(0,o.MZ)({constructOnly:!0,type:pr.A})],r.prototype,"serviceRasterInfo",void 0),(0,s._)([(0,o.MZ)()],r.prototype,"sourceJSON",void 0),(0,s._)([(0,o.MZ)(et.OZ)],r.prototype,"url",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],r.prototype,"version",void 0),(0,s._)([(0,Y.w)("version",["currentVersion","fields","timeInfo"])],r.prototype,"readVersion",null),r=(0,s._)([(0,g.$)("esri.layers.mixins.ArcGISImageService")],r),r};var tn=p(25936),rn=p(93410),nn=p(23e3),sn=p(17049),on=p(85551),an=p(1151),ln=p(33036),un=p(84311),pn=p(5540),mn=p(41843),ht=p(71655);let re=class extends((0,rn.dM)((0,un.e)((0,ln.j)((0,sn.q)((0,on.A)(en((0,an.J)((0,nn.d)((0,tn.b)((0,_.P)((0,w.O)(te.A)))))))))))){constructor(...n){var r;super(...n),r=this,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=(0,b.sg)(function(){var a=(0,y.A)(function*(e,t,i){const{save:l,saveAs:u}=yield Promise.all([p.e(2076),p.e(3236)]).then(p.bind(p,23518));switch(e){case ht.X.SAVE:return l(r,t);case ht.X.SAVE_AS:return u(r,i,t)}});return function(e,t,i){return a.apply(this,arguments)}}())}normalizeCtorArgs(n,r){return"string"==typeof n?{url:n,...r}:n}load(n){const r=null!=n?n.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},n).catch(b.QP).then(()=>this._fetchService(r))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(n){this._set("legendEnabled",n)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(n){this._set("listMode",n)}writeOperationalLayerType(n,r,a){r[a]="vector-field"===this.renderer?.type?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){return!(!this.raster||!this.url?.toLowerCase().includes("/rasterrendering/imageserver"))}createPopupTemplate(n){const r=this.rasterFields,a=this.title,e=new Set;let t=!1,i=!1;this.capabilities&&(t=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,i="esriImageServiceDataTypeVector-UV"===this.serviceDataType||"esriImageServiceDataTypeVector-MagDir"===this.serviceDataType);const l=new Set;t&&l.add("raster.itempixelvalue");for(const m of r){const d=m.name.toLowerCase();l.has(d)||d.includes("raster.servicepixelvalue.")||e.add(m.name)}i&&e.add("raster.magnitude").add("raster.direction");const u=(0,mn.tn)({fields:r,title:a},{...n,visibleFieldNames:e});return u?.fieldInfos&&this.rasterInfo?.pixelType.startsWith("f")&&u.fieldInfos.forEach(({format:m,fieldName:d})=>{m&&d&&/^raster\.(item|service)pixelvalue/i.test(d)&&(m.places=2)}),u}queryFeatures(n,r){return this.queryRasters(n,r).then(a=>{if(a?.features)for(const e of a.features)e.layer=e.sourceLayer=this;return a})}queryFeatureCount(n,r){return this.queryRasterCount(n,r)}redraw(){this.emit("redraw")}save(n){var r=this;return(0,y.A)(function*(){return r._debouncedSaveOperations(ht.X.SAVE,n)})()}saveAs(n,r){var a=this;return(0,y.A)(function*(){return a._debouncedSaveOperations(ht.X.SAVE_AS,r,n)})()}serviceSupportsSpatialReference(n){return(0,pn.D)(this,n)}write(n,r){return this._isPreviewLayer?(r?.messages&&r.messages.push(new v.A("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${r.origin}/${r.layerContainerType||"operational-layers"}'`,{layer:this})),null):super.write(n,r)}};(0,s._)([(0,o.MZ)(et.fV)],re.prototype,"legendEnabled",null),(0,s._)([(0,o.MZ)({type:["show","hide"]})],re.prototype,"listMode",null),(0,s._)([(0,o.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],re.prototype,"isReference",void 0),(0,s._)([(0,o.MZ)({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],re.prototype,"operationalLayerType",void 0),(0,s._)([(0,F.K)("web-map","operationalLayerType")],re.prototype,"writeOperationalLayerType",null),(0,s._)([(0,o.MZ)(et.M6)],re.prototype,"popupEnabled",void 0),(0,s._)([(0,o.MZ)({type:M.A,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],re.prototype,"popupTemplate",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],re.prototype,"defaultPopupTemplate",null),(0,s._)([(0,o.MZ)({readOnly:!0,json:{read:!1}})],re.prototype,"type",void 0),(0,s._)([(0,o.MZ)({readOnly:!0})],re.prototype,"_isPreviewLayer",null),re=(0,s._)([(0,g.$)("esri.layers.ImageryLayer")],re);const cn=re},42086:(Ae,W,p)=>{p.d(W,{N3:()=>M,Om:()=>s});var y=p(13682);class s{constructor(_=null,b={},o,T){this.geometry=_,this.attributes=b,this.centroid=o,this.objectId=T,this.displayId=0,this.geohashX=0,this.geohashY=0}static fromJSON(_,b){const o=_.geometry?y.A.fromJSON(_.geometry):null,T=_.centroid?y.A.fromJSON(_.centroid):null;return new s(o,_.attributes,T,_.attributes[b])}weakClone(){const _=new s(this.geometry,this.attributes,this.centroid,this.objectId);return _.displayId=this.displayId,_.geohashX=this.geohashX,_.geohashY=this.geohashY,_}clone(){const _=this.geometry?.clone(),b=new s(_,{...this.attributes},this.centroid?.clone(),this.objectId);return b.displayId=this.displayId,b.geohashX=this.geohashX,b.geohashY=this.geohashY,b}}function M(v){return!!v.geometry?.coords?.length}},61808:(Ae,W,p)=>{p.d(W,{A:()=>y});class y{constructor(){this.objectIdFieldName=null,this.globalIdFieldName=null,this.geohashFieldName=null,this.geometryProperties=null,this.geometryType=null,this.spatialReference=null,this.hasZ=!1,this.hasM=!1,this.features=[],this.fields=[],this.transform=null,this.exceededTransferLimit=!1,this.uniqueIdField=null,this.queryGeometryType=null,this.queryGeometry=null}weakClone(){const M=new y;return M.objectIdFieldName=this.objectIdFieldName,M.globalIdFieldName=this.globalIdFieldName,M.geohashFieldName=this.geohashFieldName,M.geometryProperties=this.geometryProperties,M.geometryType=this.geometryType,M.spatialReference=this.spatialReference,M.hasZ=this.hasZ,M.hasM=this.hasM,M.features=this.features,M.fields=this.fields,M.transform=this.transform,M.exceededTransferLimit=this.exceededTransferLimit,M.uniqueIdField=this.uniqueIdField,M.queryGeometry=this.queryGeometry,M.queryGeometryType=this.queryGeometryType,M}}},13682:(Ae,W,p)=>{p.d(W,{A:()=>s});class s{constructor(w=[],v=[],_=!1){this.lengths=w??[],this.coords=v??[],this.hasIndeterminateRingOrder=_}static fromJSON(w){return new s(w.lengths,w.coords,w.hasIndeterminateRingOrder)}static fromRect(w){const[v,_,b,o]=w,T=b-v,j=o-_;return new s([5],[v,_,T,0,0,j,-T,0,0,-j])}get isPoint(){return 0===this.lengths.length}get maxLength(){return Math.max(...this.lengths)}get size(){return this.lengths.reduce((w,v)=>w+v)}forEachVertex(w){let v=0;this.lengths.length||w(this.coords[0],this.coords[1]);for(let _=0;_<this.lengths.length;_++){const b=this.lengths[_];for(let o=0;o<b;o++)w(this.coords[2*(o+v)],this.coords[2*(o+v)+1]);v+=b}}deltaDecode(){const w=this.clone(),{coords:v,lengths:_}=w;let b=0;for(const o of _){for(let T=1;T<o;T++)v[2*(b+T)]+=v[2*(b+T)-2],v[2*(b+T)+1]+=v[2*(b+T)-1];b+=o}return w}clone(w){if(0===this.lengths.length)return new s([],[this.coords[0],this.coords[1]]);const v=2*(0===this.lengths.length?1:this.lengths.reduce((b,o)=>b+o)),_=this.coords.slice(0,v);return w?(w.set(_),new s(this.lengths,w,this.hasIndeterminateRingOrder)):new s(Array.from(this.lengths),Array.from(_),this.hasIndeterminateRingOrder)}}},63014:(Ae,W,p)=>{p.d(W,{C:()=>_,m:()=>w});var y=p(10467),s=p(5922),M=p(56492);function w(o,T,j){return v.apply(this,arguments)}function v(){return(v=(0,y.A)(function*(o,T,j){let Q;try{Q=yield createImageBitmap(o)}catch(g){throw new s.A("request:server",`Unable to load ${T}`,{url:T,error:g})}return(0,M.Te)(j),Q})).apply(this,arguments)}function _(o,T,j,Q,g){return b.apply(this,arguments)}function b(){return(b=(0,y.A)(function*(o,T,j,Q,g){let F;try{F=yield createImageBitmap(o)}catch(te){throw new s.A("request:server",`Unable to load tile ${T}/${j}/${Q}`,{error:te,level:T,row:j,col:Q})}return(0,M.Te)(g),F})).apply(this,arguments)}},33063:(Ae,W,p)=>{p.d(W,{I:()=>v});var y=p(10467),s=p(68800),M=p(1277),w=p(87086);function v(b,o,T){return _.apply(this,arguments)}function _(){return(_=(0,y.A)(function*(b,o,T){const j=(0,s.Dl)(b),{data:Q}=yield(0,M.gW)(j,w.A.from(o),T);return Q.count})).apply(this,arguments)}},87342:(Ae,W,p)=>{p.d(W,{V:()=>v});var y=p(10467),s=p(68800),M=p(1277),w=p(87086);function v(b,o,T){return _.apply(this,arguments)}function _(){return(_=(0,y.A)(function*(b,o,T){const j=(0,s.Dl)(b),{data:Q}=yield(0,M.Pk)(j,w.A.from(o),T);return Q.objectIds})).apply(this,arguments)}},34687:(Ae,W,p)=>{p.d(W,{e:()=>o,s:()=>_});var y=p(10467),s=p(68800),M=p(1277),w=p(93327),v=p(87086);function _(j,Q,g){return b.apply(this,arguments)}function b(){return(b=(0,y.A)(function*(j,Q,g){const F=yield o(j,Q,g);return w.A.fromJSON(F)})).apply(this,arguments)}function o(j,Q,g){return T.apply(this,arguments)}function T(){return(T=(0,y.A)(function*(j,Q,g){const F=(0,s.Dl)(j),te={...g},z=v.A.from(Q),{data:fe}=yield(0,M.eW)(F,z,z.sourceSpatialReference,te);return fe})).apply(this,arguments)}},70994:(Ae,W,p)=>{p.d(W,{A:()=>F});var j,y=p(8189),s=p(71065),M=p(85211),w=p(55739),b=(p(40707),p(3248),p(76576));const Q={1:{id:1,rotation:0,mirrored:!1},2:{id:2,rotation:0,mirrored:!0},3:{id:3,rotation:180,mirrored:!1},4:{id:4,rotation:180,mirrored:!0},5:{id:5,rotation:-90,mirrored:!0},6:{id:6,rotation:90,mirrored:!1},7:{id:7,rotation:90,mirrored:!0},8:{id:8,rotation:-90,mirrored:!1}};let g=j=class extends s.oY{constructor(te){super(te),this.contentType=null,this.exifInfo=null,this.id=null,this.globalId=null,this.keywords=null,this.name=null,this.parentGlobalId=null,this.parentObjectId=null,this.size=null,this.url=null}get orientationInfo(){const{exifInfo:te}=this,z=function o(te){const{exifInfo:z,exifName:fe,tagName:Pe}=te;if(!z||!fe||!Pe)return null;const D=z.find(_e=>_e.name===fe);return D?function T(te){const{tagName:z,tags:fe}=te;return fe&&z&&fe.find(D=>D.name===z)?.value||null}({tagName:Pe,tags:D.tags}):null}({exifName:"Exif IFD0",tagName:"Orientation",exifInfo:te});return Q[z]||null}clone(){return new j({contentType:this.contentType,exifInfo:this.exifInfo,id:this.id,globalId:this.globalId,keywords:this.keywords,name:this.name,parentGlobalId:this.parentGlobalId,parentObjectId:this.parentObjectId,size:this.size,url:this.url})}};(0,y._)([(0,M.MZ)({type:String})],g.prototype,"contentType",void 0),(0,y._)([(0,M.MZ)()],g.prototype,"exifInfo",void 0),(0,y._)([(0,M.MZ)({readOnly:!0})],g.prototype,"orientationInfo",null),(0,y._)([(0,M.MZ)({type:w.jz})],g.prototype,"id",void 0),(0,y._)([(0,M.MZ)({type:String})],g.prototype,"globalId",void 0),(0,y._)([(0,M.MZ)({type:String})],g.prototype,"keywords",void 0),(0,y._)([(0,M.MZ)({type:String})],g.prototype,"name",void 0),(0,y._)([(0,M.MZ)({json:{read:!1}})],g.prototype,"parentGlobalId",void 0),(0,y._)([(0,M.MZ)({json:{read:!1}})],g.prototype,"parentObjectId",void 0),(0,y._)([(0,M.MZ)({type:w.jz})],g.prototype,"size",void 0),(0,y._)([(0,M.MZ)({json:{read:!1}})],g.prototype,"url",void 0),g=j=(0,y._)([(0,b.$)("esri.rest.query.support.AttachmentInfo")],g);const F=g}}]);