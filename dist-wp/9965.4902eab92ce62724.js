"use strict";(self.webpackChunkangular_18_test=self.webpackChunkangular_18_test||[]).push([[9965],{78400:(fe,xt,x)=>{x.d(xt,{vt:()=>io,UD:()=>An});var J=x(29430),ot=x(5922),K=x(77806),c=x(8189),p=x(85211),M=(x(3248),x(35150),x(40707),x(76576)),E=x(96115),Lt=x(71065);let O=class extends Lt.oY{constructor(){super(...arguments),this.raster=void 0}};(0,c._)([(0,p.MZ)({json:{write:!0}})],O.prototype,"raster",void 0),O=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.BaseFunctionArguments")],O);const W=O;var wt;let lt=wt=class extends W{constructor(){super(...arguments),this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new wt({raster:this.raster,raster2:this.raster2,operation:this.operation})}};(0,c._)([(0,p.MZ)({json:{write:!0}})],lt.prototype,"operation",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],lt.prototype,"raster2",void 0),(0,c._)([(0,p.MZ)({readOnly:!0})],lt.prototype,"rasters",null),lt=wt=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.ArithmeticFunctionArguments")],lt);const ae=lt;var ue=x(48669),y=x(21980),ge=x(83179);const A=new Set(["slope","aspect","curvature","hillshade","shadedrelief","statistics"]);let T=class extends Lt.oY{constructor(){super(...arguments),this.functionArguments=null,this.readingBufferSize=0,this.id=-1,this.isNoopProcess=!1,this.rawInputBandIds=[],this.rawSourceRasterInfos=null,this.isInputBandIdsSwizzled=!1,this.swizzledBandSelection=[],this.isBranch=!1,this._bindingResult=null}get supportsGPU(){return this._bindingResult.supportsGPU}get flatWebGLFunctionChain(){const t=this.getWebGLProcessorDefinition();if(!t)return null;const e=[t],{parameters:s}=t;let n=s.rasters||s.raster&&[s.raster];for(;n?.length;){e.unshift(...n);const r=[];for(let u=0;u<n.length;u++){const{parameters:l}=n[u],m=l.rasters||l.raster&&[l.raster];m?.length&&r.push(...m)}n=r}for(let r=e.length-1;r>=0;r--)e[r].isNoopProcess&&e.splice(r,1);let o=!1;for(let r=0;r<e.length;r++){const u=e[r];u.id=e.length-r-1;const{rasters:l}=u.parameters;o=o||null!=l&&l.length>1}const a=e.some(({name:r})=>A.has(r.toLowerCase())),{rawSourceRasterInfos:i}=this;return{functions:e,hasBranches:o,hasFocalFunction:a,isSourceSingleBand:1===i?.[0]?.bandCount}}bind(t,e=!1,s=-1){this.id=s+1;const n=this._getRasterValues();let o=!0;for(let a=0;a<n.length;a++){const i=n[a];if(null!=i&&this._isRasterFunctionValue(i)){const r=i.bind(t,e,this.id+a);if(!r.success)return this._bindingResult=r,r;o=o&&r.supportsGPU}}return!this.rasterInfo||e?(this.sourceRasterInfos=this._getSourceRasterInfos(t),this._bindingResult=this._bindSourceRasters(),this._bindingResult.success&&this._patchRasterInfo(),this._bindingResult.supportsGPU=o&&this._bindingResult.supportsGPU,this.processInputBandIds(),this._bindingResult):(this._bindingResult={success:!0,supportsGPU:!0},this.processInputBandIds(),this._bindingResult)}process(t){const e=this._getRasterValues(),s=0===e.length?t.pixelBlocks??t.primaryPixelBlocks:e.map(n=>this._readRasterValue(n,t));return this._processPixels({...t,pixelBlocks:s})}processInputBandIds(){const t=this._getRasterValues().filter(this._isRasterFunctionValue);let e;if(t.length>1){const o=t.map(i=>i.processInputBandIds()[0]);this.rawInputBandIds=o,this.isInputBandIdsSwizzled=this.rawInputBandIds.some((i,r)=>i!==r);const a=t.filter(i=>"ExtractBand"===i.functionName);return a.length&&a.forEach((i,r)=>{i.isInputBandIdsSwizzled=!0,i.swizzledBandSelection=[r,r,r]}),this.rawInputBandIds}const s=t[0];if(s){if(e=s.processInputBandIds(),s.isInputBandIdsSwizzled)return this.rawInputBandIds=e,e}else{e=[];const{bandCount:o}=this.sourceRasterInfos[0];for(let a=0;a<o;a++)e.push(a)}const n=this._getInputBandIds(e);return this.isInputBandIdsSwizzled=n.some((o,a)=>o!==a),this.rawInputBandIds=n,this.rawInputBandIds}getPrimaryRasters(){const t=[],e=[];return this._getPrimaryRasters(this,t,e),{rasters:t,rasterIds:e}}getWebGLProcessorDefinition(){const t=this._getWebGLParameters(),{raster:e,rasters:s}=this.functionArguments;return s&&Array.isArray(s)&&s.length?(t.rasters=s.map(n=>this._isRasterFunctionValue(n)?n.getWebGLProcessorDefinition():"number"==typeof n?{name:"Constant",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}:{name:"Identity",parameters:{value:n},pixelType:"f32",id:-1,isNoopProcess:!1}),t.rasters.some(n=>null!=n)||(t.rasters=null)):this._isRasterFunctionValue(e)&&(t.raster=e.getWebGLProcessorDefinition()),{name:this.functionName,parameters:t,pixelType:this.outputPixelType,id:this.id,isNoopProcess:this.isNoopProcess}}getClippingGeometries(){const t=[];"Clip"===this.functionName&&t.push(this.functionArguments);const{raster:e,rasters:s}=this.functionArguments;if(s&&Array.isArray(s)&&s.length)s.forEach(n=>{if(this._isRasterFunctionValue(n)){const o=n.getClippingGeometries();t.push(...o)}});else if(this._isRasterFunctionValue(e)){const n=e.getClippingGeometries();t.push(...n)}return t}_getOutputPixelType(t){return"unknown"===this.outputPixelType?t:this.outputPixelType??t}_getWebGLParameters(){return{}}_getInputBandIds(t){return t}_removeStatsHistColormapVAT(t){t.statistics=null,t.histograms=null,t.colormap=null,t.attributeTable=null}_getRasterValues(){const{rasterArgumentNames:t}=this;return"rasters"===t[0]?this.functionArguments.rasters??[]:t.flatMap(e=>this.functionArguments[e])}_getSourceRasterInfos(t){const e=this._getRasterValues(),{rasterInfos:s,rasterIds:n}=t;if(0===e.length)return s;const o=e.map(i=>i&&"object"==typeof i&&"bind"in i&&i.rasterInfo?i.rasterInfo:"string"==typeof i&&n.includes(i)?s[n.indexOf(i)]:"number"!=typeof i?s[0]:void 0),a=o.find(i=>i)??s[0];return o.forEach((i,r)=>{void 0===i&&(o[r]=a)}),o}_getPrimaryRasterId(t){return t?.rasterId}_getPrimaryRasters(t,e=[],s=[]){for(let n=0;n<t.sourceRasters.length;n++){const o=t.sourceRasters[n];if("number"!=typeof o)if("bind"in o)this._getPrimaryRasters(o,e,s);else{const a=o,i=this._getPrimaryRasterId(a);if(null==i)continue;s.includes(i)||(this.mainPrimaryRasterId===i?(e.unshift(a),s.unshift(i)):(e.push(a),s.push(i)))}}}_isRasterFunctionValue(t){return null!=t&&"object"==typeof t&&"getWebGLProcessorDefinition"in t}_readRasterValue(t,e){const{primaryPixelBlocks:s}=e;if(null==t||"$$"===t){const n=s[0];return null==n?null:n.clone()}if("string"==typeof t){const n=e.primaryRasterIds.indexOf(t);return-1===n?null:s[n]}if("number"==typeof t){const n=s[0];if(null==n)return null;const{width:o,height:a,pixelType:i}=n,r=new Float32Array(o*a);r.fill(t);const l=new Array(this.sourceRasterInfos[0].bandCount).fill(r);return new y.A({width:o,height:a,pixelType:i,pixels:l})}return t.process(e)}_patchRasterInfo(){const{rasterInfo:t}=this;if(!t?.keyProperties)return;const{bandCount:e,keyProperties:s,statistics:n,histograms:o}=t,a=s.BandProperties;a&&a.length!==e&&(t.keyProperties={...s,BandProperties:void 0}),n&&n.length!==e&&(t.statistics=n.length>e?n.slice(0,e):null),o&&o.length!==e&&(t.histograms=o.length>e?o.slice(0,e):null),s.BAND_COUNT&&Number(s.BAND_COUNT)!==e&&(t.keyProperties={...s,BAND_COUNT:"string"==typeof s.BAND_COUNT?String(e):e})}};(0,c._)([(0,p.MZ)({json:{write:!0}})],T.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],T.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],T.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}}),(0,ue.w)(t=>t?.toLowerCase())],T.prototype,"outputPixelType",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],T.prototype,"mainPrimaryRasterId",void 0),(0,c._)([(0,p.MZ)()],T.prototype,"sourceRasters",void 0),(0,c._)([(0,p.MZ)({type:[ge.A],json:{write:!0}})],T.prototype,"sourceRasterInfos",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],T.prototype,"rasterInfo",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],T.prototype,"readingBufferSize",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],T.prototype,"id",void 0),(0,c._)([(0,p.MZ)()],T.prototype,"isNoopProcess",void 0),(0,c._)([(0,p.MZ)()],T.prototype,"supportsGPU",null),(0,c._)([(0,p.MZ)()],T.prototype,"rawInputBandIds",void 0),(0,c._)([(0,p.MZ)()],T.prototype,"rawSourceRasterInfos",void 0),(0,c._)([(0,p.MZ)()],T.prototype,"isInputBandIdsSwizzled",void 0),(0,c._)([(0,p.MZ)()],T.prototype,"swizzledBandSelection",void 0),(0,c._)([(0,p.MZ)()],T.prototype,"isBranch",void 0),(0,c._)([(0,p.MZ)({readOnly:!0})],T.prototype,"flatWebGLFunctionChain",null),(0,c._)([(0,p.MZ)()],T.prototype,"_bindingResult",void 0),T=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.BaseRasterFunction")],T);const I=T,D={userDefined:-1,lineDetectionHorizontal:0,lineDetectionVertical:1,lineDetectionLeftDiagonal:2,lineDetectionRightDiagonal:3,gradientNorth:4,gradientWest:5,gradientEast:6,gradientSouth:7,gradientNorthEast:8,gradientNorthWest:9,smoothArithmeticMean:10,smoothing3x3:11,smoothing5x5:12,sharpening3x3:13,sharpening5x5:14,laplacian3x3:15,laplacian5x5:16,sobelHorizontal:17,sobelVertical:18,sharpen:19,sharpen2:20,pointSpread:21,none:255},tt={bitwiseAnd:11,bitwiseLeftShift:12,bitwiseNot:13,bitwiseOr:14,bitwiseRightShift:15,bitwiseXOr:16,booleanAnd:17,booleanNot:18,booleanOr:19,booleanXOr:20,equalTo:24,greaterThan:28,greaterThanEqual:29,lessThan:33,lessThanEqual:34,isNull:31,notEqual:46},at={acos:6,asin:7,atan:8,atanh:9,cos:21,cosh:22,sin:51,sinh:52,tan:56,tanh:57,acosh:59,asinh:60,atan2:61},$e={setNull:50,conditional:78},He={plus:1,minus:2,times:3,sqrt:4,power:5,abs:10,divide:23,exp:25,exp10:26,exp2:27,int:30,float:32,ln:35,log10:36,log2:37,mod:44,negate:45,roundDown:48,roundUp:49,square:53,floatDivide:64,floorDivide:65,...tt,...at,majority:38,max:39,mean:40,med:41,min:42,minority:43,range:47,stddev:54,sum:55,variety:58,majorityIgnoreNoData:66,maxIgnoreNoData:67,meanIgnoreNoData:68,medIgnoreNoData:69,minIgnoreNoData:70,minorityIgnoreNoData:71,rangeIgnoreNoData:72,stddevIgnoreNoData:73,sumIgnoreNoData:74,varietyIgnoreNoData:75,...$e},Ke=new Map([[at.acos,{domain:[0,Math.PI],isInteger:!1}],[at.asin,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[at.atan,{domain:[-Math.PI/2,Math.PI/2],isInteger:!1}],[at.cos,{domain:[-1,1],isInteger:!1}],[at.sin,{domain:[-1,1],isInteger:!1}],[tt.booleanAnd,{domain:[0,1],isInteger:!0}],[tt.booleanNot,{domain:[0,1],isInteger:!0}],[tt.booleanOr,{domain:[0,1],isInteger:!0}],[tt.booleanXOr,{domain:[0,1],isInteger:!0}],[tt.equalTo,{domain:[0,1],isInteger:!0}],[tt.notEqual,{domain:[0,1],isInteger:!0}],[tt.greaterThan,{domain:[0,1],isInteger:!0}],[tt.greaterThanEqual,{domain:[0,1],isInteger:!0}],[tt.lessThan,{domain:[0,1],isInteger:!0}],[tt.lessThanEqual,{domain:[0,1],isInteger:!0}],[tt.isNull,{domain:[0,1],isInteger:!0}]]);function Je(t){return Ke.get(t)}const Xe=[0,2,2,2,1,2,1,1,1,1,1,2,2,1,2,2,2,2,1,2,2,1,1,2,2,1,1,1,2,2,1,1,1,2,2,1,1,1,999,999,999,999,999,999,2,1,2,999,1,1,2,1,1,1,999,999,1,1,999,1,1,2,999,999,2,2,999,999,999,999,999,999,999,999,999,999,3,999,3];function In(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]+o[r]);return i}function Cn(t,e,s){const[n]=t,a=y.A.createEmptyBand("f32",n.length);return a.set(n),a}function Bn(t,e,s){const[n]=t,o=n.length,a=y.A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]*n[i]);return a}function Rn(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]-o[r]);return i}function Nn(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]*o[r]);return i}function Dn(t,e,s){const[n]=t,o=n.length,a=y.A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=Math.sign(n[i])*Math.floor(Math.abs(n[i])));return a}function Ye(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]/o[r]);return i}function kn(t,e,s){return Ye(t,e,"f32")}function Sn(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=Math.floor(n[r]/o[r]));return i}function jn(t,e,s,n){const o=t[0],a=o.length,i=y.A.createEmptyBand(s,a);if(n===at.atanh){for(let u=0;u<a;u++)if(e[u]){const l=o[u];Math.abs(l)>=1?e[u]=0:i[u]=Math.atanh(l)}return i}const r=n===at.asin?Math.asin:Math.acos;for(let u=0;u<a;u++)if(e[u]){const l=o[u];Math.abs(l)>1?e[u]=0:i[u]=r(l)}return i}function En(t,e,s,n){const[o]=t,a=o.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n(o[r]));return i}function On(t,e,s,n){const[o,a]=t,i=o.length,r=y.A.createEmptyBand(s,i);for(let u=0;u<i;u++)e&&!e[u]||(r[u]=n(o[u],a[u]));return r}function Un(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]&o[r]);return i}function Zn(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]<<o[r]);return i}function Gn(t,e,s){const[n]=t,o=n.length,a=y.A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=~n[i]);return a}function Ln(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]|o[r]);return i}function zn(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]>>o[r]);return i}function Vn(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]^o[r]);return i}function Wn(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]&&o[r]?1:0);return i}function $n(t,e,s){const[n]=t,o=n.length,a=y.A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=n[i]?0:1);return a}function Hn(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]||o[r]?1:0);return i}function Kn(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=(n[r]?1:0)^(o[r]?1:0));return i}function Jn(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]===o[r]?1:0);return i}function ye(t,e,s,n){const[o]=t,a=o.length,i=y.A.createEmptyBand(s,a),r=n===Math.E;for(let u=0;u<a;u++)e&&!e[u]||(i[u]=r?Math.exp(o[u]):n**o[u]);return i}function Xn(t,e,s){return ye(t,e,s,10)}function Yn(t,e,s){return ye(t,e,s,2)}function Qn(t,e,s){return ye(t,e,s,Math.E)}function _e(t,e,s,n){const[o]=t,a=o.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(o[r]<=0?e[r]=0:i[r]=n(o[r]));return i}function qn(t,e,s){return _e(t,e,s,Math.log10)}function ts(t,e,s){return _e(t,e,s,Math.log2)}function es(t,e,s){return _e(t,e,s,Math.log)}function ns(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]>o[r]?1:0);return i}function ss(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]>=o[r]?1:0);return i}function rs(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]<o[r]?1:0);return i}function os(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]<=o[r]?1:0);return i}function is(t,e,s){const[n]=t,o=n.length,a=y.A.createEmptyBand(s,o);if(!e)return a;for(let i=0;i<o;i++)a[i]=e[i]?0:1;return a}function as(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]%o[r]);return i}function us(t,e,s){const[n]=t,o=n.length,a=y.A.createEmptyBand(s,o);for(let i=0;i<o;i++)e&&!e[i]||(a[i]=-n[i]);return a}function ls(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e&&!e[r]||(i[r]=n[r]===o[r]?0:1);return i}function cs(t,e,s){const[n,o]=t,a=n.length,i=y.A.createEmptyBand(s,a),r=new Uint8Array(a);for(let u=0;u<a;u++)null!=e&&!e[u]||0!==n[u]||(i[u]=o[u],r[u]=255);return{band:i,mask:r}}function Qe(t,e,s){const[n,o,a]=t,i=n.length,r=y.A.createEmptyBand(s,i);for(let u=0;u<i;u++)e&&!e[u]||(r[u]=n[u]?o[u]:a[u]);return r}function qe(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,a=o.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)if(!e||e[r]){let u=o[r];for(let l=1;l<n;l++){const m=t[l][r];u<m&&(u=m)}i[r]=u}return i}function tn(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,a=o.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)if(!e||e[r]){let u=o[r];for(let l=1;l<n;l++){const m=t[l][r];u>m&&(u=m)}i[r]=u}return i}function en(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,a=o.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)if(!e||e[r]){let u=o[r],l=u;for(let m=1;m<n;m++){const h=t[m][r];l<h?l=h:u>h&&(u=h)}i[r]=l-u}return i}function nn(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,a=o.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)if(!e||e[r]){let u=0;for(let l=0;l<n;l++)u+=t[l][r];i[r]=u/n}return i}function sn(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,a=o.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)if(!e||e[r])for(let u=0;u<n;u++)i[r]+=t[u][r];return i}function rn(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,a=o.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)if(!e||e[r]){const u=new Float32Array(n);let l=0;for(let h=0;h<n;h++){const d=t[h];l+=d[r],u[h]=d[r]}l/=n;let m=0;for(let h=0;h<n;h++)m+=(u[h]-l)**2;i[r]=Math.sqrt(m/n)}return i}function on(t,e,s){const n=t.length;if(n<2)return t[0];const o=Math.floor(n/2),[a]=t,i=a.length,r=y.A.createEmptyBand(s,i),u=new Float32Array(n),l=n%2==1;for(let m=0;m<i;m++)if(!e||e[m]){for(let h=0;h<n;h++)u[h]=t[h][m];u.sort(),r[m]=l?u[o]:(u[o]+u[o-1])/2}return r}function an(t,e,s){const[n,o]=t;if(null==o)return n;const a=n.length,i=y.A.createEmptyBand(s,a);for(let r=0;r<a;r++)e[r]&&(n[r]===o[r]?i[r]=n[r]:e[r]=0);return i}function un(t,e,s){const n=t.length;if(n<=2)return an(t,e,s);const o=t[0].length,a=y.A.createEmptyBand(s,o),i=new Map;for(let r=0;r<o;r++)if(!e||e[r]){let u;i.clear();for(let h=0;h<n;h++)u=t[h][r],i.set(u,i.has(u)?i.get(u)+1:1);let l=0,m=0;for(const h of i.keys())l=i.get(h),l>m&&(m=l,u=h);a[r]=u}return a}function ln(t,e,s){const n=t.length;if(n<=2)return an(t,e,s);const o=t[0].length,a=y.A.createEmptyBand(s,o),i=new Map;for(let r=0;r<o;r++)if(!e||e[r]){let u;i.clear();for(let h=0;h<n;h++)u=t[h][r],i.set(u,i.has(u)?i.get(u)+1:1);let l=0,m=t.length;for(const h of i.keys())l=i.get(h),l<m&&(m=l,u=h);a[r]=u}return a}function cn(t,e,s){const n=t.length;if(n<2)return t[0];const[o]=t,a=o.length,i=y.A.createEmptyBand(s,a),r=new Set;for(let u=0;u<a;u++)if(!e||e[u]){let l;r.clear();for(let m=0;m<n;m++)l=t[m][u],r.add(l);i[u]=r.size}return i}const Y=new Map,ce=new Map,j=new Map,G=new Map;function ms(t,e,s,n){let[o,a]=(0,E.hP)(s);const i=(0,E.zw)(s);i&&(o-=1e-5,a+=1e-5);for(let r=0;r<e.length;r++)if(e[r]){const u=t[r];isNaN(u)||u<o||u>a?e[r]=0:n[r]=i?Math.round(u):u}}function pn(t,e,s={}){!function ps(){Y.size||(Y.set(4,Math.sqrt),Y.set(6,Math.acos),Y.set(7,Math.asin),Y.set(8,Math.atan),Y.set(9,Math.atanh),Y.set(10,Math.abs),Y.set(21,Math.cos),Y.set(22,Math.cosh),Y.set(48,Math.floor),Y.set(49,Math.ceil),Y.set(51,Math.sin),Y.set(52,Math.sinh),Y.set(56,Math.tan),Y.set(57,Math.tanh),Y.set(59,Math.acosh),Y.set(60,Math.asinh),Y.set(65,Math.floor),ce.set(5,Math.pow),ce.set(61,Math.atan2),j.set(1,In),j.set(2,Rn),j.set(3,Nn),j.set(11,Un),j.set(12,Zn),j.set(13,Gn),j.set(14,Ln),j.set(15,zn),j.set(16,Vn),j.set(17,Wn),j.set(18,$n),j.set(19,Hn),j.set(20,Kn),j.set(23,Ye),j.set(24,Jn),j.set(25,Qn),j.set(26,Xn),j.set(27,Yn),j.set(28,ns),j.set(29,ss),j.set(30,Dn),j.set(31,is),j.set(32,Cn),j.set(33,rs),j.set(34,os),j.set(35,es),j.set(36,qn),j.set(37,ts),j.set(44,as),j.set(45,us),j.set(46,ls),j.set(53,Bn),j.set(64,kn),j.set(65,Sn),j.set(76,Qe),j.set(78,Qe),G.set(38,un),G.set(39,qe),G.set(40,nn),G.set(41,on),G.set(42,tn),G.set(43,ln),G.set(47,en),G.set(54,rn),G.set(55,sn),G.set(58,cn),G.set(66,un),G.set(67,qe),G.set(68,nn),G.set(69,on),G.set(70,tn),G.set(71,ln),G.set(72,en),G.set(73,rn),G.set(74,sn),G.set(75,cn))}();let n=function Tn(t,e=!1){const s=t.map(r=>r.mask),n=s.filter(r=>null!=r);if(0===n.length||e&&n.length!==s.length)return new Uint8Array(t[0].pixels[0].length).fill(255);const i=new Uint8Array(n[0]);if(1===n.length)return i;if(!e){for(let r=1;r<n.length;r++){const u=n[r];for(let l=0;l<i.length;l++)i[l]&&(i[l]=u[l]?255:0)}return i}for(let r=1;r<n.length;r++){const u=n[r];for(let l=0;l<i.length;l++)0===i[l]&&(i[l]=u[l]?255:0)}return i}(t,e>=66&&e<=75);const{outputPixelType:o="f32"}=s,a=!G.has(e)||s.processAsMultiband,i=a?t[0].pixels.length:1,r=[];for(let l=0;l<i;l++){const m=G.has(e)&&!a?t.flatMap(f=>f.pixels):t.map(f=>f.pixels[l]);let h,d=!0;if(e===$e.setNull){const f=cs(m,n,o);h=f.band,n=f.mask,d=!1}else j.has(e)?h=j.get(e)(m,n,"f64"):Y.has(e)?h=e===at.asin||e===at.acos||e===at.atanh?jn(m,n,"f64",e):En(m,n,"f64",Y.get(e)):ce.has(e)?h=On(m,n,"f64",ce.get(e)):G.has(e)?h=G.get(e)(m,n,"f64"):(h=m[0],d=!1);if(d&&e!==tt.isNull&&!Ke.has(e)){const f=y.A.createEmptyBand(o,h.length);n||(n=new Uint8Array(h.length).fill(255)),ms(h,n,o,f),h=f}r.push(h)}const u=t[0];return new y.A({width:u.width,height:u.height,pixelType:o,mask:e===tt.isNull?null:n,pixels:r})}let Vt=class extends I{constructor(){super(...arguments),this.functionName="Arithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{operation:t}=this.functionArguments;if(t<1||t>6)return{success:!1,supportsGPU:!1,error:"unsupported operation"};const e=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:e.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return null==e?.[0]||null==e?.[1]?null:function hs(t,e,s){return pn(t,e=[null,1,2,3,23,5,44][e]??1,{outputPixelType:s})}(e,this.functionArguments.operation,this.outputPixelType)}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=["","plus","minus","times","divide","power","mod"][t],s=this.outputPixelType??"f32";let[n,o]=(0,E.hP)(s);const a=(0,E.zw)(s);return a&&(n-=1e-4,o+=1e-4),{imageCount:2,operationName:e,domainRange:[n,o],isOutputRounded:a}}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],Vt.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:ae,json:{write:!0,name:"rasterFunctionArguments"}})],Vt.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],Vt.prototype,"rasterArgumentNames",void 0),Vt=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.ArithmeticFunction")],Vt);const ds=Vt;var Ae;let ve=Ae=class extends W{clone(){return new Ae({raster:this.raster})}};ve=Ae=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.AspectFunctionArguments")],ve);const fs=ve;var Wt=x(14870);let bt=class extends I{constructor(){super(...arguments),this.functionName="Aspect",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.isGCS=t.spatialReference?.isGeographic??!1,this.outputPixelType=this._getOutputPixelType("f32");const e=t.clone();return e.pixelType=this.outputPixelType,e.statistics=[{min:-1,max:360,avg:180,stddev:30}],e.histograms=null,e.colormap=null,e.attributeTable=null,e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{extent:s,primaryPixelSizes:n}=t,o=n?.[0];return(0,Wt.di)(e,{resolution:o??(s?{x:s.width/e.width,y:s.height/e.height}:{x:1,y:1})})}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],bt.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:fs,json:{write:!0,name:"rasterFunctionArguments"}})],bt.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],bt.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],bt.prototype,"isGCS",void 0),bt=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.AspectFunction")],bt);const gs=bt;var dt=x(15463),ft=x(49976);const ys=new Set(["+","-","*","/","(",")"]);function mn(t,e){return t.toLowerCase().startsWith("b")?e[parseInt(t.slice(1),10)-1]:parseFloat(t)}function As(t,e,s,n){if("number"==typeof s&&"number"==typeof n)return s+n;let o,a,i;"number"==typeof s?(i=n,o=i.length,a=new Float32Array(o),a.fill(s)):(o=s.length,a=s,n.constructor===Number?(i=new Float32Array(o),i.fill(n)):i=n);const r=new Float32Array(o);switch(e){case"+":for(let u=0;u<o;u++)(null==t||t[u])&&(r[u]=a[u]+i[u]);break;case"-":for(let u=0;u<o;u++)(null==t||t[u])&&(r[u]=a[u]-i[u]);break;case"*":for(let u=0;u<o;u++)(null==t||t[u])&&(r[u]=a[u]*i[u]);break;case"/":for(let u=0;u<o;u++)(null==t||t[u])&&i[u]&&(r[u]=a[u]/i[u]);break;case"(":case")":throw new Error("encountered error with custom band index equation")}return r}function vs(t,e){t.splice(e,1);let s=0,n=0;do{s=0,n=0;for(let o=0;o<t.length;o++)if("("===t[o])s=o;else if(")"===t[o]){n=o;break}n===s+1&&t.splice(s,2)}while(n===s+1);return t}function xs(t){if(1===t.length)return{opIndex:0,numIndex:0};let e=0,s=0;for(let i=0;i<t.length;i++)if("("===t[i])e=i;else if(")"===t[i]){s=i;break}const n=0===s?t:t.slice(e+1,s);let o=-1;for(let i=0;i<n.length;i++)if("*"===n[i]||"/"===n[i]){o=i;break}if(o>-1)s>0&&(o+=e+1);else{for(let i=0;i<n.length;i++)if("+"===n[i]||"-"===n[i]){o=i;break}s>0&&(o+=e+1)}let a=0;for(let i=0;i<o;i++)"("===t[i]&&a++;return{opIndex:o,numIndex:o-a}}var $=x(40275);const bs=new ft.J({0:"custom",1:"ndvi",2:"savi",3:"tsavi",4:"msavi",5:"gemi",6:"pvi",7:"gvitm",8:"sultan",9:"vari",10:"gndvi",11:"sr",12:"ndvi-re",13:"sr-re",14:"mtvi2",15:"rtvi-core",16:"ci-re",17:"ci-g",18:"ndwi",19:"evi",20:"iron-oxide",21:"ferrous-minerals",22:"clay-minerals",23:"wndwi",24:"bai",25:"nbr",26:"ndbi",27:"ndmi",28:"ndsi",29:"mndwi"},{useNumericKeys:!0});function Fs(t,e){if(!(0,$.AB)(t))return t;const{equation:s,method:n}=e,o=e.bandIndexes.map(m=>m-1),{pixels:a,mask:i}=t;let r;switch(n){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":r=hn(i,a[o[0]],a[o[1]]);break;case"ndwi":r=hn(i,a[o[1]],a[o[0]]);break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":r=function Ps(t,e,s){const n=s.length,o=new Float32Array(n);for(let a=0;a<n;a++)if(null==t||t[a]){const r=s[a];r&&(o[a]=e[a]/r)}return[o]}(i,a[o[0]],a[o[1]]);break;case"ci-g":case"ci-re":r=function Ts(t,e,s){const n=e.length,o=new Float32Array(n);for(let a=0;a<n;a++)if(null==t||t[a]){const r=s[a];r&&(o[a]=e[a]/r-1)}return[o]}(i,a[o[0]],a[o[1]]);break;case"savi":r=function Is(t,e,s,n){const o=s.length,a=new Float32Array(o);for(let i=0;i<o;i++)if(null==t||t[i]){const r=s[i],u=e[i],l=u+r+n;l&&(a[i]=(u-r)/l*(1+n))}return[a]}(i,a[o[0]],a[o[1]],o[2]+1);break;case"tsavi":r=function Cs(t,e,s,n,o,a){const i=s.length,r=new Float32Array(i),u=-o*n+a*(1+n*n);for(let l=0;l<i;l++)if(null==t||t[l]){const m=s[l],h=e[l],d=o*h+m+u;d&&(r[l]=n*(h-n*m-o)/d)}return[r]}(i,a[o[0]],a[o[1]],o[2]+1,o[3]+1,o[4]+1);break;case"msavi":r=function Bs(t,e,s){const n=s.length,o=new Float32Array(n);for(let a=0;a<n;a++)if(null==t||t[a]){const r=e[a],u=2*r+1;o[a]=.5*(u-Math.sqrt(u*u-8*(r-s[a])))}return[o]}(i,a[o[0]],a[o[1]]);break;case"gemi":r=function Rs(t,e,s){const n=s.length,o=new Float32Array(n);for(let a=0;a<n;a++)if(null==t||t[a]){const i=s[a],r=e[a];if(1!==i&&r+i+.5!==0){const u=(2*(r*r-i*i)+1.5*r+.5*i)/(r+i+.5);o[a]=u*(1-.25*u)-(i-.125)/(1-i)}}return[o]}(i,a[o[0]],a[o[1]]);break;case"pvi":r=function Ns(t,e,s,n,o){const a=s.length,i=new Float32Array(a),r=1/Math.sqrt(1+n*n);for(let u=0;u<a;u++)(null==t||t[u])&&(i[u]=(e[u]-n*s[u]-o)*r);return[i]}(i,a[o[0]],a[o[1]],o[2]+1,o[3]+1);break;case"gvitm":r=function Ds(t,e){const[s,n,o,a,i,r]=e,u=s.length,l=new Float32Array(u);for(let m=0;m<u;m++)(null==t||t[m])&&(l[m]=-.2848*s[m]-.2435*n[m]-.5436*o[m]+.7243*a[m]+.084*i[m]-.18*r[m]);return[l]}(i,[a[o[0]],a[o[1]],a[o[2]],a[o[3]],a[o[4]],a[o[5]]]);break;case"sultan":r=function ks(t,e){const[s,n,o,a,i]=e,r=s.length,u=new Float32Array(r),l=new Float32Array(r),m=new Float32Array(r);for(let h=0;h<r;h++)(null==t||t[h])&&(u[h]=i[h]?a[h]/i[h]*100:0,l[h]=s[h]?a[h]/s[h]*100:0,m[h]=o[h]?n[h]/o[h]*(a[h]/o[h])*100:0);return[u,l,m]}(i,[a[o[0]],a[o[1]],a[o[2]],a[o[3]],a[o[4]]]);break;case"vari":r=function Ss(t,e){const[s,n,o]=e,a=s.length,i=new Float32Array(a);for(let r=0;r<a;r++)if(null==t||t[r])for(r=0;r<a;r++){const u=s[r],l=n[r],m=l+u-o[r];m&&(i[r]=(l-u)/m)}return[i]}(i,[a[o[0]],a[o[1]],a[o[2]]]);break;case"mtvi2":r=function js(t,e){const[s,n,o]=e,a=s.length,i=new Float32Array(a);for(let r=0;r<a;r++)if(null==t||t[r])for(r=0;r<a;r++){const u=s[r],l=n[r],m=o[r],h=Math.sqrt((2*u+1)**2-(6*u-5*Math.sqrt(l))-.5);h&&(i[r]=1.5*(1.2*(u-m)-2.5*(l-m))/h)}return[i]}(i,[a[o[0]],a[o[1]],a[o[2]]]);break;case"rtvi-core":r=function Es(t,e){const[s,n,o]=e,a=s.length,i=new Float32Array(a);for(let r=0;r<a;r++)if(null==t||t[r])for(r=0;r<a;r++){const u=s[r];i[r]=100*(u-n[r])-10*(u-o[r])}return[i]}(i,[a[o[0]],a[o[1]],a[o[2]]]);break;case"evi":r=function Os(t,e){const[s,n,o]=e,a=s.length,i=new Float32Array(a);for(let r=0;r<a;r++)if(null==t||t[r])for(r=0;r<a;r++){const u=s[r],l=n[r],m=u+6*l-7.5*o[r]+1;m&&(i[r]=2.5*(u-l)/m)}return[i]}(i,[a[o[0]],a[o[1]],a[o[2]]]);break;case"wndwi":r=function Us(t,e,s=.5){const[n,o,a]=e,i=o.length,r=new Float32Array(i);for(let u=0;u<i;u++)if(null==t||t[u])for(u=0;u<i;u++){const l=n[u],m=o[u],h=a[u],d=l+s*m+(1-s)*h;d&&(r[u]=(l-s*m-(1-s)*h)/d)}return[r]}(i,[a[o[0]],a[o[1]],a[o[2]]],o[3]?o[3]+1:.5);break;case"bai":r=function Zs(t,e,s){const n=s.length,o=new Float32Array(n);for(let a=0;a<n;a++)if(null==t||t[a])for(a=0;a<n;a++){const i=(.1-e[a])**2+(.06-s[a])**2;i&&(o[a]=1/i)}return[o]}(i,a[o[0]],a[o[1]]);break;case"custom":r=function ws(t,e,s){let n,{ops:o,nums:a}=function _s(t,e){(t=t.replaceAll(" ","")).startsWith("-")&&(t="0"+t),t.startsWith("+")&&(t=t.slice(1,t.length));const s=t.split(""),n=[],o=[];let a="";for(let i=0;i<s.length;i++){const r=s[i];ys.has(r)?(a.length&&o.push(mn(a,e)),n.push(r),a=""):a=a.concat(r)}return a.length&&o.push(mn(a,e)),{ops:n,nums:o}}(s,e);if(0===o.length){const i=1===a.length?a[0]:e[0];if(i instanceof Float32Array)return[i];const r=new Float32Array(e[0].length);return"number"==typeof i?r.fill(i):r.set(i),[r]}for(;o.length>0;){const{numIndex:i,opIndex:r}=xs(o);if(n=As(t,o[r],a[i],a[i+1]),1===o.length)break;o=vs(o,r),a.splice(i,2,n)}return[n]}(i,a,s);break;default:return t}const u=null!=i?new Uint8Array(i.length):null;null!=i&&null!=u&&u.set(i);const l=new y.A({width:t.width,height:t.height,pixelType:"f32",pixels:r,mask:u});return l.updateStatistics(),l}function Q(t){const e=new Float32Array(9);return e[3*t[0]]=1,e[3*t[1]+1]=1,e[3*t[2]+2]=1,e}function hn(t,e,s){const n=s.length,o=new Float32Array(n);for(let a=0;a<n;a++)if(null==t||t[a]){const i=e[a],r=s[a],u=i+r;u&&(o[a]=(i-r)/u)}return[o]}var xe;let ee=xe=class extends W{constructor(){super(...arguments),this.method="custom"}clone(){return new xe({method:this.method,bandIndexes:this.bandIndexes,raster:(0,K.o8)(this.raster)})}};(0,c._)([(0,p.MZ)({json:{type:String,write:!0}})],ee.prototype,"bandIndexes",void 0),(0,c._)([(0,dt.e)(bs)],ee.prototype,"method",void 0),ee=xe=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.BandArithmeticFunctionArguments")],ee);const Gs=ee,Ls=new Set(["vari","mtvi2","rtvi-core","evi"]);let $t=class extends I{constructor(){super(...arguments),this.functionName="BandArithmetic",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0];if(t.bandCount<2)return{success:!1,supportsGPU:!1,error:"band-arithmetic-function: source raster has insufficient amount of raster bands"};const e=t.clone();return e.pixelType=this.outputPixelType,e.bandCount="sultan"===this.functionArguments.method?3:1,this._removeStatsHistColormapVAT(e),e.keyProperties={...e.keyProperties,BandProperties:void 0},this.rasterInfo=e,{success:!0,supportsGPU:!["custom","gvitm","sultan"].includes(this.functionArguments.method)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{method:s,bandIndexes:n}=this.functionArguments;return Fs(e,{method:s,bandIndexes:n.split(" ").map(a=>parseFloat(a)),equation:n})}_getWebGLParameters(){const t=this.functionArguments.bandIndexes.split(" ").map(i=>parseFloat(i)-1);2===t.length&&t.push(0);const e=this.isInputBandIdsSwizzled?[0,1,2]:t;let s,n;const o=new Float32Array(3),{method:a}=this.functionArguments;switch(a){case"gndvi":case"nbr":case"ndbi":case"ndvi":case"ndvi-re":case"ndsi":case"ndmi":case"mndwi":s=Q([e[0],e[1],0]),n="ndxi";break;case"ndwi":s=Q([e[1],e[0],0]),n="ndxi";break;case"sr":case"sr-re":case"iron-oxide":case"ferrous-minerals":case"clay-minerals":s=Q([e[0],e[1],0]),n="sr";break;case"ci-g":case"ci-re":s=Q([e[0],e[1],0]),n="ci";break;case"savi":s=Q([e[0],e[1],0]),n="savi",o[0]=t[2]+1;break;case"tsavi":s=Q([e[0],e[1],0]),n="tsavi",o[0]=t[2]+1,o[1]=t[3]+1,o[2]=t[4]+1;break;case"msavi":s=Q([e[0],e[1],0]),n="msavi";break;case"gemi":s=Q([e[0],e[1],0]),n="gemi";break;case"pvi":s=Q([e[0],e[1],0]),n="tsavi",o[0]=t[2]+1,o[1]=t[3]+1;break;case"vari":s=Q([e[0],e[1],e[2]]),n="vari";break;case"mtvi2":s=Q([e[0],e[1],e[2]]),n="mtvi";break;case"rtvi-core":s=Q([e[0],e[1],e[2]]),n="rtvicore";break;case"evi":s=Q([e[0],e[1],e[2]]),n="evi";break;case"wndwi":s=Q([e[0],e[1],0]),n="wndwi",o[0]=t[3]?t[3]+1:.5;break;case"bai":s=Q([e[1],e[0],0]),n="bai";break;default:s=Q([0,1,2]),n="custom"}return{bandIndexMat3:s,indexType:n,adjustments:o}}_getInputBandIds(t){if("custom"===this.functionArguments.method)return t;const e=this.functionArguments.bandIndexes.split(" ").map(i=>parseFloat(i)-1),s=t.length,n=e.map(i=>i>=s?s-1:i),o=Ls.has(this.functionArguments.method)?3:2,a=n.slice(0,o).map(i=>t[i]);return 2===a.length&&a.push(0),a}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],$t.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:Gs,json:{write:!0,name:"rasterFunctionArguments"}})],$t.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],$t.prototype,"rasterArgumentNames",void 0),$t=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.BandArithmeticFunction")],$t);const zs=$t;var we,Vs=x(21152),Ws=x(61320);const dn=new ft.J({1:"outside",2:"inside"},{useNumericKeys:!0});let ne=we=class extends W{constructor(){super(...arguments),this.clippingType="outside"}clone(){return new we({clippingGeometry:this.clippingGeometry.clone(),clippingType:this.clippingType})}};(0,c._)([(0,p.MZ)({types:Vs.yR,json:{read:Ws.rS,write:!0}})],ne.prototype,"clippingGeometry",void 0),(0,c._)([(0,p.MZ)({json:{read:dn.read,write:dn.write}})],ne.prototype,"clippingType",void 0),ne=we=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.ClipFunctionArguments")],ne);const $s=ne;let Ft=class extends I{constructor(){super(...arguments),this.functionName="Clip",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone();return this.outputPixelType=this._getOutputPixelType(t.pixelType),t.pixelType=this.outputPixelType,this.rasterInfo=t,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}_getWebGLParameters(){const{clippingGeometry:t,clippingType:e}=this.functionArguments;return{clippingGeometry:t.toJSON(),clippingType:e}}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],Ft.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:$s,json:{write:!0,name:"rasterFunctionArguments"}})],Ft.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],Ft.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)()],Ft.prototype,"isNoopProcess",void 0),Ft=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.ClipFunction")],Ft);const Hs=Ft;var Fe,pe=x(17221),ut=x(32681),be=x(54485);let ct=Fe=class extends W{castColormapName(t){if(!t)return null;const e=t.toLowerCase();return ut.L7.includes(e)?e:null}readColorRamp(t){return(0,be.r)(t)}readColorRampName(t,e){if(!t)return null;const s=ut.kH.jsonValues.find(n=>n.toLowerCase()===t.toLowerCase());return s?ut.kH.fromJSON(s):null}clone(){return new Fe({colormap:(0,K.o8)(this.colormap),colormapName:this.colormapName,colorRamp:this.colorRamp?.clone(),colorRampName:this.colorRampName})}};(0,c._)([(0,p.MZ)({type:[[Number]],json:{write:!0}})],ct.prototype,"colormap",void 0),(0,c._)([(0,p.MZ)({type:String,json:{write:!0}})],ct.prototype,"colormapName",void 0),(0,c._)([(0,ue.w)("colormapName")],ct.prototype,"castColormapName",null),(0,c._)([(0,p.MZ)({types:be.g,json:{write:!0}})],ct.prototype,"colorRamp",void 0),(0,c._)([(0,pe.w)("colorRamp")],ct.prototype,"readColorRamp",null),(0,c._)([(0,p.MZ)({type:ut.kH.apiValues,json:{type:ut.kH.jsonValues,write:ut.kH.write}})],ct.prototype,"colorRampName",void 0),(0,c._)([(0,pe.w)("colorRampName")],ct.prototype,"readColorRampName",null),ct=Fe=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.ColormapFunctionArguments")],ct);const Ks=ct,Js=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[112,75,3],[113,76,3],[114,77,3],[115,77,3],[116,78,3],[117,79,3],[118,79,3],[119,80,3],[121,81,4],[122,82,4],[123,82,4],[124,83,4],[125,84,4],[126,84,4],[127,85,4],[128,86,4],[129,86,4],[130,87,4],[131,88,4],[132,89,4],[133,89,4],[134,90,4],[135,91,4],[136,91,4],[137,92,4],[138,93,4],[139,94,4],[140,94,4],[142,95,5],[143,96,5],[144,96,5],[145,97,5],[146,98,5],[147,99,5],[148,99,5],[149,100,5],[150,101,5],[151,101,5],[152,102,5],[153,103,5],[154,104,5],[155,104,5],[156,105,5],[157,106,5],[158,106,5],[159,107,5],[160,108,5],[161,108,5],[162,109,5],[164,110,6],[165,111,6],[166,111,6],[167,112,6],[168,113,6],[169,113,6],[170,114,6],[171,115,6],[172,116,6],[173,116,6],[174,117,6],[245,0,0],[245,5,0],[245,10,0],[246,15,0],[246,20,0],[246,25,0],[246,30,0],[247,35,0],[247,40,0],[247,45,0],[247,50,0],[247,55,0],[248,60,0],[248,65,0],[248,70,0],[248,75,0],[249,81,0],[249,86,0],[249,91,0],[249,96,0],[250,101,0],[250,106,0],[250,111,0],[250,116,0],[250,121,0],[251,126,0],[251,131,0],[251,136,0],[251,141,0],[252,146,0],[252,151,0],[252,156,0],[252,156,0],[251,159,0],[250,162,0],[249,165,0],[248,168,0],[247,171,0],[246,174,0],[245,177,0],[245,179,0],[244,182,0],[243,185,0],[242,188,0],[241,191,0],[240,194,0],[239,197,0],[238,200,0],[237,203,0],[236,206,0],[235,209,0],[234,212,0],[233,215,0],[232,218,0],[231,221,0],[230,224,0],[230,226,0],[229,229,0],[228,232,0],[227,235,0],[226,238,0],[225,241,0],[224,244,0],[223,247,0],[165,247,0],[163,244,0],[161,240,0],[158,237,0],[156,233,1],[154,230,1],[152,227,1],[149,223,1],[147,220,1],[145,216,1],[143,213,1],[140,210,2],[138,206,2],[136,203,2],[134,200,2],[132,196,2],[129,193,2],[127,189,2],[125,186,3],[123,183,3],[120,179,3],[118,176,3],[116,172,3],[114,169,3],[111,166,3],[109,162,4],[107,159,4],[105,155,4],[103,152,4],[100,149,4],[98,145,4],[96,142,4],[94,138,5],[91,135,5],[89,132,5],[87,128,5],[85,125,5],[82,121,5],[80,118,5],[78,115,6],[76,111,6],[73,108,6],[71,105,6],[69,101,6],[67,98,6],[65,94,6],[62,91,7],[60,88,7],[58,84,7],[56,81,7],[53,77,7],[51,74,7],[49,71,7],[47,67,8],[44,64,8],[42,60,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8],[40,57,8]],Xs=[[36,0,255],[36,0,255],[36,0,255],[36,0,255],[245,20,0],[245,24,0],[245,29,0],[245,31,0],[247,33,0],[247,33,0],[247,37,0],[247,41,0],[247,41,0],[247,41,0],[247,45,0],[247,45,0],[247,47,0],[247,49,0],[247,49,0],[247,54,0],[247,54,0],[247,56,0],[247,58,0],[247,58,0],[250,62,0],[250,62,0],[250,62,0],[250,67,0],[250,67,0],[250,67,0],[250,69,0],[250,71,0],[250,71,0],[250,75,0],[250,75,0],[250,78,0],[250,79,0],[250,79,0],[250,79,0],[250,81,0],[250,83,0],[250,83,0],[250,87,0],[250,87,0],[250,90,0],[250,92,0],[252,93,0],[252,93,0],[252,97,0],[252,97,0],[252,97,0],[252,97,0],[252,101,0],[252,101,0],[252,101,0],[252,101,0],[252,105,0],[252,105,0],[252,107,0],[252,109,0],[252,109,0],[252,113,13],[255,118,20],[255,119,23],[255,121,25],[255,126,33],[255,132,38],[255,133,40],[255,135,43],[255,141,48],[255,144,54],[255,150,59],[255,152,61],[255,153,64],[255,159,69],[255,163,77],[255,165,79],[255,168,82],[255,174,87],[255,176,92],[255,181,97],[255,183,99],[255,186,102],[255,191,107],[255,197,115],[255,201,120],[255,203,123],[255,205,125],[255,209,130],[255,214,138],[255,216,141],[255,218,143],[255,224,150],[255,228,156],[255,234,163],[255,236,165],[255,238,168],[255,243,173],[255,248,181],[255,252,186],[253,252,186],[250,252,187],[244,250,180],[238,247,176],[234,246,173],[231,245,169],[223,240,163],[217,237,157],[211,235,150],[205,233,146],[200,230,142],[195,227,136],[189,224,132],[184,222,126],[180,220,123],[174,217,119],[169,214,114],[163,212,108],[160,210,105],[154,207,101],[148,204,96],[143,201,93],[138,199,88],[134,197,84],[130,194,81],[126,191,77],[117,189,70],[115,186,68],[112,184,64],[106,181,60],[100,179,55],[94,176,49],[92,174,47],[90,173,45],[81,168,37],[75,166,33],[71,163,28],[66,160,24],[62,158,21],[56,156,14],[51,153,0],[51,153,0],[51,153,0],[50,150,0],[50,150,0],[50,150,0],[50,150,0],[49,148,0],[49,148,0],[49,148,0],[48,145,0],[48,145,0],[48,145,0],[48,145,0],[48,143,0],[48,143,0],[48,143,0],[48,143,0],[47,140,0],[47,140,0],[47,140,0],[47,140,0],[46,138,0],[46,138,0],[46,138,0],[46,138,0],[45,135,0],[45,135,0],[45,135,0],[45,135,0],[44,133,0],[44,133,0],[44,133,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[43,130,0],[42,128,0],[42,128,0],[42,128,0],[42,125,0],[42,125,0],[42,125,0],[42,125,0],[41,122,0],[41,122,0],[41,122,0],[41,122,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[40,120,0],[39,117,0],[39,117,0],[39,117,0],[39,117,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0],[38,115,0]];function Me(t,e){const s=[],n=[];for(let a=0;a<t.length-1;a++)s.push({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:t[a].slice(1),toColor:t[a+1].slice(1)}),n.push(t[a+1][0]-t[a][0]);return(0,ut.iv)({type:"multipart",colorRamps:s},{numColors:t[t.length-1][0],weights:e=e??n})}let mt=class extends I{constructor(){super(...arguments),this.functionName="Colormap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1)return{success:!1,supportsGPU:!1,error:"colormap-function: source data must be single band"};let{colormap:e,colormapName:s,colorRamp:n,colorRampName:o}=this.functionArguments;if(!e?.length)if(n)this.colorRamp=n,e=(0,ut.R8)(n,{interpolateAlpha:!0});else if(o){const r=(0,ut.M5)(o);r&&(e=(0,ut.R8)(r),this.colorRamp=(0,be.r)(r))}else s&&(e=function nr(t){let e;switch(t){case"elevation":e=function Ys(){return Me([[0,0,191,191],[51,0,0,255],[102,255,0,255],[153,255,0,127],[204,191,63,127],[256,20,20,20]])}();break;case"gray":e=function qs(){return(0,ut.iv)({type:"algorithmic",algorithm:"esriHSVAlgorithm",fromColor:[0,0,0],toColor:[255,255,255]})}();break;case"hillshade":e=function er(){return Me([[0,38,41,54],[69,79,82,90],[131,156,156,156],[256,253,253,241]],[.268,.238,.495])}();break;case"ndvi":e=Js;break;case"ndvi2":e=function Qs(){const t=Me([[0,255,255,255],[70,0,255,0],[80,205,173,193],[100,150,150,150],[110,120,51,100],[130,120,100,200],[140,28,3,144],[160,6,0,55],[180,10,25,30],[201,6,7,27]]);for(let e=t.length;e<256;e++)t.push([6,27,7]);return t}();break;case"ndvi3":e=Xs;break;case"random":e=function tr(){const t=[];for(let e=0;e<256;e++){const s=[];for(let n=0;n<3;n++)s.push(Math.round(255*Math.random()));t.push(s)}return t}()}return e?(e=e.map((s,n)=>[n,...s]),e):null}(s));if(!e?.length)return{success:!1,supportsGPU:!1,error:"colormap-function: missing colormap argument"};const a=this._getOutputPixelType(t.pixelType);this.outputPixelType=a.startsWith("f")?"s32":a;const i=t.clone();return i.pixelType=this.outputPixelType,i.colormap=e,i.bandCount=1,this.rasterInfo=i,{success:!0,supportsGPU:!0}}_processPixels(t){let e=t.pixelBlocks?.[0];return!e||(0,E.zw)(e.pixelType)||(e=e.clone(),e.clamp(this.outputPixelType)),e}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],mt.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:Ks,json:{write:!0,name:"rasterFunctionArguments"}})],mt.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],mt.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)()],mt.prototype,"isNoopProcess",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],mt.prototype,"indexedColormap",void 0),(0,c._)([(0,p.MZ)()],mt.prototype,"colorRamp",void 0),mt=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.ColormapFunction")],mt);const sr=mt;var Pe,me=x(50305);let se=Pe=class extends W{constructor(){super(...arguments),this.rasters=[]}writeRasters(t,e){e.rasters=t.map(s=>"number"==typeof s||"string"==typeof s?s:s.toJSON())}clone(){return new Pe({rasters:(0,K.o8)(this.rasters)})}};(0,c._)([(0,p.MZ)({json:{write:!0}})],se.prototype,"rasters",void 0),(0,c._)([(0,me.K)("rasters")],se.prototype,"writeRasters",null),se=Pe=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.CompositeBandFunctionArguments")],se);const rr=se;let Ht=class extends I{constructor(){super(...arguments),this.functionName="CompositeBand",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();if(s.attributeTable=null,s.colormap=null,s.pixelType=this.outputPixelType,s.bandCount=t.map(({bandCount:o})=>o).reduce((o,a)=>o+a),t.every(({statistics:o})=>null!=o&&o.length)){const o=[];t.forEach(({statistics:a})=>null!=a&&o.push(...a)),s.statistics=o}if(t.every(({histograms:o})=>null!=o&&o.length)){const o=[];t.forEach(({histograms:a})=>null!=a&&o.push(...a)),s.histograms=o}s.bandCount>1&&(s.colormap=null,s.attributeTable=null);const n=t.every(o=>o.keyProperties.BandProperties?.length)?t.flatMap(o=>o.keyProperties.BandProperties):void 0;return s.keyProperties={...s.keyProperties,BandProperties:n},this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3}}_processPixels(t){const{pixelBlocks:e}=t;return e?null==e?.[0]?null:(0,$.Wy)(e):null}_getWebGLParameters(){return{bandCount:this.rasterInfo.bandCount}}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],Ht.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:rr,json:{write:!0,name:"rasterFunctionArguments"}})],Ht.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],Ht.prototype,"rasterArgumentNames",void 0),Ht=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.CompositeBandFunction")],Ht);const or=Ht;var gt=x(29141);const ir=new ft.J({0:"difference",1:"relative-difference",2:"categorical",3:"euclidean-distance",4:"angle-difference",5:"band-with-most-change"},{useNumericKeys:!0}),ar=new ft.J({0:"all",1:"changed",2:"unchanged"},{useNumericKeys:!0});var Te;let Mt=Te=class extends W{constructor(){super(...arguments),this.method="difference",this.keepMethod="all",this.raster2=void 0}get rasters(){return[this.raster,this.raster2]}clone(){return new Te({raster:this.raster,raster2:this.raster2,method:this.method,keepMethod:this.keepMethod})}};(0,c._)([(0,dt.e)(ir)],Mt.prototype,"method",void 0),(0,c._)([(0,dt.e)(ar)],Mt.prototype,"keepMethod",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],Mt.prototype,"raster2",void 0),(0,c._)([(0,p.MZ)({readOnly:!0})],Mt.prototype,"rasters",null),Mt=Te=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.ComputeChangeFunctionArguments")],Mt);const dr=Mt;let Pt=class extends I{constructor(){super(...arguments),this.functionName="ComputeChange",this.functionArguments=null,this.rasterArgumentNames=["raster","raster2"]}_bindSourceRasters(){const{method:t}=this.functionArguments,e=this.sourceRasterInfos[0].clone();if(this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(e),"categorical"===t){const s=this.sourceRasterInfos.map(a=>a.attributeTable),n=this._getFieldNames(s,"value"),o=s.map(a=>this._getClassFieldName(a));if(null==n[0]||null==n[1]||null==o[0]||null==o[1])return{success:!1,supportsGPU:!1,error:"both inputs must have proper attribute table with value and class fields"};this._updateAttributeTable(e,n,o)}return e.bandCount=1,this.rasterInfo=e,{success:!0,supportsGPU:"difference"===t||"relative-difference"===t}}_processPixels(t){const{pixelBlocks:e}=t;if(null==e?.[0]||null==e?.[1])return null;const{method:s}=this.functionArguments;return function ur(t,e,s,n){const[o,a]=t,i=(0,E.zw)(s)&&!(0,E.zw)(o.pixelType)&&!(0,E.zw)(a.pixelType),r=[o.mask,a.mask].filter(g=>g),u=y.A.combineBandMasks(r),l=t.map(g=>g.pixels[0]),{width:m,height:h}=o,d=y.A.createEmptyBand(s,m*h);switch(e){case"difference":case"relative-difference":!function lr(t){const{bands:[e,s],mask:n,isRelative:o,isRoundingNeeded:a,outBand:i}=t,r=e.length;for(let u=0;u<r;u++)if(!n||n[u]){let l=e[u]-s[u];if(o){const m=Math.max(Math.abs(e[u])-Math.abs(s[u]));l=m>0?l/m:0}i[u]=a?Math.round(l):l}}({bands:l,mask:u,outBand:d,isRoundingNeeded:i,isRelative:"relative-difference"===e});break;case"categorical":!function cr(t){const{bands:[e,s],categoryIndexLookups:[n,o],classNames:[a,i],mask:r,keepMethod:u,outBand:l}=t,m=e.length,d=i.length,f=a.length*d,g=f+1,v=f+2;for(let _=0;_<m;_++)if(!r||r[_]){const b=n[e[_]],P=o[s[_]],N=a[b],R=i[P];l[_]=null==b||null==P?f:"changed"===u&&N===R?g:"unchanged"===u&&N!==R?v:b*d+P}}({bands:l,mask:u,outBand:d,...n});break;case"euclidean-distance":!function pr(t){const{pixels:[e,s],mask:n,outBand:o}=t,a=e[0].length,i=e.length;for(let r=0;r<a;r++)if(!n||n[r]){let u=0;for(let l=0;l<i;l++){const m=e[l][r]-s[l][r];u+=m*m}o[r]=Math.sqrt(u)}}({pixels:t.map(g=>g.pixels),mask:u,outBand:d});break;case"angle-difference":!function mr(t){const{pixels:[e,s],mask:n,outBand:o}=t,a=e[0].length,i=e.length;for(let r=0;r<a;r++)if(!n||n[r]){let u=0,l=0,m=0;for(let d=0;d<i;d++){const f=e[d][r],g=s[d][r];u+=f*g,l+=f*f,m+=g*g}const h=Math.sqrt(l*m);o[r]=h?Math.acos(u/h):1.5707963267948966}}({pixels:t.map(g=>g.pixels),mask:u,outBand:d});break;case"band-with-most-change":!function hr(t){const{pixels:[e,s],mask:n,outBand:o}=t,a=e[0].length,i=e.length;for(let r=0;r<a;r++)if(!n||n[r]){let u=0,l=0;for(let m=0;m<i;m++){const h=Math.abs(e[m][r]-s[m][r]);h>u&&(u=h,l=m)}o[r]=l}}({pixels:t.map(g=>g.pixels),mask:u,outBand:d})}const f=new y.A({width:m,height:h,pixels:[d],pixelType:s,mask:u});return f.updateStatistics(),f}(e,s,this.outputPixelType,this._categoryConfig)}_getWebGLParameters(){const t=this.outputPixelType??"f32";let[e,s]=(0,E.hP)(t);const n=(0,E.zw)(t);return n&&(e-=1e-4,s+=1e-4),{method:this.functionArguments.method,domainRange:[e,s],isOutputRounded:n}}_updateAttributeTable(t,e,s){const n=this.sourceRasterInfos.map(b=>b.attributeTable),o=n.map((b,P)=>b.features.map(N=>N.attributes[e[P]])),a=n.map((b,P)=>b.features.map(N=>N.attributes[s[P]])),i=o.map(b=>{const P=[];return b.forEach((N,R)=>P[N]=R),P}),{keepMethod:r}=this.functionArguments;this._categoryConfig={categoryIndexLookups:i,classNames:a,keepMethod:r};const u=n[0].clone();u.fields=[new gt.A({name:"OID",type:"oid"}),new gt.A({name:"Value",type:"integer"}),new gt.A({name:"ClassName",type:"string"}),new gt.A({name:"Class_From",type:"string"}),new gt.A({name:"Class_To",type:"string"})];const l=this._getFieldNames(n,"red"),m=this._getFieldNames(n,"green"),h=this._getFieldNames(n,"blue"),d=[],f=2===l.length&&2===m.length&&2===h.length;f&&(d.push(...n.map((b,P)=>b.features.map(N=>[N.attributes[l[P]],N.attributes[m[P]],N.attributes[h[P]]]))),u.fields.push(new gt.A({name:"Red",type:"integer"}),new gt.A({name:"Green",type:"integer"}),new gt.A({name:"Blue",type:"integer"})));const g=u.features[0].clone();g.geometry=null;const v=[],[_,F]=o.map(b=>b.length);let w=1;for(let b=0;b<_;b++){const P=a[0][b];for(let N=0;N<F;N++){const R=a[1][N];if("changed"===r&&P===R||"unchanged"===r&&P!==R)continue;const k=g.clone();k.attributes={OID:w++,Value:b*F+N,ClassName:P===R?P:`${P} -> ${R}`,Class_From:P,Class_To:R},f&&(k.attributes.Red=d[0][b][0]+d[1][N][0]>>1,k.attributes.Green=d[0][b][1]+d[1][N][1]>>1,k.attributes.Blue=d[0][b][2]+d[1][N][2]>>1),v.push(k)}}if("changed"===r){const b=g.clone();b.attributes={OID:w++,Value:_*F+1,ClassName:"No Change",Class_From:"Same",Class_To:"Same"},v.push(b)}else if("unchanged"===r){const b=g.clone();b.attributes={OID:w++,Value:_*F+2,ClassName:"Changed",Class_From:"Any",Class_To:"Any"},v.push(b)}u.features=v,t.attributeTable=u}_getFieldNames(t,e){return t.map(({fields:s})=>s.find(n=>n.name.toLowerCase()===e)?.name).filter(s=>s)}_getClassFieldName(t){return(t.fields.find(s=>"string"===s.type&&s.name.toLowerCase().startsWith("class"))??t.fields.find(s=>"string"===s.type&&s.name.toLowerCase().includes("class")||s.name.toLowerCase().includes("type")||s.name.toLowerCase().includes("name"))??t.fields.find(s=>"string"===s.type))?.name}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],Pt.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:dr,json:{write:!0,name:"rasterFunctionArguments"}})],Pt.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],Pt.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],Pt.prototype,"_categoryConfig",void 0),Pt=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.ComputeChangeFunction")],Pt);const fr=Pt;var Ie;let re=Ie=class extends W{constructor(){super(...arguments),this.contrastOffset=0,this.brightnessOffset=0}clone(){return new Ie({contrastOffset:this.contrastOffset,brightnessOffset:this.brightnessOffset,raster:this.raster})}};(0,c._)([(0,p.MZ)({json:{write:!0}})],re.prototype,"contrastOffset",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],re.prototype,"brightnessOffset",void 0),re=Ie=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.ContrastBrightnessFunctionArguments")],re);const gr=re;var Tt=x(48104);let It=class extends I{constructor(){super(...arguments),this.functionName="ContrastBrightness",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0];if("u8"!==e.pixelType)return{success:!1,supportsGPU:!1,error:"Only unsigned 8 bit raster is supported by ContrastBrightness function."};this.outputPixelType=this._getOutputPixelType("u8");const s=e.clone();this._removeStatsHistColormapVAT(s),this.rasterInfo=s;const{contrastOffset:n,brightnessOffset:o}=this.functionArguments;return this.lookup=(0,Tt.zj)(n,o),{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:(0,$.eH)(e,{lut:e.pixels.map(()=>this.lookup),offset:0,outputPixelType:"u8"})}_getWebGLParameters(){const{contrastOffset:t,brightnessOffset:e}=this.functionArguments;return{contrastOffset:t,brightnessOffset:e}}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],It.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:gr,json:{write:!0,name:"rasterFunctionArguments"}})],It.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],It.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],It.prototype,"lookup",void 0),It=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.ContrastBrightnessFunction")],It);const yr=It;function Ce(t,e,s,n,o){const a=Math.floor(n/2);for(let r=0;r<a;r++)for(let u=0;u<e;u++)t[r*e+u]=t[(o-1-r)*e+u],t[(s-1-r)*e+u]=t[(s-o+r)*e+u];const i=Math.floor(o/2);for(let r=0;r<s;r++){const u=r*e;for(let l=0;l<i;l++)t[u+l]=t[u+o-1-l],t[u+e-l-1]=t[u+e+l-o]}}const L=new Map;function fn(t,e,s,n,o,a,i){const r=new Float32Array(e*s),u=a.length,l=i?0:n,m=i?n:0,h=i?1:e;for(let d=l;d<s-l;d++){const f=d*e;for(let g=m;g<e-m;g++){if(o&&!o[f+g])continue;let v=0;for(let _=0;_<u;_++)v+=t[f+g+(_-n)*h]*a[_];r[f+g]=v}}return r}function Ar(t,e,s,n,o,a,i){const r=new Float32Array(e*s),u=Math.floor(n/2),l=Math.floor(o/2);for(let m=u;m<s-u;m++){const h=m*e;for(let d=l;d<e-l;d++){if(a&&!a[h+d])continue;let f=0;for(let g=0;g<n;g++)for(let v=0;v<o;v++)f+=t[h+d+(g-u)*e+v-l]*i[g*o+v];r[h+d]=f}}return r}var Be;L.set(D.none,[0,0,0,0,1,0,0,0,0]),L.set(D.lineDetectionHorizontal,[-1,-1,-1,2,2,2,-1,-1,-1]),L.set(D.lineDetectionVertical,[-1,2,-1,-1,2,-1,-1,2,-1]),L.set(D.lineDetectionLeftDiagonal,[2,-1,-1,-1,2,-1,-1,-1,2]),L.set(D.lineDetectionRightDiagonal,[-1,-1,2,-1,2,-1,2,-1,-1]),L.set(D.gradientNorth,[-1,-2,-1,0,0,0,1,2,1]),L.set(D.gradientWest,[-1,0,1,-2,0,2,-1,0,1]),L.set(D.gradientEast,[1,0,-1,2,0,-2,1,0,-1]),L.set(D.gradientSouth,[1,2,1,0,0,0,-1,-2,-1]),L.set(D.gradientNorthEast,[0,-1,-2,1,0,-1,2,1,0]),L.set(D.gradientNorthWest,[-2,-1,0,-1,0,1,0,1,2]),L.set(D.smoothArithmeticMean,[.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111,.111111111111]),L.set(D.smoothing3x3,[.0625,.125,.0625,.125,.25,.125,.0625,.125,.0625]),L.set(D.smoothing5x5,[1,1,1,1,1,1,4,4,4,1,1,4,12,4,1,1,4,4,4,1,1,1,1,1,1]),L.set(D.sharpening3x3,[-1,-1,-1,-1,9,-1,-1,-1,-1]),L.set(D.sharpening5x5,[-1,-3,-4,-3,-1,-3,0,6,0,-3,-4,6,21,6,-4,-3,0,6,0,-3,-1,-3,-4,-3,-1]),L.set(D.laplacian3x3,[0,-1,0,-1,4,-1,0,-1,0]),L.set(D.laplacian5x5,[0,0,-1,0,0,0,-1,-2,-1,0,-1,-2,17,-2,-1,0,-1,-2,-1,0,0,0,-1,0,0]),L.set(D.sobelHorizontal,[-1,-2,-1,0,0,0,1,2,1]),L.set(D.sobelVertical,[-1,0,1,-2,0,2,-1,0,1]),L.set(D.sharpen,[0,-.25,0,-.25,2,-.25,0,-.25,0]),L.set(D.sharpen2,[-.25,-.25,-.25,-.25,3,-.25,-.25,-.25,-.25]),L.set(D.pointSpread,[-.627,.352,-.627,.352,2.923,.352,-.627,.352,-.627]);let Ct=Be=class extends W{constructor(){super(...arguments),this.rows=3,this.cols=3,this.kernel=[0,0,0,0,1,0,0,0,0]}set convolutionType(t){this._set("convolutionType",t);const e=L.get(t);if(!e||t===D.userDefined||t===D.none)return;const s=Math.sqrt(e.length);this._set("kernel",e),this._set("cols",s),this._set("rows",s)}clone(){return new Be({cols:this.cols,rows:this.rows,kernel:[...this.kernel],convolutionType:this.convolutionType,raster:(0,K.o8)(this.raster)})}};(0,c._)([(0,p.MZ)({json:{type:Number,write:!0}})],Ct.prototype,"rows",void 0),(0,c._)([(0,p.MZ)({json:{type:Number,write:!0}})],Ct.prototype,"cols",void 0),(0,c._)([(0,p.MZ)({json:{name:"type",type:Number,write:!0}})],Ct.prototype,"convolutionType",null),(0,c._)([(0,p.MZ)({json:{type:[Number],write:!0}})],Ct.prototype,"kernel",void 0),Ct=Be=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.ConvolutionFunctionArguments")],Ct);const br=Ct;let Bt=class extends I{constructor(){super(...arguments),this.functionName="Convolution",this.rasterArgumentNames=["raster"]}get _normalizedKernel(){const{kernel:t,convolutionType:e}=this.functionArguments,s=t.reduce((n,o)=>n+o);return-1===e||0===s||1===s?t:t.map(n=>n/s)}_bindSourceRasters(){const{convolutionType:t,rows:e,cols:s,kernel:n}=this.functionArguments;if(!Object.values(D).includes(t))return{success:!1,supportsGPU:!1,error:`convolution-function: the specified kernel type is not supported ${t}`};if(t!==D.none&&e*s!==n.length)return{success:!1,supportsGPU:!1,error:"convolution-function: the specified rows and cols do not match the length of the kernel"};const o=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(o.pixelType);const a=o.clone();return a.pixelType=this.outputPixelType,(-1===t||"u8"!==this.outputPixelType&&![D.none,D.sharpen,D.sharpen2,D.sharpening3x3,D.sharpening5x5].includes(t))&&(a.statistics=null,a.histograms=null),a.colormap=null,a.attributeTable=null,this.rasterInfo=a,{success:!0,supportsGPU:n.length<=25}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e||this.functionArguments.convolutionType===D.none)return e;const{rows:s,cols:n}=this.functionArguments,{_normalizedKernel:o}=this;return function wr(t,e){const s=function _r(t){const e=Math.sqrt(t.length),s=t.slice(0,e),n=[1];for(let o=1;o<e;o++){let a=null;for(let i=0;i<e;i++){const r=t[i+o*e],u=t[i];if(null==a)if(0===u){if(r)return{separable:!1,row:null,col:null}}else a=r/u;else if(r/u!==a)return{separable:!1,row:null,col:null}}if(null==a)return{separable:!1,row:null,col:null};n.push(a)}return{separable:!0,row:s,col:n}}(e.kernel),n=!1!==e.mirrorEdges,o=s.separable?function xr(t,e,s,n=!0){const{pixels:o,width:a,height:i,pixelType:r,mask:u}=t,l=o.length,m=[],h=e.length,d=s.length,f=Math.floor(h/2),g=Math.floor(d/2);for(let v=0;v<l;v++){let _=fn(o[v],a,i,f,u,e,!0);_=fn(_,a,i,g,u,s,!1),n&&Ce(_,a,i,h,d),m.push(_)}return new y.A({width:a,height:i,pixelType:r,pixels:m,mask:u})}(t,s.row,s.col,n):function vr(t,e,s=!0){const{pixels:n,width:o,height:a,pixelType:i,mask:r}=t,u=n.length,l=[],{kernel:m,rows:h,cols:d}=e;for(let f=0;f<u;f++){const g=Ar(n[f],o,a,h,d,r,m);s&&Ce(g,o,a,h,d),l.push(g)}return new y.A({width:o,height:a,pixelType:i,pixels:l,mask:r})}(t,e,n),{outputPixelType:a}=e;return a&&o.clamp(a),o}(e,{kernel:o,rows:s,cols:n,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const t=new Float32Array(25);return t.set(this._normalizedKernel),{kernelRows:this.functionArguments.rows,kernelCols:this.functionArguments.cols,kernel:t,clampRange:(0,E.hP)(this.outputPixelType)}}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],Bt.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:br,json:{write:!0,name:"rasterFunctionArguments"}})],Bt.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],Bt.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)()],Bt.prototype,"_normalizedKernel",null),Bt=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.ConvolutionFunction")],Bt);const Fr=Bt;var Re;const yn=new ft.J({0:"standard",1:"platform",2:"profile"},{useNumericKeys:!0});let Kt=Re=class extends W{constructor(){super(...arguments),this.curvatureType="standard",this.zFactor=1}readCurvatureType(t,e){return yn.fromJSON(e.type??e.curvatureType??0)}clone(){return new Re({curvatureType:this.curvatureType,zFactor:this.zFactor,raster:this.raster})}};(0,c._)([(0,p.MZ)({json:{write:{target:"type"}}}),(0,dt.e)(yn)],Kt.prototype,"curvatureType",void 0),(0,c._)([(0,pe.w)("curvatureType",["type","curvatureType"])],Kt.prototype,"readCurvatureType",null),(0,c._)([(0,p.MZ)({type:Number,json:{write:!0}})],Kt.prototype,"zFactor",void 0),Kt=Re=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.CurvatureFunctionArguments")],Kt);const Mr=Kt;let Rt=class extends I{constructor(){super(...arguments),this.functionName="Curvature",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.bandCount=1,this._removeStatsHistColormapVAT(t),this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,curvatureType:n}=this.functionArguments,{extent:o,primaryPixelSizes:a}=t,i=a?.[0];return(0,Wt.E0)(e,{zFactor:this.isGCS&&s>=1?s*Wt.rk:s,curvatureType:n,resolution:i??(o?{x:o.width/e.width,y:o.height/e.height}:{x:1,y:1})})}_getWebGLParameters(){const{zFactor:t,curvatureType:e}=this.functionArguments;return{curvatureType:e,zFactor:this.isGCS&&t>=1?t*Wt.rk:t}}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],Rt.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:Mr,json:{write:!0,name:"rasterFunctionArguments"}})],Rt.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],Rt.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],Rt.prototype,"isGCS",void 0),Rt=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.CurvatureFunction")],Rt);const Pr=Rt;var Ne;let ht=Ne=class extends W{constructor(){super(...arguments),this.bandIds=[],this.bandNames=[],this.bandWavelengths=[],this.missingBandAction=$.Wb.bestMatch}clone(){return new Ne({bandIds:this.bandIds?.slice(),bandNames:this.bandNames?.slice(),bandWavelengths:this.bandWavelengths?.slice(),missingBandAction:this.missingBandAction,method:this.method,wavelengthMatchTolerance:this.wavelengthMatchTolerance})}};(0,c._)([(0,p.MZ)({json:{write:!0}})],ht.prototype,"bandIds",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],ht.prototype,"bandNames",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],ht.prototype,"bandWavelengths",void 0),(0,c._)([(0,dt.e)({0:"name",1:"wavelength",2:"id"})],ht.prototype,"method",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],ht.prototype,"missingBandAction",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],ht.prototype,"wavelengthMatchTolerance",void 0),ht=Ne=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.ExtractBandFunctionArguments")],ht);const Tr=ht;let Jt=class extends I{constructor(){super(...arguments),this.functionName="ExtractBand",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{functionArguments:t,sourceRasterInfos:e}=this,s=e[0],{method:n,bandNames:o,bandWavelengths:a,bandIds:i,missingBandAction:r}=t,u=o?.length&&("name"===n||"id"!==n&&!i?.length),l=a?.length&&("wavelength"===n||"id"!==n&&!i?.length),m=r===$.Wb.fail,h=u?function Cr(t,e){const s=t.bandInfos.map(({name:o})=>o.toLowerCase()),n=[];for(let o=0;o<e.length;o++){const a=e[o].toLowerCase();let i=s.indexOf(a);if(-1===i&&"nearinfrared"===a&&(i=s.findIndex(r=>r.startsWith("nearinfrared_1")),-1===i&&(i=s.findIndex(r=>r.startsWith("nearinfrared")))),-1===i)return null;n.push(i)}return n}(s,o):l?function Rr(t,e,{wavelengthMatchTolerance:s},n){const{bandInfos:o}=t,a=[];for(let r=0;r<o.length;r++){const{minWavelength:u,maxWavelength:l}=o[r];if(!u||!l)return null;a.push({minWavelength:u,maxWavelength:l})}const i=[];for(let r=0;r<e.length;r++){const u=e[r];let l=!1,m=-1,h=Number.MAX_VALUE;for(let d=0;d<a.length;d++){const f=a[d],g=u>=f.minWavelength&&u<=f.maxWavelength,v=Math.abs(u-(f.minWavelength+f.maxWavelength)/2);g?v<h&&(l=!0,m=d,h=v):!l&&v<h&&(m=d,h=v)}if(!l&&s&&h<s&&(l=!0),!l&&n)return null;i.push(m)}return i}(s,a,this.functionArguments,m):function Br(t,e,s){const{bandCount:n}=t;return!e?.length||s&&e.some(o=>o<0||o>=n)?null:e}(s,i,m);if(null==h)return{success:!1,supportsGPU:!1,error:`extract-band-function: Invalid ${u?"band names":l?"band wavelengths":"band ids"} for the imagery data source`};this.functionArguments.bandIds=h,this.functionArguments.method="id",this.outputPixelType=this._getOutputPixelType("f32");const d=s.clone();d.pixelType=this.outputPixelType,d.bandCount=h.length;const{statistics:f,histograms:g}=d;null!=f&&f.length&&(d.statistics=h.map(_=>f[_]||f[f.length-1])),null!=g&&g.length&&(d.histograms=h.map(_=>g[_]||g[g.length-1]));let v=d.keyProperties?.BandProperties;return v?.length&&(v=h.map(_=>_>=v.length?v[v.length-1]:v[_]),d.keyProperties={...d.keyProperties,BandProperties:v}),this.rasterInfo=d,{success:!0,supportsGPU:d.bandCount<=3}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const s=e.pixels.length,n=this.functionArguments.bandIds.map(o=>o>=s?s-1:o);return e.extractBands(n)}_getWebGLParameters(){let t;if(this.isInputBandIdsSwizzled)t=this.swizzledBandSelection.length?this.swizzledBandSelection:[0,1,2];else{t=[...this.functionArguments.bandIds],0===t.length?t=[0,1,2]:t.length<3&&(t[1]=t[1]??t[0],t[2]=t[2]??t[1]);for(let e=0;e<3;e++)t[e]=Math.min(t[e],2)}return{bandIndexMat3:Q(t)}}_getInputBandIds(t){const e=t.length;return this.functionArguments.bandIds.map(s=>s>=e?e-1:s).map(s=>t[s])}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],Jt.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:Tr,json:{write:!0,name:"rasterFunctionArguments"}})],Jt.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],Jt.prototype,"rasterArgumentNames",void 0),Jt=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.ExtractBandFunction")],Jt);const Ir=Jt;var De;let he=De=class extends W{clone(){return new De({conversionParameters:[...this.conversionParameters],raster:this.raster})}};(0,c._)([(0,p.MZ)({type:[Number],json:{write:!0}})],he.prototype,"conversionParameters",void 0),he=De=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.GrayscaleFunctionArguments")],he);const Dr=he;let Nt=class extends I{constructor(){super(...arguments),this.functionName="Grayscale",this.functionArguments=null,this.rasterArgumentNames=["raster"]}get _normalizedWeights(){const{conversionParameters:t}=this.functionArguments,e=t.reduce((s,n)=>s+n);return t.map(s=>s/e)}_bindSourceRasters(){const{conversionParameters:t}=this.functionArguments;if(!t?.length)return{success:!1,supportsGPU:!1,error:"missing valid conversion parameters."};const e=this.sourceRasterInfos[0].clone();this.outputPixelType=this._getOutputPixelType(e.pixelType),e.pixelType=this.outputPixelType;const s=3===t.length||3===e.bandCount&&t.length>3;return e.bandCount=1,this._removeStatsHistColormapVAT(e),this.rasterInfo=e,{success:!0,supportsGPU:s}}_processPixels(t){const e=t.pixelBlocks?.[0];return null==e?null:function Nr(t,e,s){const{pixels:n,width:o,height:a,mask:i,bandMasks:r}=t,u=o*a,l=r?.length?y.A.combineBandMasks(r):i,m=Math.min(e.length,n.length),h=s.startsWith("f"),d=!h&&s!==t.pixelType,[f,g]=(0,E.hP)(s),v=y.A.createEmptyBand(s,u);for(let F=0;F<a;F++){let w=F*o;for(let b=0;b<o;b++,w++)if(!l||l[w]){let P=0;for(let N=0;N<m;N++)P+=e[N]*n[N][w];h||(P=Math.round(P),d&&(P=P>g?g:P<f?f:P)),v[w]=P}}const _=new y.A({width:o,height:a,pixels:[v],pixelType:s,mask:l});return _.updateStatistics(),_}(e,this._normalizedWeights,this.outputPixelType)}_getWebGLParameters(){return{weights:this._normalizedWeights}}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],Nt.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:Dr,json:{write:!0,name:"rasterFunctionArguments"}})],Nt.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],Nt.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)()],Nt.prototype,"_normalizedWeights",null),Nt=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.GrayscaleFunction")],Nt);const kr=Nt;var ke;let Dt=ke=class extends W{constructor(){super(...arguments),this.rasters=[],this.processAsMultiband=!0}writeRasters(t,e){e.rasters=t.map(s=>"number"==typeof s||"string"==typeof s?s:s.toJSON())}clone(){return new ke({operation:this.operation,processAsMultiband:this.processAsMultiband,rasters:(0,K.o8)(this.rasters)})}};(0,c._)([(0,p.MZ)({json:{write:!0}})],Dt.prototype,"operation",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],Dt.prototype,"rasters",void 0),(0,c._)([(0,me.K)("rasters")],Dt.prototype,"writeRasters",null),(0,c._)([(0,p.MZ)({json:{write:!0}})],Dt.prototype,"processAsMultiband",void 0),Dt=ke=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.LocalFunctionArguments")],Dt);const Sr=Dt;let Xt=class extends I{constructor(){super(...arguments),this.functionName="Local",this.functionArguments=null,this.rasterArgumentNames=["rasters"]}_bindSourceRasters(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:n}=this.functionArguments;if(t.some(u=>u.bandCount!==s))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:o,rasters:a}=this.functionArguments,i=Xe[o];if(!(999===i||a.length===i||a.length<=1&&1===i))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${i}`};const r=e.clone();return r.bandCount=999!==i||n?s:1,this._removeStatsHistColormapVAT(r),this._updateStatistics(r),this._updatePixelType(r),this.rasterInfo=r,{success:!0,supportsGPU:1===r.bandCount&&i<=3&&(o<11||o>16)}}_processPixels(t){const{pixelBlocks:e}=t;return null==e||e.some(s=>null==s)?null:pn(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})}_getWebGLParameters(){const{operation:t}=this.functionArguments,e=Xe[t],s=Object.keys(He).find(r=>He[r]===t)?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[o,a]=(0,E.hP)(n);const i=(0,E.zw)(n);return i&&(o-=1e-4,a+=1e-4),{imageCount:e,operationName:s,domainRange:[o,a],isOutputRounded:i}}_updateStatistics(t){const e=this.sourceRasterInfos[0],{operation:s}=this.functionArguments,n=Je(s)?.domain;if(n){t.statistics=[];for(let o=0;o<t.bandCount;o++)t.statistics[o]={min:n[0],max:n[1],avg:(n[0]+n[1])/2,stddev:(n[0]+n[1])/10}}else 45===s&&e.statistics?.length&&(t.statistics=e.statistics.map(o=>({min:-o.max,max:-o.min,avg:null!=o.avg?-o.avg:void 0,stddev:null!=o.stddev?-o.stddev:void 0})))}_updatePixelType(t){const{statistics:e,pixelType:s}=this.sourceRasterInfos[0],{operation:n}=this.functionArguments,{domain:o,isInteger:a}=Je(n)??{domain:null,isInteger:!1};let i="f32";if(o&&a)i=(0,E.X1)(o[0],o[1]);else if(30===n){const r=e?.[0];i=r?(0,E.X1)(r.min,r.max):(0,E.zw)(s)?s:"s32"}else if(45===n&&(0,E.zw)(s)){const r=e?.map(({max:h})=>-h),u=e?.map(({min:h})=>-h),l=r?.length?Math.min(...r):null,m=u?.length?Math.min(...u):null;i=null!=l&&null!=m?(0,E.X1)(l,m):s.startsWith("s")?s.replace("s","u"):"u1"===s||"u2"===s||"u4"===s?"s8":"u8"===s?"s16":"s32"}t.pixelType=this.outputPixelType=this._getOutputPixelType(i)}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],Xt.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:Sr,json:{write:!0,name:"rasterFunctionArguments"}})],Xt.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],Xt.prototype,"rasterArgumentNames",void 0),Xt=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.LocalFunction")],Xt);const jr=Xt;var Se,Yt=x(69287);let kt=Se=class extends W{constructor(){super(...arguments),this.includedRanges=null,this.noDataValues=null,this.noDataInterpretation=$.IB.matchAny}get normalizedNoDataValues(){const{noDataValues:t}=this;if(!t?.length)return null;let e=!1;const s=t.map(n=>{if("number"==typeof n)return e=!0,[n];if("string"==typeof n){const o=n.trim().split(" ").filter(a=>""!==a.trim()).map(a=>Number(a));return e=e||o.length>0,0===o.length?null:o}return null});return e?s:null}clone(){return new Se({includedRanges:this.includedRanges?.slice()??[],noDataValues:this.noDataValues?.slice()??[],noDataInterpretation:this.noDataInterpretation})}};(0,c._)([(0,p.MZ)({json:{write:!0}})],kt.prototype,"includedRanges",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],kt.prototype,"noDataValues",void 0),(0,c._)([(0,p.MZ)()],kt.prototype,"normalizedNoDataValues",null),(0,c._)([(0,p.MZ)({json:{write:!0}})],kt.prototype,"noDataInterpretation",void 0),kt=Se=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.MaskFunctionArguments")],kt);const Er=kt;let St=class extends I{constructor(){super(...arguments),this.functionName="Mask",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,this.rasterInfo=t;const{includedRanges:s,normalizedNoDataValues:n}=this.functionArguments;if(!s?.length&&!n?.length)return{success:!1,supportsGPU:!1,error:"missing includedRanges or noDataValues argument"};let o=[];for(let i=0;i<t.bandCount;i++){const r=(0,$.Wt)(e,s?.slice(2*i,2*i+2),n?.[i]);if(null==r){o=null;break}o.push(r)}this.lookups=o;const a=null!=n&&n.every(i=>i?.length===n[0]?.length);return{success:!0,supportsGPU:(!s||s.length<=2*$.et)&&(!n||a&&n[0].length<=$.et)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{outputPixelType:s,lookups:n}=this,{includedRanges:o,noDataInterpretation:a,normalizedNoDataValues:i}=this.functionArguments;return(0,$.dK)(e,{includedRanges:o,noDataValues:i,outputPixelType:s,matchAll:a===$.IB.matchAll,lookups:n})}_getWebGLParameters(){const{includedRanges:t,normalizedNoDataValues:e}=this.functionArguments,s=new Float32Array($.et);s.fill(Yt.pq),e?.[0]?.length&&s.set(e[0]);const n=new Float32Array($.et);for(let o=0;o<n.length;o+=2)n[o]=t?.[o]??-Yt.pq,n[o+1]=t?.[o+1]??Yt.pq;return t?.length&&n.set(t),{bandCount:this.sourceRasterInfos[0].bandCount,noDataValues:s,includedRanges:n}}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],St.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:Er,json:{write:!0,name:"rasterFunctionArguments"}})],St.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],St.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],St.prototype,"lookups",void 0),St=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.MaskFunction")],St);const Or=St;var je;let Qt=je=class extends W{constructor(){super(...arguments),this.visibleBandID=0,this.infraredBandID=1,this.scientificOutput=!1}clone(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this;return new je({visibleBandID:t,infraredBandID:e,scientificOutput:s})}};(0,c._)([(0,p.MZ)({json:{write:!0}})],Qt.prototype,"visibleBandID",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],Qt.prototype,"infraredBandID",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],Qt.prototype,"scientificOutput",void 0),Qt=je=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.NDVIFunctionArguments")],Qt);const Ur=Qt;let qt=class extends I{constructor(){super(...arguments),this.functionName="NDVI",this.functionArguments=null,this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{scientificOutput:t,visibleBandID:e,infraredBandID:s}=this.functionArguments;this.outputPixelType=this._getOutputPixelType(t?"f32":"u8");const n=this.sourceRasterInfos[0],o=Math.max(e,s);if(n.bandCount<2||o>=n.bandCount)return{success:!1,supportsGPU:!1,error:"ndvi-function: source raster has insufficient amount of raster bands"};const a=n.clone();a.pixelType=this.outputPixelType,a.colormap=null,a.histograms=null,a.bandCount=1,a.keyProperties={...a.keyProperties,BandProperties:void 0};const[i,r,u,l]=t?[-1,1,0,.1]:[0,200,100,10];return a.statistics=[{min:i,max:r,avg:u,stddev:l}],this.rasterInfo=a,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{visibleBandID:s,infraredBandID:n,scientificOutput:o}=this.functionArguments;return function Ms(t,e,s,n){const{mask:o,pixels:a,width:i,height:r}=t,u=a[s],l=a[e],m=l.length,h=n?new Uint8Array(m):new Float32Array(m),d=n?100:1,f=n?100.5:0;for(let v=0;v<m;v++)if(null==o||o[v]){const _=u[v],F=l[v],w=_+F;w&&(h[v]=(_-F)/w*d+f)}const g=new y.A({width:i,height:r,mask:o,pixelType:n?"u8":"f32",pixels:[h]});return g.updateStatistics(),g}(e,s,n,!o)}_getWebGLParameters(){const{visibleBandID:t,infraredBandID:e,scientificOutput:s}=this.functionArguments;return{bandIndexMat3:Q(this.isInputBandIdsSwizzled?[0,1,2]:[e,t,0]),scaled:!s}}_getInputBandIds(t){const{visibleBandID:e,infraredBandID:s}=this.functionArguments;return[s,e,0].map(n=>t[n])}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],qt.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:Ur,json:{write:!0,name:"rasterFunctionArguments"}})],qt.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],qt.prototype,"rasterArgumentNames",void 0),qt=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.NDVIFunction")],qt);const Zr=qt;var Ee;let yt=Ee=class extends W{constructor(){super(...arguments),this.inputRanges=null,this.outputValues=null,this.noDataRanges=null,this.allowUnmatched=!1,this.isLastInputRangeInclusive=!1}clone(){return new Ee({inputRanges:[...this.inputRanges],outputValues:[...this.outputValues],noDataRanges:[...this.noDataRanges],allowUnmatched:this.allowUnmatched,isLastInputRangeInclusive:this.isLastInputRangeInclusive})}};(0,c._)([(0,p.MZ)({json:{write:!0}})],yt.prototype,"inputRanges",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],yt.prototype,"outputValues",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],yt.prototype,"noDataRanges",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],yt.prototype,"allowUnmatched",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],yt.prototype,"isLastInputRangeInclusive",void 0),yt=Ee=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.RemapFunctionArguments")],yt);const Gr=yt;let jt=class extends I{constructor(){super(...arguments),this.functionName="Remap",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null}_bindSourceRasters(){const t=this.sourceRasterInfos[0].clone(),{pixelType:e}=t;this.outputPixelType=this._getOutputPixelType(e),t.pixelType=this.outputPixelType,t.colormap=null,t.histograms=null,t.bandCount=1,t.attributeTable=null;const{statistics:s}=t,{allowUnmatched:n,outputValues:o,inputRanges:a,noDataRanges:i,isLastInputRangeInclusive:r}=this.functionArguments;if(null!=s&&s.length&&o?.length)if(n){const u=Math.min.apply(null,[...o,s[0].min]),l=Math.max.apply(null,[...o,s[0].max]);t.statistics=[{...s[0],min:u,max:l}]}else{let u=o[0],l=u;for(let m=0;m<o.length;m++)u=u>o[m]?o[m]:u,l=l>o[m]?l:o[m];t.statistics=[{...s[0],min:u,max:l}]}return this.rasterInfo=t,this.lookup=n?null:(0,$.XU)({srcPixelType:e,inputRanges:a,outputValues:o,noDataRanges:i,allowUnmatched:n,isLastInputRangeInclusive:r,outputPixelType:this.outputPixelType}),{success:!0,supportsGPU:(!o||o.length<=$.et)&&(!i||i.length<=$.et)}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{lookup:s,outputPixelType:n}=this;if(s){const l=(0,$.eH)(e,{lut:[s.lut],offset:s.offset,outputPixelType:n});return null!=l&&s.mask&&(l.mask=(0,$.UK)(e.pixels[0],e.mask,s.mask,s.offset,"u8")),l}const{inputRanges:o,outputValues:a,noDataRanges:i,allowUnmatched:r,isLastInputRangeInclusive:u}=this.functionArguments;return(0,$.Ew)(e,{inputRanges:o,outputValues:a,noDataRanges:i,outputPixelType:n,allowUnmatched:r,isLastInputRangeInclusive:u})}_getWebGLParameters(){const{allowUnmatched:t,noDataRanges:e,isLastInputRangeInclusive:s}=this.functionArguments,n=new Float32Array(3*$.et),o=1e-5,a=this.functionArguments.inputRanges??[],i=this.functionArguments.outputValues??[],r=i.length;for(let l=0;l<$.et;l++)n[3*l]=a[2*l]??Yt.pq-1,n[3*l+1]=a[2*l+1]??Yt.pq,n[3*l+2]=i[l]??0,l<r&&(l>0&&(n[3*l]-=o),(l<r-1||!s)&&(n[3*l+1]-=o));const u=new Float32Array(2*$.et);return u.fill(Yt.pq),e?.length&&u.set(e),{allowUnmatched:t,rangeMaps:n,noDataRanges:u,clampRange:(0,E.hP)(this.outputPixelType)}}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],jt.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:Gr,json:{write:!0,name:"rasterFunctionArguments"}})],jt.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],jt.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],jt.prototype,"lookup",void 0),jt=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.RemapFunction")],jt);const Lr=jt;var Oe;const zr=new ft.J({1:"degree",2:"percent-rise",3:"adjusted"},{useNumericKeys:!0});let _t=Oe=class extends W{constructor(){super(...arguments),this.slopeType="degree",this.zFactor=1,this.pixelSizePower=.664,this.pixelSizeFactor=.024,this.removeEdgeEffect=!1}clone(){return new Oe({slopeType:this.slopeType,zFactor:this.zFactor,pixelSizePower:this.pixelSizePower,pixelSizeFactor:this.pixelSizeFactor,removeEdgeEffect:this.removeEdgeEffect,raster:this.raster})}};(0,c._)([(0,dt.e)(zr)],_t.prototype,"slopeType",void 0),(0,c._)([(0,p.MZ)({type:Number,json:{write:!0}})],_t.prototype,"zFactor",void 0),(0,c._)([(0,p.MZ)({type:Number,json:{name:"psPower",write:!0}})],_t.prototype,"pixelSizePower",void 0),(0,c._)([(0,p.MZ)({type:Number,json:{name:"psZFactor",write:!0}})],_t.prototype,"pixelSizeFactor",void 0),(0,c._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],_t.prototype,"removeEdgeEffect",void 0),_t=Oe=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.SlopeFunctionArguments")],_t);const Vr=_t;let Et=class extends I{constructor(){super(...arguments),this.functionName="Slope",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isGCS=!1}_bindSourceRasters(){this.outputPixelType=this._getOutputPixelType("f32");const t=this.sourceRasterInfos[0].clone();return t.pixelType=this.outputPixelType,t.statistics="percent-rise"!==this.functionArguments.slopeType?[{min:0,max:90,avg:1,stddev:1}]:null,t.histograms=null,t.colormap=null,t.attributeTable=null,t.bandCount=1,this.rasterInfo=t,this.isGCS=t.spatialReference?.isGeographic??!1,{success:!0,supportsGPU:!0}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return null;const{zFactor:s,slopeType:n,pixelSizePower:o,pixelSizeFactor:a}=this.functionArguments,{isGCS:i}=this,{extent:r,primaryPixelSizes:u}=t,l=u?.[0];return(0,Wt.yy)(e,{zFactor:s,slopeType:n,pixelSizePower:o,pixelSizeFactor:a,isGCS:i,resolution:l??(r?{x:r.width/e.width,y:r.height/e.height}:{x:1,y:1})})}_getWebGLParameters(){const{zFactor:t,slopeType:e,pixelSizeFactor:s,pixelSizePower:n}=this.functionArguments;return{zFactor:this.isGCS&&t>=1?t*Wt.rk:t,slopeType:e,pixelSizeFactor:s??0,pixelSizePower:n??0}}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],Et.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:Vr,json:{write:!0,name:"rasterFunctionArguments"}})],Et.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],Et.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],Et.prototype,"isGCS",void 0),Et=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.SlopeFunction")],Et);const Wr=Et,_n=new ft.J({1:"min",2:"max",3:"mean",4:"stddev",5:"median",6:"majority",7:"minority"},{useNumericKeys:!0});function $r(t,e){const{fillNoDataOnly:s}=e,{band:n,width:o,height:a,mask:i,outBand:r}=t;if(s&&!i)return void r.set(n);const{statisticsType:u,kernelRows:l,kernelCols:m}=e,h="stddev"===u,d=o*a,f=new Float64Array(d),g=new Float64Array(d),v=new Uint32Array(d);for(let R=0;R<a;R++){const k=R*o;let U=0,Z=0,z=0;for(let V=0;V<m;V++)i&&!i[k+V]||(U+=n[k+V],h&&(Z+=n[k+V]**2),z++);f[k]=U,g[k]=Z,v[k]=z;for(let V=1;V<=o-m;V++){const rt=k+V-1,oe=rt+m;i?(i[rt]&&(z--,U-=n[rt],h&&(Z-=n[rt]**2)),i[oe]&&(z++,U+=n[oe],h&&(Z+=n[oe]**2))):(U-=n[rt],U+=n[oe],h&&(Z-=n[rt]**2,Z+=n[oe]**2)),f[k+V]=U,v[k+V]=z,h&&(g[k+V]=Z)}}const _=new Float64Array(d),F=new Float64Array(d),w=new Uint32Array(d),b=l*o;for(let R=0;R<=o-m;R++){let k=0,U=0,Z=0;for(let z=0;z<l;z++){const V=z*o+R;k+=f[V],Z+=v[V],h&&(U+=g[V])}_[R]=k,F[R]=U,w[R]=Z;for(let z=1;z<=a-l;z++){const V=(z-1)*o+R,rt=V+b;k-=f[V],k+=f[rt],Z-=v[V],Z+=v[rt],h&&(U-=g[V],U+=g[rt]),_[z*o+R]=k,F[z*o+R]=U,w[z*o+R]=Z}}const P=Math.floor(l/2),N=Math.floor(m/2);for(let R=P;R<a-P;R++){const k=R*o;for(let U=N;U<o-N;U++){const Z=(R-P)*o+U-N,z=w[Z];if(0===z||s&&(!i||i[k+U]))continue;const V=_[Z]/z,rt=h?Math.sqrt((F[Z]-_[Z]*V)/z):V;r[k+U]=rt,i&&(i[k+U]=255)}}}function Hr(t,e){const{fillNoDataOnly:s}=e,{band:n,width:o,height:a,mask:i,outBand:r}=t;if(s&&!i)return void r.set(n);const{kernelRows:u,kernelCols:l,statisticsType:m}=e,h=Math.floor(u/2),d=Math.floor(l/2),f="min"===m,g=r.slice(),v=new Uint32Array(o*a);for(let _=h;_<a-h;_++){const F=_*o;for(let w=d;w<o-d;w++){let b=f?Number.MAX_VALUE:-Number.MAX_VALUE,P=0;for(let N=0;N<u;N++)for(let R=0;R<l;R++){const k=F+w+(N-h)*o+R-d;i&&!i[k]||(b=f?Math.min(b,n[k]):Math.max(b,n[k]),P++)}i?(g[F+w]=0===P?0:b,v[F+w]=P):r[F+w]=0===P?0:b}}if(i)for(let _=h;_<a-h;_++){const F=_*o;for(let w=d;w<o-d;w++)if(v[F+w]){if(s&&i[F+w])continue;r[F+w]=g[F+w],i[F+w]=255}}}function Kr(t,e){const{fillNoDataOnly:s}=e,{band:n,width:o,height:a,mask:i,outBand:r}=t;if(s&&!i)return void r.set(n);const{kernelRows:u,kernelCols:l}=e,m=Math.floor(u/2),h=Math.floor(l/2),d=r.slice(),f=new Uint32Array(o*a);for(let g=m;g<a-m;g++){const v=g*o;for(let _=h;_<o-h;_++){if(s&&i?.[v+_])continue;const F=[];for(let w=0;w<u;w++)for(let b=0;b<l;b++){const P=v+_+(w-m)*o+b-h;i&&!i[P]||F.push(n[P])}F.length&&(F.sort((w,b)=>w-b),i?(d[v+_]=F[Math.floor((F.length-1)/2)],f[v+_]=F.length):r[v+_]=F[Math.floor((F.length-1)/2)])}}if(i)for(let g=m;g<a-m;g++){const v=g*o;for(let _=h;_<o-h;_++)if(f[v+_]){if(s&&i[v+_])continue;r[v+_]=d[v+_],i[v+_]=255}}}function Jr(t,e){const{fillNoDataOnly:s}=e,{band:n,width:o,height:a,mask:i,outBand:r}=t;if(s&&!i)return void r.set(n);const{kernelRows:u,kernelCols:l}=e,m=Math.floor(u/2),h=Math.floor(l/2),d="majority"===e.statisticsType,f=u*l,g=r.slice(),v=new Uint32Array(o*a);for(let _=m;_<a-m;_++){const F=_*o;for(let w=h;w<o-h;w++){if(s&&i?.[F+w])continue;const b=new Map;for(let k=0;k<u;k++)for(let U=0;U<l;U++){const Z=F+w+(k-m)*o+U-h;if(i&&!i[Z])continue;const z=n[Z];b.set(z,b.has(z)?b.get(z)+1:1)}if(0===b.size)continue;let P=0,N=0,R=d?0:f+1;for(const k of b.keys())N=b.get(k),d===N>R&&(R=N,P=k);i?(g[F+w]=P,v[F+w]=b.size):r[F+w]=P}}if(i)for(let _=m;_<a-m;_++){const F=_*o;for(let w=h;w<o-h;w++)if(v[F+w]){if(s&&i[F+w])continue;r[F+w]=g[F+w],i[F+w]=255}}}var Ue;let Ot=Ue=class extends W{constructor(){super(...arguments),this.rows=3,this.cols=3,this.fillNoDataOnly=!1,this.statisticsType="min"}clone(){return new Ue({rows:this.rows,cols:this.cols,fillNoDataOnly:this.fillNoDataOnly,statisticsType:this.statisticsType,raster:(0,K.o8)(this.raster)})}};(0,c._)([(0,p.MZ)({json:{write:!0,read:{source:["kernelRows","rows"],reader:(t,e)=>Number(t??e?.kernelRows??3)}}})],Ot.prototype,"rows",void 0),(0,c._)([(0,p.MZ)({json:{write:!0,read:{source:["kernelCols","cols"],reader:(t,e)=>Number(t??e?.kernelCols??3)}}})],Ot.prototype,"cols",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],Ot.prototype,"fillNoDataOnly",void 0),(0,c._)([(0,p.MZ)({json:{read:{source:["statisticsType","type"],reader:(t,e)=>_n.fromJSON(e?.statisticsType??e?.type)??"min"},write:{target:"type"}}}),(0,dt.e)(_n)],Ot.prototype,"statisticsType",void 0),Ot=Ue=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.StatisticsFunctionArguments")],Ot);const Yr=Ot;let te=class extends I{constructor(){super(...arguments),this.functionName="Statistics",this.rasterArgumentNames=["raster"]}_bindSourceRasters(){const{type:t}=this.functionArguments.toJSON();if(t<1||t>7)return{success:!1,supportsGPU:!1,error:`statistics-function: the given statistics type is not supported ${t}`};const e=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType(e.pixelType);const s=e.clone();s.pixelType=this.outputPixelType;const{statisticsType:n}=this.functionArguments;return"stddev"===n&&this._removeStatsHistColormapVAT(s),this.rasterInfo=s,{success:!0,supportsGPU:s.bandCount<=3&&t<5}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{statisticsType:s,rows:n,cols:o,fillNoDataOnly:a}=this.functionArguments;return function Xr(t,e){const{mask:s}=t,{fillNoDataOnly:n}=e;if(n&&!s)return t;const{pixels:o,width:a,height:i,bandMasks:r,pixelType:u}=t,l=o.length,m=a*i,h=[],{kernelRows:d,kernelCols:f,statisticsType:g,mirrorEdges:v}=e;if(n&&!s)return t;const _=e.outputPixelType??u,F=[];for(let P=0;P<l;P++){const N=o[P],R=y.A.createEmptyBand(_,m);n&&R.set(N);const k=r?.[P]??s,U=k?.slice()??null,Z={band:N,width:a,height:i,mask:U,outBand:R};switch(g){case"min":case"max":Hr(Z,e);break;case"mean":case"stddev":$r(Z,e);break;case"median":Kr(Z,e);break;case"majority":case"minority":Jr(Z,e)}v&&!n&&Ce(R,a,i,d,f),h.push(R),U&&F.push(U)}let w=F[0]??s;F.length!==l&&(F.length=0),l>1&&r?.length&&(w=y.A.combineBandMasks(r));const b=new y.A({pixelType:_,width:a,height:i,pixels:h,bandMasks:r&&F.length?F:null,mask:w});return b.updateStatistics(),b}(e,{kernelRows:n,kernelCols:o,fillNoDataOnly:a,outputPixelType:this.outputPixelType,statisticsType:s,mirrorEdges:!0})}_getWebGLParameters(){const{rows:t,cols:e,statisticsType:s,fillNoDataOnly:n}=this.functionArguments;return{fillNoDataOnly:n,kernelRows:t,kernelCols:e,statisticsType:s,clampRange:(0,E.hP)(this.outputPixelType)}}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],te.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:Yr,json:{write:!0,name:"rasterFunctionArguments"}})],te.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],te.prototype,"rasterArgumentNames",void 0),te=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.StatisticsFunction")],te);const Qr=te;var Ze;let Ut=Ze=class extends W{constructor(){super(...arguments),this.statistics=null,this.histograms=null}readStatistics(t,e){if(!t?.length)return null;const s=[];return t.forEach(n=>{s.push({min:n.min,max:n.max,avg:n.avg??n.mean,stddev:n.stddev??n.standardDeviation})}),s}writeStatistics(t,e,s){if(!t?.length)return;const n=[];t.forEach(o=>{const a={...o,mean:o.avg,standardDeviation:o.stddev};delete a.avg,delete a.stddev,n.push(a)}),e[s]=n}clone(){return new Ze({statistics:(0,K.o8)(this.statistics),histograms:(0,K.o8)(this.histograms)})}};(0,c._)([(0,p.MZ)({json:{write:!0}})],Ut.prototype,"statistics",void 0),(0,c._)([(0,pe.w)("statistics")],Ut.prototype,"readStatistics",null),(0,c._)([(0,me.K)("statistics")],Ut.prototype,"writeStatistics",null),(0,c._)([(0,p.MZ)({json:{write:!0}})],Ut.prototype,"histograms",void 0),Ut=Ze=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.StatisticsHistogramFunctionArguments")],Ut);const qr=Ut;let At=class extends I{constructor(){super(...arguments),this.functionName="StatisticsHistogram",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];this.outputPixelType=this._getOutputPixelType("u8");const e=t.clone(),{statistics:s,histograms:n}=this.functionArguments;return n&&(e.histograms=n),s&&(e.statistics=s),this.rasterInfo=e,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],At.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:qr,json:{write:!0,name:"rasterFunctionArguments"}})],At.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],At.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],At.prototype,"indexedColormap",void 0),(0,c._)([(0,p.MZ)()],At.prototype,"isNoopProcess",void 0),At=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.StatisticsHistogramFunction")],At);const to=At;var Ge;const eo=new ft.J({0:"none",3:"standard-deviation",4:"histogram-equalization",5:"min-max",6:"percent-clip",9:"sigmoid"},{useNumericKeys:!0});let et=Ge=class extends W{constructor(){super(...arguments),this.computeGamma=!1,this.dynamicRangeAdjustment=!1,this.gamma=[],this.histograms=null,this.statistics=null,this.stretchType="none",this.useGamma=!1}writeStatistics(t,e,s){t?.length&&(Array.isArray(t[0])||(t=t.map(n=>[n.min,n.max,n.avg,n.stddev])),e[s]=t)}clone(){return new Ge({stretchType:this.stretchType,outputMin:this.outputMin,outputMax:this.outputMax,useGamma:this.useGamma,computeGamma:this.computeGamma,statistics:(0,K.o8)(this.statistics),gamma:(0,K.o8)(this.gamma),sigmoidStrengthLevel:this.sigmoidStrengthLevel,numberOfStandardDeviations:this.numberOfStandardDeviations,minPercent:this.minPercent,maxPercent:this.maxPercent,histograms:(0,K.o8)(this.histograms),dynamicRangeAdjustment:this.dynamicRangeAdjustment,raster:this.raster})}};(0,c._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],et.prototype,"computeGamma",void 0),(0,c._)([(0,p.MZ)({type:Boolean,json:{name:"dra",write:!0}})],et.prototype,"dynamicRangeAdjustment",void 0),(0,c._)([(0,p.MZ)({type:[Number],json:{write:!0}})],et.prototype,"gamma",void 0),(0,c._)([(0,p.MZ)()],et.prototype,"histograms",void 0),(0,c._)([(0,p.MZ)({type:Number,json:{write:!0}})],et.prototype,"maxPercent",void 0),(0,c._)([(0,p.MZ)({type:Number,json:{write:!0}})],et.prototype,"minPercent",void 0),(0,c._)([(0,p.MZ)({type:Number,json:{write:!0}})],et.prototype,"numberOfStandardDeviations",void 0),(0,c._)([(0,p.MZ)({type:Number,json:{name:"max",write:!0}})],et.prototype,"outputMax",void 0),(0,c._)([(0,p.MZ)({type:Number,json:{name:"min",write:!0}})],et.prototype,"outputMin",void 0),(0,c._)([(0,p.MZ)({type:Number,json:{write:!0}})],et.prototype,"sigmoidStrengthLevel",void 0),(0,c._)([(0,p.MZ)({json:{type:[[Number]],write:!0}})],et.prototype,"statistics",void 0),(0,c._)([(0,me.K)("statistics")],et.prototype,"writeStatistics",null),(0,c._)([(0,dt.e)(eo)],et.prototype,"stretchType",void 0),(0,c._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],et.prototype,"useGamma",void 0),et=Ge=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.StretchFunctionArguments")],et);const no=et;let vt=class extends I{constructor(){super(...arguments),this.functionName="Stretch",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.lookup=null,this.cutOffs=null}_bindSourceRasters(){this.lookup=null,this.cutOffs=null;const t=this.sourceRasterInfos[0],{pixelType:e}=t,{functionArguments:s}=this,{dynamicRangeAdjustment:n,gamma:o,useGamma:a}=s;if(!n&&["u8","u16","s8","s16"].includes(e)){const l=(0,Tt.DP)(s.toJSON(),{rasterInfo:t}),m=(0,E.zw)(this.outputPixelType)?"round":"float";this.lookup=(0,Tt.RP)({pixelType:e,...l,gamma:a?o:null,rounding:m}),this.cutOffs=l}else n||(this.cutOffs=(0,Tt.DP)(s.toJSON(),{rasterInfo:t}));this.outputPixelType=this._getOutputPixelType(e);const i=t.clone();i.pixelType=this.outputPixelType,this._removeStatsHistColormapVAT(i),"u8"===this.outputPixelType&&(i.keyProperties.DataType="processed");const{outputMin:r=0,outputMax:u=255}=this.functionArguments;i.statistics=[];for(let l=0;l<i.bandCount;l++)i.statistics[l]={min:r,max:u};return this.rasterInfo=i,{success:!0,supportsGPU:!n}}_processPixels(t){const e=t.pixelBlocks?.[0];if(null==e)return e;const{lookup:s}=this;if(s)return(0,$.eH)(e,{...s,outputPixelType:this.rasterInfo.pixelType});const{functionArguments:n}=this,o=this.cutOffs||(0,Tt.DP)(n.toJSON(),{rasterInfo:this.sourceRasterInfos[0],pixelBlock:e});return(0,Tt._N)(e,{...o,gamma:n.useGamma?n.gamma:null,outputPixelType:this.outputPixelType})}_getWebGLParameters(){const{outputMin:t=0,outputMax:e=255,gamma:s,useGamma:n}=this.functionArguments,o=this.rasterInfo.bandCount>=2?3:1,a=n&&s?.length?(0,Tt.Nh)(o,s):[1,1,1],{minCutOff:i,maxCutOff:r}=this.cutOffs??{minCutOff:[0,0,0],maxCutOff:[255,255,255]};1===i.length&&(i[1]=i[2]=i[0],r[1]=r[2]=r[0]);const u=new Float32Array(o);let l;for(l=0;l<o;l++)u[l]=(e-t)/(r[l]-i[l]);const m=(0,E.zw)(this.outputPixelType);return{bandCount:o,outMin:t,outMax:e,minCutOff:i,maxCutOff:r,factor:u,useGamma:n,gamma:n&&s?s:[1,1,1],gammaCorrection:n&&a?a:[1,1,1],stretchType:this.functionArguments.stretchType,isOutputRounded:m,type:"stretch"}}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],vt.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:no,json:{write:!0,name:"rasterFunctionArguments"}})],vt.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],vt.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],vt.prototype,"lookup",void 0),(0,c._)([(0,p.MZ)({json:{write:!0}})],vt.prototype,"cutOffs",void 0),vt=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.StretchFunction")],vt);const so=vt;var Le;let de=Le=class extends W{constructor(){super(...arguments),this.attributeTableAsRecordSet=null}clone(){return new Le({attributeTableAsRecordSet:(0,K.o8)(this.attributeTableAsRecordSet)})}};(0,c._)([(0,p.MZ)({json:{write:!0}})],de.prototype,"attributeTableAsRecordSet",void 0),de=Le=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.TableFunctionArguments")],de);const ro=de;let Zt=class extends I{constructor(){super(...arguments),this.functionName="Table",this.functionArguments=null,this.rasterArgumentNames=["raster"],this.isNoopProcess=!0}_bindSourceRasters(){const t=this.sourceRasterInfos[0];if(t.bandCount>1||t.pixelType.startsWith("f"))return{success:!1,supportsGPU:!1,error:"table-function: Source data must be single band and integer pixel type."};const{attributeTableAsRecordSet:e}=this.functionArguments;if(!e)return{success:!1,supportsGPU:!1,error:"table-function: Missing attributeTableAsRecordSet argument."};this.outputPixelType=this._getOutputPixelType(t.pixelType);const s=t.clone();return s.pixelType=this.outputPixelType,s.bandCount=1,"thematic"!==s.dataType&&(s.keyProperties=s.keyProperties?{...s.keyProperties,DataType:"thematic"}:{DataType:"thematic"}),this.rasterInfo=s,{success:!0,supportsGPU:!0}}_processPixels(t){return t.pixelBlocks?.[0]}};(0,c._)([(0,p.MZ)({json:{write:!0,name:"rasterFunction"}})],Zt.prototype,"functionName",void 0),(0,c._)([(0,p.MZ)({type:ro,json:{write:!0,name:"rasterFunctionArguments"}})],Zt.prototype,"functionArguments",void 0),(0,c._)([(0,p.MZ)()],Zt.prototype,"rasterArgumentNames",void 0),(0,c._)([(0,p.MZ)()],Zt.prototype,"isNoopProcess",void 0),Zt=(0,c._)([(0,M.$)("esri.layers.support.rasterFunctions.TableFunction")],Zt);const oo=Zt,H=new Map;function An(t,e){const{rasterFunctionArguments:s}=t;s&&(s.rasters||[s.raster,s.raster2]).forEach(n=>{n&&"number"!=typeof n&&("string"==typeof n?n.startsWith("http")&&(e.includes(n)||e.push(n)):"rasterFunctionArguments"in n&&An(n,e))})}function io(t,e){if(e=e??{},"function"in(t=(0,K.o8)(t))&&"arguments"in t&&t.arguments){const s=Fn(t,new Map,e);if(We(s),!s.renderingRule)throw new ot.A("raster-function-helper","Unsupported raster function json.");t=s.renderingRule}if("rasterFunction"in t)return xn(t=ze(t),e);throw new ot.A("raster-function-helper","unsupported raster function json.")}function vn(t){return!!(t&&"object"==typeof t&&t.rasterFunction&&t.rasterFunctionArguments)}function ze(t){const{rasterFunction:e,rasterFunctionArguments:s}=t,n={};for(const o in s){let a=s[o];const i=o.toLowerCase();if("rasters"===i&&Array.isArray(a))n.rasters=a.map(r=>vn(r)?ze(r):r);else switch(vn(a)&&(a=ze(a)),i){case"dra":n.dra=a;break;case"pspower":n.psPower=a;break;case"pszfactor":n.psZFactor=a;break;case"bandids":n.bandIds=a;break;default:n[o[0].toLowerCase()+o.slice(1)]=a}}return"Local"!==e||n.rasters?.length||(n.rasters=["$$"]),{...t,rasterFunctionArguments:n}}function xn(t,e){const{rasterFunction:s,rasterFunctionArguments:n}=t,o=t.outputPixelType?.toLowerCase();if(null==s||!H.has(s))throw new ot.A("raster-function-helper",`unsupported raster function: ${s}`);const a=H.get(s),i=("function"==typeof a.ctor?a.ctor:a.ctor.default).fromJSON({...t,outputPixelType:o}),{rasterArgumentNames:r}=i,u=[],l=function ao(t,e){return"rasters"===e[0]&&Array.isArray(t.rasters)?t.rasters:e.map(s=>t[s])}(n,r),m="rasters"===r[0]||r.length>1,h=[];for(let d=0;d<l.length;d++){const f=l[d];let g;null==f||"string"==typeof f&&f.startsWith("$")?u.push(e?.raster):"string"==typeof f?e[f]&&u.push(e[f]):"number"!=typeof f&&"rasterFunction"in f&&(g=xn(f,e),m||(i.functionArguments[r[d]]=g),u.push(g)),m&&h.push(g??f)}if(m&&("rasters"===r[0]?i.functionArguments.rasters=h:r.forEach((d,f)=>{i.functionArguments[d]=h[f]})),e){i.sourceRasters=u;const d=e.raster?.url;d&&(i.mainPrimaryRasterId=d)}return i}function wn(t,e){if(t&&e)for(const s in t){const n=t[s];n&&"object"==typeof n&&"type"in n&&("RasterFunctionTemplate"===n.type?wn(n.arguments,e):"RasterFunctionVariable"===n.type&&null!=e[n.name]&&(n.value=e[n.name]))}}function Ve(t,e){if(!t||"object"!=typeof t)return t;const{value:s}=t;if(!s||"object"!=typeof s)return t.isDataset?"$$":s;if(Array.isArray(s))return 0===s.length?[]:s.map(o=>"object"==typeof o&&"RasterFunctionVariable"===o.type?Ve(o,e):o);if("value"in s&&["number","string","boolean"].includes(typeof s.value))return s.value;if(t.isDataset&&"Scalar"!==s.type)return"$$";if(!("type"in s))return s;let n=s;switch(s.type){case"Scalar":n=s.value;break;case"AlgorithmicColorRamp":n=bn(s);break;case"MultiPartColorRamp":n={type:"multipart",colorRamps:s.ArrayOfColorRamp.map(bn)};break;case"ArgumentArray":if(s.elements?.length&&"RasterStatistics"!==s.elements[0].type){const o=[];for(let a=0;a<s.elements.length;a++){const i=s.elements[a],{type:r}=i;if(r)if("RasterFunctionTemplate"===r){const{renderingRule:u}=Fn(i,e);o.push(u),null!=i._object_id&&e.set(i._object_id,u)}else{if("RasterFunctionVariable"!==r)throw new ot.A("raster-function-helper","unsupported raster function json.");{const u=Ve(i,e);o.push(u),null!=i._object_id&&e.set(i._object_id,u)}}else o.push(i)}n=o}else n=s.elements}return null!=s._object_id&&e.set(s._object_id,n),n}function bn(t){const e=t.algorithm??"esriHSVAlgorithm";let{FromColor:s,ToColor:n}=t;if(!Array.isArray(s)){const{r:o,g:a,b:i}=(0,J.$)({h:s.Hue,s:s.Saturation,v:s.Value});s=[o,a,i,s.AlphaValue]}if(!Array.isArray(n)){const{r:o,g:a,b:i}=(0,J.$)({h:n.Hue,s:n.Saturation,v:n.Value});n=[o,a,i,n.AlphaValue]}return{type:"algorithmic",algorithm:e,fromColor:s,toColor:n}}function Fn(t,e,s){s&&wn(t,s);const n={renderingRule:{},templates:e};return Mn(t,n),n}function Mn(t,e){if(!t||!e.renderingRule)return;const{renderingRule:s,templates:n}=e,{function:o,arguments:a,_object_id:i}=t;if(!o||!a)return;null!=i&&n.set(i,s),s.rasterFunction=o.type.replace("Function",""),s.outputPixelType=o.pixelType;const r={};s.rasterFunctionArguments=r;for(const u in a){if("type"===u||"object_id"===u||"_object_ref_id"===u)continue;const l=a[u];l&&"object"==typeof l&&"type"in l&&("RasterFunctionTemplate"===l.type||"RasterFunctionVariable"===l.type)?("RasterFunctionVariable"===l.type?r[u]=Ve(l,n):(s.rasterFunctionArguments[u]={},Mn(l,{renderingRule:s.rasterFunctionArguments[u],templates:n})),null!=l._object_id&&n.set(l._object_id,r[u])):r[u]=l}switch(r.DEM&&!r.Raster&&(r.Raster=r.DEM,delete r.DEM),s.rasterFunction){case"Stretch":!function uo(t){t.Statistics?.length&&"object"==typeof t.Statistics&&(t.Statistics=t.Statistics.map(e=>[e.min,e.max,e.mean,e.standardDeviation])),null!=t.NumberOfStandardDeviation&&(t.NumberOfStandardDeviations=t.NumberOfStandardDeviation,delete t.NumberOfStandardDeviation)}(r);break;case"Colormap":!function lo(t){"randomcolorramp"===t.ColorRamp?.type?.toLowerCase()&&(delete t.ColorRamp,t.ColormapName="Random"),0===t.ColorSchemeType&&delete t.ColorRamp}(r);break;case"Convolution":!function co(t){null!=t.ConvolutionType&&(t.Type=t.ConvolutionType,delete t.ConvolutionType)}(r);break;case"Mask":!function po(t){t.NoDataValues?.length&&"string"==typeof t.NoDataValues[0]&&(t.NoDataValues=t.NoDataValues.filter(e=>""!==e).map(e=>Number(e)))}(r)}}function We(t){const{renderingRule:e,templates:s}=t;if("object"!=typeof e||!e?.rasterFunctionArguments||!s.size)return;const{rasterFunctionArguments:n}=e;for(const o in n){const a=n[o],i="_object_ref_id"===o?a:a&&"object"==typeof a&&"_object_ref_id"in a?a._object_ref_id:null;if(null==i)a&&"object"==typeof a&&(a.rasterFunctionArguments&&We({renderingRule:a,templates:s}),Array.isArray(a)&&a.forEach((r,u)=>{if("object"==typeof r)if(null!=r._object_ref_id){if(!s.has(r._object_ref_id))throw new ot.A("raster-function-helper",`unsupported raster function json. _object_ref_id: ${a} does not exist`);const l=s.get(i);l&&"object"==typeof l?Object.assign(r,l):a[u]=l}else We({renderingRule:r,templates:s})}));else{if(!s.has(i))throw new ot.A("raster-function-helper",`unsupported raster function json. _object_ref_id: ${i} does not exist`);const r=s.get(i);"_object_ref_id"!==o?n[o]=r:r&&"object"==typeof r&&Object.assign(n,r)}}}H.set("Arithmetic",{desc:"Arithmetic Function",ctor:ds,rasterArgumentNames:["rasters"]}),H.set("Aspect",{desc:"Aspect Function",ctor:gs,rasterArgumentNames:["raster"]}),H.set("BandArithmetic",{desc:"Band Arithmetic Function",ctor:zs,rasterArgumentNames:["raster"]}),H.set("Colormap",{desc:"Colormap Function",ctor:sr,rasterArgumentNames:["raster"]}),H.set("CompositeBand",{desc:"CompositeBand Function",ctor:or,rasterArgumentNames:["rasters"]}),H.set("ComputeChange",{desc:"ComputeChange Function",ctor:fr,rasterArgumentNames:["rasters"]}),H.set("Convolution",{desc:"Convolution Function",ctor:Fr,rasterArgumentNames:["raster"]}),H.set("ContrastBrightness",{desc:"Contrast Brightness Function",ctor:yr,rasterArgumentNames:["raster"]}),H.set("ExtractBand",{desc:"ExtractBand Function",ctor:Ir,rasterArgumentNames:["raster"]}),H.set("Curvature",{desc:"Curvature Function",ctor:Pr,rasterArgumentNames:["raster"]}),H.set("Grayscale",{desc:"Grayscale Function",ctor:kr,rasterArgumentNames:["raster"]}),H.set("Clip",{desc:"Clip Function",ctor:Hs,rasterArgumentNames:["raster"]}),H.set("Local",{desc:"Local Function",ctor:jr,rasterArgumentNames:["rasters"]}),H.set("Mask",{desc:"Mask Function",ctor:Or,rasterArgumentNames:["raster"]}),H.set("NDVI",{desc:"NDVI Function",ctor:Zr,rasterArgumentNames:["raster"]}),H.set("Remap",{desc:"Remap Function",ctor:Lr,rasterArgumentNames:["raster"]}),H.set("Slope",{desc:"Slope Function",ctor:Wr,rasterArgumentNames:["raster"]}),H.set("Statistics",{desc:"Focal Statistics Function",ctor:Qr,rasterArgumentNames:["raster"]}),H.set("StatisticsHistogram",{desc:"Statistics Histogram Function",ctor:to,rasterArgumentNames:["raster"]}),H.set("Stretch",{desc:"Stretch Function",ctor:so,rasterArgumentNames:["raster"]}),H.set("Table",{desc:"Attribute Table Function",ctor:oo,rasterArgumentNames:["raster"]})},55490:(fe,xt,x)=>{x.d(xt,{A:()=>M});var J=x(8189),ot=x(71065),K=x(85211),Gt=(x(3248),x(35150),x(40707),x(76576));let it=class extends ot.oY{get affectsPixelSize(){return!1}forwardTransform(E){return E}inverseTransform(E){return E}};(0,J._)([(0,K.MZ)()],it.prototype,"affectsPixelSize",null),(0,J._)([(0,K.MZ)({json:{write:!0}})],it.prototype,"spatialReference",void 0),it=(0,J._)([(0,Gt.$)("esri.layers.support.rasterTransforms.BaseRasterTransform")],it);const M=it},39181:(fe,xt,x)=>{x.d(xt,{A:()=>Lt});var M,J=x(8189),ot=x(85211),ie=(x(3248),x(35150),x(40707),x(15463)),Gt=x(76576),it=x(55490);let E=M=class extends it.A{constructor(){super(...arguments),this.type="gcs-shift",this.tolerance=1e-8}forwardTransform(O){return"point"===(O=O.clone()).type?(O.x>180+this.tolerance&&(O.x-=360),O):(O.xmin>=180-this.tolerance?(O.xmax-=360,O.xmin-=360):O.xmax>180+this.tolerance&&(O.xmin=-180,O.xmax=180),O)}inverseTransform(O){return"point"===(O=O.clone()).type?(O.x<-this.tolerance&&(O.x+=360),O):(O.xmin<-this.tolerance&&(O.xmin+=360,O.xmax+=360),O)}clone(){return new M({tolerance:this.tolerance})}};(0,J._)([(0,ie.e)({GCSShiftXform:"gcs-shift"})],E.prototype,"type",void 0),(0,J._)([(0,ot.MZ)()],E.prototype,"tolerance",void 0),E=M=(0,J._)([(0,Gt.$)("esri.layers.support.rasterTransforms.GCSShiftTransform")],E);const Lt=E},47168:(fe,xt,x)=>{x.d(xt,{A:()=>ge});var wt,J=x(8189),K=(x(21152),x(85211)),Gt=(x(3248),x(35150),x(40707),x(15463)),it=x(17221),M=x(76576),E=x(50305),Lt=x(55490),O=x(1749),W=x(28067);function lt(A,T,I){const{x:C,y:B}=T;if(I<2)return{x:A[0]+C*A[2]+B*A[4],y:A[1]+C*A[3]+B*A[5]};if(2===I){const st=C*C,le=B*B,tt=C*B;return{x:A[0]+C*A[2]+B*A[4]+st*A[6]+tt*A[8]+le*A[10],y:A[1]+C*A[3]+B*A[5]+st*A[7]+tt*A[9]+le*A[11]}}const S=C*C,nt=B*B,pt=C*B,X=S*C,zt=S*B,D=C*nt,q=B*nt;return{x:A[0]+C*A[2]+B*A[4]+S*A[6]+pt*A[8]+nt*A[10]+X*A[12]+zt*A[14]+D*A[16]+q*A[18],y:A[1]+C*A[3]+B*A[5]+S*A[7]+pt*A[9]+nt*A[11]+X*A[13]+zt*A[15]+D*A[17]+q*A[19]}}function ae(A,T,I){const{xmin:C,ymin:B,xmax:S,ymax:nt,spatialReference:pt}=T;let X=[];if(I<2)X.push({x:C,y:nt}),X.push({x:S,y:nt}),X.push({x:C,y:B}),X.push({x:S,y:B});else{let q=10;for(let st=0;st<q;st++)X.push({x:C,y:B+(nt-B)*st/(q-1)}),X.push({x:S,y:B+(nt-B)*st/(q-1)});q=8;for(let st=1;st<=q;st++)X.push({x:C+(S-C)*st/q,y:B}),X.push({x:C+(S-C)*st/q,y:nt})}X=X.map(q=>lt(A,q,I));const zt=X.map(q=>q.x),D=X.map(q=>q.y);return new W.A({xmin:Math.min.apply(null,zt),xmax:Math.max.apply(null,zt),ymin:Math.min.apply(null,D),ymax:Math.max.apply(null,D),spatialReference:pt})}let y=wt=class extends Lt.A{constructor(){super(...arguments),this.polynomialOrder=1,this.type="polynomial"}readForwardCoefficients(A,T){const{coeffX:I,coeffY:C}=T;if(!I?.length||!C?.length||I.length!==C.length)return null;const B=[];for(let S=0;S<I.length;S++)B.push(I[S]),B.push(C[S]);return B}writeForwardCoefficients(A,T,I){const C=[],B=[];for(let S=0;S<A?.length;S++)S%2==0?C.push(A[S]):B.push(A[S]);T.coeffX=C,T.coeffY=B}get inverseCoefficients(){let A=this._get("inverseCoefficients");const T=this._get("forwardCoefficients");return!A&&T&&this.polynomialOrder<2&&(A=function ue(A){const[T,I,C,B,S,nt]=A,pt=C*nt-S*B,X=S*B-C*nt;return[(S*I-T*nt)/pt,(C*I-T*B)/X,nt/pt,B/X,-S/pt,-C/X]}(T)),A}set inverseCoefficients(A){this._set("inverseCoefficients",A)}readInverseCoefficients(A,T){const{inverseCoeffX:I,inverseCoeffY:C}=T;if(!I?.length||!C?.length||I.length!==C.length)return null;const B=[];for(let S=0;S<I.length;S++)B.push(I[S]),B.push(C[S]);return B}writeInverseCoefficients(A,T,I){const C=[],B=[];for(let S=0;S<A?.length;S++)S%2==0?C.push(A[S]):B.push(A[S]);T.inverseCoeffX=C,T.inverseCoeffY=B}get affectsPixelSize(){return this.polynomialOrder>0}forwardTransform(A){if("point"===A.type){const T=lt(this.forwardCoefficients,A,this.polynomialOrder);return new O.A({x:T.x,y:T.y,spatialReference:A.spatialReference})}return ae(this.forwardCoefficients,A,this.polynomialOrder)}inverseTransform(A){if("point"===A.type){const T=lt(this.inverseCoefficients,A,this.polynomialOrder);return new O.A({x:T.x,y:T.y,spatialReference:A.spatialReference})}return ae(this.inverseCoefficients,A,this.polynomialOrder)}clone(){return new wt({polynomialOrder:this.polynomialOrder,forwardCoefficients:this.forwardCoefficients?[...this.forwardCoefficients]:null,inverseCoefficients:this.inverseCoefficients?[...this.inverseCoefficients]:null})}};(0,J._)([(0,K.MZ)({json:{write:!0}})],y.prototype,"polynomialOrder",void 0),(0,J._)([(0,K.MZ)()],y.prototype,"forwardCoefficients",void 0),(0,J._)([(0,it.w)("forwardCoefficients",["coeffX","coeffY"])],y.prototype,"readForwardCoefficients",null),(0,J._)([(0,E.K)("forwardCoefficients")],y.prototype,"writeForwardCoefficients",null),(0,J._)([(0,K.MZ)({json:{write:!0}})],y.prototype,"inverseCoefficients",null),(0,J._)([(0,it.w)("inverseCoefficients",["inverseCoeffX","inverseCoeffY"])],y.prototype,"readInverseCoefficients",null),(0,J._)([(0,E.K)("inverseCoefficients")],y.prototype,"writeInverseCoefficients",null),(0,J._)([(0,K.MZ)()],y.prototype,"affectsPixelSize",null),(0,J._)([(0,Gt.e)({PolynomialXform:"polynomial"})],y.prototype,"type",void 0),y=wt=(0,J._)([(0,M.$)("esri.layers.support.rasterTransforms.PolynomialTransform")],y);const ge=y}}]);