"use strict";(self.webpackChunkangular_18_test=self.webpackChunkangular_18_test||[]).push([[6913],{67571:(C,B,o)=>{o.d(B,{O:()=>m});class m{constructor(){this._outer=new Map}clear(){this._outer.clear()}get empty(){return 0===this._outer.size}get(d,c){return this._outer.get(d)?.get(c)}set(d,c,f){const r=this._outer.get(d);r?r.set(c,f):this._outer.set(d,new Map([[c,f]]))}delete(d,c){const f=this._outer.get(d);f&&(f.delete(c),0===f.size&&this._outer.delete(d))}forEach(d){this._outer.forEach((c,f)=>d(c,f))}}},3276:(C,B,o)=>{o.d(B,{p:()=>f});var m=o(73539),T=o(37488);const d=r=>{let h="";h+=r[0].toUpperCase();for(let _=1;_<r.length;_++){const l=r[_];l===l.toUpperCase()?(h+="_",h+=l):h+=l.toUpperCase()}return h},f=(r,h,_,l)=>{const A=r+r.substring(r.lastIndexOf("/")),x=h+h.substring(h.lastIndexOf("/")),S=(r=>{const h={};for(const _ in r)h[d(_)]=r[_];return(0,T.I)(h)})(l);return{attributes:_,shaders:{vertexShader:S+(0,m.Q)(`${A}.vert`),fragmentShader:S+(0,m.Q)(`${x}.frag`)}}}},93987:(C,B,o)=>{o.d(B,{J:()=>c}),o(3248);var T=o(67571),d=o(23063);class c{constructor(r){this._rctx=r,this._store=new T.O}dispose(){this._store.forEach(r=>r.forEach(h=>h.dispose())),this._store.clear()}acquire(r,h,_,l){const A=this._store.get(r,h);if(null!=A)return A.ref(),A;const x=new d.B(this._rctx,r,h,_,l);return x.ref(),this._store.set(r,h,x),x}get test(){}}},48458:(C,B,o)=>{o.d(B,{e:()=>lt});var m=o(10467),T=o(11432),d=o(56492),c=o(82595),f=o(77440),r=o(50915);class h{constructor(){this.blend=!1,this.blendColor={r:0,g:0,b:0,a:0},this.blendFunction={srcRGB:r.dn.ONE,dstRGB:r.dn.ZERO,srcAlpha:r.dn.ONE,dstAlpha:r.dn.ZERO},this.blendEquation={mode:r.Tb.ADD,modeAlpha:r.Tb.ADD},this.colorMask={r:!0,g:!0,b:!0,a:!0},this.faceCulling=!1,this.cullFace=r.Y7.BACK,this.frontFace=r.Ac.CCW,this.scissorTest=!1,this.scissorRect={x:0,y:0,width:0,height:0},this.depthTest=!1,this.depthFunction=r.MT.LESS,this.clearDepth=1,this.depthWrite=!0,this.depthRange={zNear:0,zFar:1},this.viewport=null,this.stencilTest=!1,this.polygonOffsetFill=!1,this.polygonOffset=[0,0],this.stencilFunction={face:r.Y7.FRONT_AND_BACK,func:r.MT.ALWAYS,ref:0,mask:1},this.clearStencil=0,this.stencilWriteMask=1,this.stencilOperation={face:r.Y7.FRONT_AND_BACK,fail:r.eA.KEEP,zFail:r.eA.KEEP,zPass:r.eA.KEEP},this.clearColor={r:0,g:0,b:0,a:0},this.program=null,this.vertexBuffer=null,this.indexBuffer=null,this.uniformBuffer=null,this.pixelPackBuffer=null,this.pixelUnpackBuffer=null,this.copyReadBuffer=null,this.copyWriteBuffer=null,this.transformFeedbackBuffer=null,this.uniformBufferBindingPoints=new Array,this.transformBufferBindingPoints=new Array,this.readFramebuffer=null,this.drawFramebuffer=null,this.drawBuffers={defaultFramebuffer:[r.Hr.BACK],fbos:new WeakMap},this.renderbuffer=null,this.activeTexture=0,this.textureUnitMap=new Array,this.vertexArrayObject=null}}class A{constructor(){for(this._current=new Array,this._allocations=null;this._current.length<r.vt.COUNT;)this._current.push(0)}increment(e,s,i=1){this._current[e]+=i,this._allocations?.add(s)}decrement(e,s,i=1){this._current[e]-=i,this._allocations?.remove(s)}get current(){return this._current}get total(){return this.current.reduce((e,s,i)=>e+(i<r.vt.UNCOUNTED?s:0),0)}get resourceInformation(){let e="";if(this.total>0){e+="Live objects:\n";for(let s=0;s<r.vt.COUNT;++s){const i=this._current[s];i>0&&(e+=`${r.vt[s]}: ${i}\n`)}}return e+=this._allocations?.resetLog(),e}}class x{constructor(e,s,i){const n=s.textureFilterAnisotropic,a=i.maxAnisotropy??1/0;this.versionString=e.getParameter(e.VERSION),this.maxVertexTextureImageUnits=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxVertexAttributes=e.getParameter(e.MAX_VERTEX_ATTRIBS),this.maxMaxAnisotropy=n?Math.min(e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY),a):1,this.maxTextureImageUnits=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxRenderbufferSize=e.getParameter(e.MAX_RENDERBUFFER_SIZE),this.maxViewportDims=e.getParameter(e.MAX_VIEWPORT_DIMS),this.maxUniformBufferBindings=e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS),this.maxVertexUniformBlocks=e.getParameter(e.MAX_VERTEX_UNIFORM_BLOCKS),this.maxFragmentUniformBlocks=e.getParameter(e.MAX_FRAGMENT_UNIFORM_BLOCKS),this.maxUniformBlockSize=e.getParameter(e.MAX_UNIFORM_BLOCK_SIZE),this.uniformBufferOffsetAlignment=e.getParameter(e.UNIFORM_BUFFER_OFFSET_ALIGNMENT),this.maxArrayTextureLayers=e.getParameter(e.MAX_ARRAY_TEXTURE_LAYERS),this.maxSamples=e.getParameter(e.MAX_SAMPLES),this.maxDrawBuffers=e.getParameter(e.MAX_DRAW_BUFFERS)}}var S=o(93987),N=o(41396),V=o(26136),H=o(84757),P=o(3248),y=o(93093),v=o(32788);class M{constructor(e){this._rctx=e,this._indexBuffer=this._createIndexbuffer(),this._program=this._createHelperProgram()}static getShaderSources(){return{vertex:"#version 300 es\n    precision highp float;\n\n    void main(void) {\n      gl_Position = vec4(0.0, 0.0, float(gl_VertexID)-2.0, 1.0);\n    }",fragment:"#version 300 es\n    precision highp float;\n\n    out vec4 fragColor;\n\n    void main(void) {\n      fragColor = vec4(0.0, 0.0, 0.0, 1.0);\n    }"}}_createHelperProgram(){const e=M.getShaderSources();return this._rctx.programCache.acquire(e.vertex,e.fragment,new Map([]))}_createIndexbuffer(){return v.g.createIndex(this._rctx,r._U.STATIC_DRAW,new Uint32Array([0]))}run(){this._program.compiled&&this._indexBuffer&&(this._rctx.bindVAO(null),this._rctx.useProgram(this._program),this._rctx.bindBuffer(this._indexBuffer,r.NZ.ELEMENT_ARRAY_BUFFER),this._rctx.drawElements(r.WR.POINTS,1,r.pe.UNSIGNED_INT,0))}dispose(){this._program.dispose(),this._indexBuffer.dispose()}get test(){}}var U=o(79061),D=o(4931),w=o(52274);class Y extends w._{constructor(e){super(),this._rctx=e,this._helperProgram=null,(0,P.A)("mac")&&(0,P.A)("chrome")&&(this._program=this._prepareProgram(),this._helperProgram=this._prepareHelperProgram())}dispose(){super.dispose(),this._helperProgram?.dispose(),this._helperProgram=null}_test(e){const s=this._rctx,i=s.getBoundFramebufferObject(),{x:n,y:a,width:u,height:R}=s.getViewport();s.resetState();const g=new D.R(1);g.wrapMode=r.pF.CLAMP_TO_EDGE,g.samplingMode=r.Cj.NEAREST;const E=new U.H(s,g),p=v.g.createIndex(this._rctx,r._U.STATIC_DRAW,new Uint8Array([0]));s.bindFramebuffer(E),s.setViewport(0,0,1,1),s.useProgram(this._helperProgram),s.bindBuffer(p,r.NZ.ELEMENT_ARRAY_BUFFER),s.drawElements(r.WR.POINTS,1,r.pe.UNSIGNED_BYTE,0),s.useProgram(e),s.bindVAO(null),s.drawArrays(r.WR.TRIANGLES,0,258);const F=new Uint8Array(4);return E.readPixels(0,0,1,1,r.Ab.RGBA,r.ld.UNSIGNED_BYTE,F),s.setViewport(n,a,u,R),s.bindFramebuffer(i),E.dispose(),p.dispose(),255===F[0]}_prepareProgram(){const s=`#version 300 es\n    precision highp float;\n\n    out float triangleId;\n\n    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));\n\n    void main(void) {\n      triangleId = floor(float(gl_VertexID)/3.0);\n\n      vec3 position = triangleVertices[gl_VertexID % 3];\n      float offset = triangleId / ${y.H.float(85)};\n      position.z = 0.5 - offset;\n\n      gl_Position = vec4(position, 1.0);\n    }\n    `,i=`#version 300 es\n    precision highp float;\n\n    in float triangleId;\n\n    out vec4 fragColor;\n\n    void main(void) {\n      fragColor = triangleId == ${y.H.float(85)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);\n    }\n    `;return this._rctx.programCache.acquire(s,i,new Map([]))}_prepareHelperProgram(){const e=M.getShaderSources();return this._rctx.programCache.acquire(e.vertex,e.fragment,new Map([]))}}var j=o(86468),L=o(25866),k=o(45825),G=o(45513),W=o(30454);class K extends w._{constructor(e){super(),this._rctx=e,this._program=X(this._rctx,!1),this._obfuscated=X(this._rctx,!0)}dispose(){super.dispose(),this._obfuscated=(0,T.WD)(this._obfuscated)}_test(e){if((0,P.A)("force-double-precision-obfuscation"))return!0;if(null==this._obfuscated)return!1;const s=this._rctx,i=s.getBoundFramebufferObject(),{x:n,y:a,width:u,height:R}=s.getViewport(),g=this._runProgram(e),E=this._runProgram(this._obfuscated);return s.setViewport(n,a,u,R),s.bindFramebuffer(i),0!==g&&(0===E||g/E>5)}_runProgram(e){const s=this._rctx;s.resetState();const i=new D.R(1);i.wrapMode=r.pF.CLAMP_TO_EDGE,i.samplingMode=r.Cj.NEAREST;const n=new U.H(s,i),a=v.g.createVertex(s,r._U.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),u=new G.Z(s,new Map([["position",0]]),{geometry:[new W._("position",2,r.pe.UNSIGNED_SHORT,0,4)]},{geometry:a}),R=(0,L.fA)(5633261.287538229,2626832.878767164,1434988.0495278358),g=(0,L.fA)(5633271.46742708,2626873.6381334523,1434963.231608387),E=new Float32Array(6);(0,k.jS)(R,E,3);const p=new Float32Array(6);(0,k.jS)(g,p,3),s.useProgram(e),e.setUniform3f("u_highA",E[0],E[2],E[4]),e.setUniform3f("u_lowA",E[1],E[3],E[5]),e.setUniform3f("u_highB",p[0],p[2],p[4]),e.setUniform3f("u_lowB",p[1],p[3],p[5]),s.bindFramebuffer(n),s.setViewport(0,0,1,1),s.bindVAO(u),s.drawArrays(r.WR.TRIANGLE_STRIP,0,4);const F=new Uint8Array(4);n.readPixels(0,0,1,1,r.Ab.RGBA,r.ld.UNSIGNED_BYTE,F),u.dispose(),n.dispose();const O=(R[2]-g[2])/25,I=(0,j.T)(F);return Math.abs(O-I)}}function X(t,e){return t.programCache.acquire(`\n\n  precision highp float;\n\n  attribute vec2 position;\n\n  uniform vec3 u_highA;\n  uniform vec3 u_lowA;\n  uniform vec3 u_highB;\n  uniform vec3 u_lowB;\n\n  varying vec4 v_color;\n\n  ${e?"#define DOUBLE_PRECISION_REQUIRES_OBFUSCATION":""}\n\n  #ifdef DOUBLE_PRECISION_REQUIRES_OBFUSCATION\n\n  vec3 dpPlusFrc(vec3 a, vec3 b) {\n    return mix(a, a + b, vec3(notEqual(b, vec3(0))));\n  }\n\n  vec3 dpMinusFrc(vec3 a, vec3 b) {\n    return mix(vec3(0), a - b, vec3(notEqual(a, b)));\n  }\n\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n    vec3 t1 = dpPlusFrc(hiA, hiB);\n    vec3 e = dpMinusFrc(t1, hiA);\n    vec3 t2 = dpMinusFrc(hiB, e) + dpMinusFrc(hiA, dpMinusFrc(t1, e)) + loA + loB;\n    return t1 + t2;\n  }\n\n  #else\n\n  vec3 dpAdd(vec3 hiA, vec3 loA, vec3 hiB, vec3 loB) {\n    vec3 t1 = hiA + hiB;\n    vec3 e = t1 - hiA;\n    vec3 t2 = ((hiB - e) + (hiA - (t1 - e))) + loA + loB;\n    return t1 + t2;\n  }\n\n  #endif\n\n  const float MAX_RGBA_FLOAT =\n    255.0 / 256.0 +\n    255.0 / 256.0 / 256.0 +\n    255.0 / 256.0 / 256.0 / 256.0 +\n    255.0 / 256.0 / 256.0 / 256.0 / 256.0;\n\n  const vec4 FIXED_POINT_FACTORS = vec4(1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0);\n\n  vec4 float2rgba(const float value) {\n    // Make sure value is in the domain we can represent\n    float valueInValidDomain = clamp(value, 0.0, MAX_RGBA_FLOAT);\n\n    // Decompose value in 32bit fixed point parts represented as\n    // uint8 rgba components. Decomposition uses the fractional part after multiplying\n    // by a power of 256 (this removes the bits that are represented in the previous\n    // component) and then converts the fractional part to 8bits.\n    vec4 fixedPointU8 = floor(fract(valueInValidDomain * FIXED_POINT_FACTORS) * 256.0);\n\n    // Convert uint8 values (from 0 to 255) to floating point representation for\n    // the shader\n    const float toU8AsFloat = 1.0 / 255.0;\n\n    return fixedPointU8 * toU8AsFloat;\n  }\n\n  void main() {\n    vec3 val = dpAdd(u_highA, u_lowA, -u_highB, -u_lowB);\n\n    v_color = float2rgba(val.z / 25.0);\n\n    gl_Position = vec4(position * 2.0 - 1.0, 0.0, 1.0);\n  }\n  `,"\n  precision highp float;\n\n  varying vec4 v_color;\n\n  void main() {\n    gl_FragColor = v_color;\n  }\n  ",new Map([["position",0]]))}class z extends w._{constructor(e){super(),this._rctx=e,e.gl&&e.capabilities.colorBufferFloat?.textureFloat&&e.capabilities.colorBufferFloat?.floatBlend&&(this._program=e.programCache.acquire("\n    precision highp float;\n    attribute vec2 a_pos;\n\n    void main() {\n      gl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\n    }\n    ","\n     precision highp float;\n\n     void main() {\n      gl_FragColor = vec4(0.5, 0.5, 0.5, 0.5);\n     }\n    ",new Map([["a_pos",0]])))}_test(e){const s=this._rctx,i=new D.R(1);i.wrapMode=r.pF.CLAMP_TO_EDGE,i.dataType=r.ld.FLOAT,i.internalFormat=r.H0.RGBA32F,i.samplingMode=r.Cj.NEAREST;const n=new U.H(s,i),a=v.g.createVertex(s,r._U.STATIC_DRAW,new Uint16Array([0,0,1,0,0,1,1,1])),u=new G.Z(s,new Map([["a_pos",0]]),{geometry:[new W._("a_pos",2,r.pe.UNSIGNED_SHORT,0,4)]},{geometry:a});s.gl.getError(),s.useProgram(e);const R=s.getBoundFramebufferObject(),{x:g,y:E,width:p,height:F}=s.getViewport();s.bindFramebuffer(n),s.setViewport(0,0,1,1),s.bindVAO(u),s.drawArrays(r.WR.TRIANGLE_STRIP,0,4);const O=(0,N.Ey)({blending:(0,N.ox)(r.dn.ZERO,r.dn.ONE_MINUS_SRC_ALPHA)});s.setPipelineState(O),s.drawArrays(r.WR.TRIANGLE_STRIP,0,4);const I=s.gl.getError();return s.setViewport(g,E,p,F),s.bindFramebuffer(R),u.dispose(),n.dispose(),I!==s.gl.INVALID_OPERATION||(console.warn("Device claims support for WebGL extension EXT_float_blend but does not support it. Using fall back."),!1)}}var $=o(20047);class q{constructor(e){this.rctx=e,this.floatBufferBlend=new z(e),this.svgPremultipliesAlpha=new $.H(e),this.doublePrecisionRequiresObfuscation=new K(e),this.drawArraysRequiresIndicesTypeReset=new Y(e)}dispose(){this.doublePrecisionRequiresObfuscation.dispose(),this.svgPremultipliesAlpha.dispose(),this.floatBufferBlend.dispose(),this.drawArraysRequiresIndicesTypeReset.dispose()}}var Q=o(54949);class at{constructor(e,s){this._gl=e,this._compressedTextureETC=null,this._compressedTextureS3TC=null,this._textureFilterAnisotropic=null,this._colorBufferFloat=null,this._loseContext=null,this._textureNorm16=null,this._textureFloatLinear=null,this._disabledExtensions=s.disabledExtensions||{},this._debugWebGLExtensions=s.debugWebGLExtensions||{}}get compressedTextureETC(){return this._compressedTextureETC??=function J(t,e){if(e.compressedTextureETC)return null;const s=t.getExtension("WEBGL_compressed_texture_etc");return s?{COMPRESSED_R11_EAC:s.COMPRESSED_R11_EAC,COMPRESSED_SIGNED_R11_EAC:s.COMPRESSED_SIGNED_R11_EAC,COMPRESSED_RG11_EAC:s.COMPRESSED_RG11_EAC,COMPRESSED_SIGNED_RG11_EAC:s.COMPRESSED_SIGNED_RG11_EAC,COMPRESSED_RGB8_ETC2:s.COMPRESSED_RGB8_ETC2,COMPRESSED_SRGB8_ETC2:s.COMPRESSED_SRGB8_ETC2,COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:s.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:s.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2,COMPRESSED_RGBA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC,COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC}:null}(this._gl,this._disabledExtensions),this._compressedTextureETC}get compressedTextureS3TC(){return this._compressedTextureS3TC??=function tt(t,e){if(e.compressedTextureS3TC)return null;const s=t.getExtension("WEBGL_compressed_texture_s3tc");return s?{COMPRESSED_RGB_S3TC_DXT1:s.COMPRESSED_RGB_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT1:s.COMPRESSED_RGBA_S3TC_DXT1_EXT,COMPRESSED_RGBA_S3TC_DXT3:s.COMPRESSED_RGBA_S3TC_DXT3_EXT,COMPRESSED_RGBA_S3TC_DXT5:s.COMPRESSED_RGBA_S3TC_DXT5_EXT}:null}(this._gl,this._disabledExtensions),this._compressedTextureS3TC}get textureFilterAnisotropic(){return this._textureFilterAnisotropic??=function et(t,e){if(e.textureFilterAnisotropic)return null;const s=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");return s?{MAX_TEXTURE_MAX_ANISOTROPY:s.MAX_TEXTURE_MAX_ANISOTROPY_EXT,TEXTURE_MAX_ANISOTROPY:s.TEXTURE_MAX_ANISOTROPY_EXT}:null}(this._gl,this._disabledExtensions),this._textureFilterAnisotropic}get disjointTimerQuery(){return this._disjointTimerQuery??=(0,Q._R)(this._gl,this._disabledExtensions),this._disjointTimerQuery}get colorBufferFloat(){return this._colorBufferFloat??=function st(t,e){const s=!e.colorBufferHalfFloat&&t.getExtension("EXT_color_buffer_half_float")||!e.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),i=!e.colorBufferFloat&&t.getExtension("EXT_color_buffer_float"),n=!e.floatBlend&&!e.colorBufferFloat&&t.getExtension("EXT_float_blend");return s||i||n?{textureFloat:!!i,textureHalfFloat:!!s,floatBlend:!!n,R16F:t.R16F,RG16F:t.RG16F,RGBA16F:t.RGBA16F,R32F:t.R32F,RG32F:t.RG32F,RGBA32F:t.RGBA32F,R11F_G11F_B10F:t.R11F_G11F_B10F,RGB16F:t.RGB16F}:null}(this._gl,this._disabledExtensions),this._colorBufferFloat}get loseContext(){return this._loseContext??=function nt(t,e){const s=e.loseContext&&t.getExtension("WEBGL_lose_context");return s?{loseRenderingContext:()=>s.loseContext()}:null}(this._gl,this._debugWebGLExtensions),this._loseContext}get textureNorm16(){return this._textureNorm16??=function it(t,e){if(e.textureNorm16)return null;const s=t.getExtension("EXT_texture_norm16");return s?{R16:s.R16_EXT,RG16:s.RG16_EXT,RGB16:s.RGB16_EXT,RGBA16:s.RGBA16_EXT,R16_SNORM:s.R16_SNORM_EXT,RG16_SNORM:s.RG16_SNORM_EXT,RGB16_SNORM:s.RGB16_SNORM_EXT,RGBA16_SNORM:s.RGBA16_SNORM_EXT}:null}(this._gl,this._disabledExtensions),this._textureNorm16}get textureFloatLinear(){return this._textureFloatLinear??=function rt(t,e,s,i,n){if(i)return!0;if(e[s])return!1;for(const a of n)if(t.getExtension(a))return!0;return!1}(this._gl,this._disabledExtensions,"textureFloatLinear",!1,["OES_texture_float_linear"]),this._textureFloatLinear}enable(e){return this[e]}}let lt=class{constructor(t,e){this.gl=t,this.instanceCounter=new A,this.programCache=new S.J(this),this._transformFeedbackRequestInfo=null,this._state=new h,this._numOfDrawCalls=0,this._numOfTriangles=0,this._loadExtensions(),this.configure(e)}configure(t){this._capabilities=new at(this.gl,t),this._parameters=new x(this.gl,this._capabilities,t),V.g.TEXTURE_UNIT_FOR_UPDATES=this._parameters.maxTextureImageUnits-1;const e=this.gl.getParameter(this.gl.VIEWPORT);this._state=new h,this._state.viewport={x:e[0],y:e[1],width:e[2],height:e[3]},this._stateTracker=new N.Ms({setBlending:s=>{if(s){this.setBlendingEnabled(!0),this.setBlendEquationSeparate(s.opRgb,s.opAlpha),this.setBlendFunctionSeparate(s.srcRgb,s.dstRgb,s.srcAlpha,s.dstAlpha);const i=s.color;this.setBlendColor(i.r,i.g,i.b,i.a)}else this.setBlendingEnabled(!1)},setCulling:s=>{s?(this.setFaceCullingEnabled(!0),this.setCullFace(s.face),this.setFrontFace(s.mode)):this.setFaceCullingEnabled(!1)},setPolygonOffset:s=>{s?(this.setPolygonOffsetFillEnabled(!0),this.setPolygonOffset(s.factor,s.units)):this.setPolygonOffsetFillEnabled(!1)},setDepthTest:s=>{s?(this.setDepthTestEnabled(!0),this.setDepthFunction(s.func)):this.setDepthTestEnabled(!1)},setStencilTest:s=>{if(s){this.setStencilTestEnabled(!0);const i=s.function;this.setStencilFunction(i.func,i.ref,i.mask);const n=s.operation;this.setStencilOp(n.fail,n.zFail,n.zPass)}else this.setStencilTestEnabled(!1)},setDepthWrite:s=>{s?(this.setDepthWriteEnabled(!0),this.setDepthRange(s.zNear,s.zFar)):this.setDepthWriteEnabled(!1)},setColorWrite:s=>{s?this.setColorMask(s.r,s.g,s.b,s.a):this.setColorMask(!1,!1,!1,!1)},setStencilWrite:s=>{this.setStencilWriteMask(s?s.mask:0)},setDrawBuffers:s=>{if(s)this.setDrawBuffers(s.buffers);else{const{drawFramebuffer:i}=this._state;this.setDrawBuffers(null===i?[r.Hr.BACK]:0===i.colorAttachments.length?[r.Hr.NONE]:[r.Nm.COLOR_ATTACHMENT0])}}}),this.enforceState(),(0,T.WD)(this._driverTest),this._driverTest=new q(this)}dispose(){(0,T.WD)(this._driverTest),this.programCache.dispose(),this.bindVAO(null),this.unbindBuffer(r.NZ.ARRAY_BUFFER),this.unbindBuffer(r.NZ.ELEMENT_ARRAY_BUFFER),this.unbindBuffer(r.NZ.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(r.NZ.PIXEL_PACK_BUFFER),this.unbindBuffer(r.NZ.PIXEL_UNPACK_BUFFER),this.unbindBuffer(r.NZ.COPY_READ_BUFFER),this.unbindBuffer(r.NZ.COPY_WRITE_BUFFER),this._state.textureUnitMap.length=0,(0,f.en)()&&console.log(this.instanceCounter.resourceInformation)}get driverTest(){return this._driverTest}get contextAttributes(){return this.gl.getContextAttributes()}get parameters(){return this._parameters}setPipelineState(t){this._stateTracker.setPipeline(t)}setBlendingEnabled(t){this._state.blend!==t&&(!0===t?this.gl.enable(this.gl.BLEND):this.gl.disable(this.gl.BLEND),this._state.blend=t,this._stateTracker.invalidateBlending())}externalProgramUpdate(){this._state.program?.stop(),this._state.program=null}externalTextureUnitUpdate(t,e){for(let s=0;s<t.length;++s)this._state.textureUnitMap[t[s]]=null;e>=0&&(this._state.activeTexture=e)}externalVertexArrayObjectUpdate(){this.gl.bindVertexArray(null),this._state.vertexArrayObject=null,this._state.vertexBuffer=null,this._state.indexBuffer=null}externalVertexBufferUpdate(){this._state.vertexBuffer=null}externalIndexBufferUpdate(){this._state.indexBuffer=null}setBlendColor(t,e,s,i){t===this._state.blendColor.r&&e===this._state.blendColor.g&&s===this._state.blendColor.b&&i===this._state.blendColor.a||(this.gl.blendColor(t,e,s,i),this._state.blendColor.r=t,this._state.blendColor.g=e,this._state.blendColor.b=s,this._state.blendColor.a=i,this._stateTracker.invalidateBlending())}setBlendFunction(t,e){t===this._state.blendFunction.srcRGB&&e===this._state.blendFunction.dstRGB||(this.gl.blendFunc(t,e),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=t,this._state.blendFunction.dstRGB=e,this._state.blendFunction.dstAlpha=e,this._stateTracker.invalidateBlending())}setBlendFunctionSeparate(t,e,s,i){this._state.blendFunction.srcRGB===t&&this._state.blendFunction.srcAlpha===s&&this._state.blendFunction.dstRGB===e&&this._state.blendFunction.dstAlpha===i||(this.gl.blendFuncSeparate(t,e,s,i),this._state.blendFunction.srcRGB=t,this._state.blendFunction.srcAlpha=s,this._state.blendFunction.dstRGB=e,this._state.blendFunction.dstAlpha=i,this._stateTracker.invalidateBlending())}setBlendEquation(t){this._state.blendEquation.mode!==t&&(this.gl.blendEquation(t),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=t,this._stateTracker.invalidateBlending())}setBlendEquationSeparate(t,e){this._state.blendEquation.mode===t&&this._state.blendEquation.modeAlpha===e||(this.gl.blendEquationSeparate(t,e),this._state.blendEquation.mode=t,this._state.blendEquation.modeAlpha=e,this._stateTracker.invalidateBlending())}setColorMask(t,e,s,i){this._state.colorMask.r===t&&this._state.colorMask.g===e&&this._state.colorMask.b===s&&this._state.colorMask.a===i||(this.gl.colorMask(t,e,s,i),this._state.colorMask.r=t,this._state.colorMask.g=e,this._state.colorMask.b=s,this._state.colorMask.a=i,this._stateTracker.invalidateColorWrite())}setClearColor(t,e,s,i){this._state.clearColor.r===t&&this._state.clearColor.g===e&&this._state.clearColor.b===s&&this._state.clearColor.a===i||(this.gl.clearColor(t,e,s,i),this._state.clearColor.r=t,this._state.clearColor.g=e,this._state.clearColor.b=s,this._state.clearColor.a=i)}setFaceCullingEnabled(t){this._state.faceCulling!==t&&(!0===t?this.gl.enable(this.gl.CULL_FACE):this.gl.disable(this.gl.CULL_FACE),this._state.faceCulling=t,this._stateTracker.invalidateCulling())}setPolygonOffsetFillEnabled(t){this._state.polygonOffsetFill!==t&&(!0===t?this.gl.enable(this.gl.POLYGON_OFFSET_FILL):this.gl.disable(this.gl.POLYGON_OFFSET_FILL),this._state.polygonOffsetFill=t,this._stateTracker.invalidatePolygonOffset())}setPolygonOffset(t,e){this._state.polygonOffset[0]===t&&this._state.polygonOffset[1]===e||(this._state.polygonOffset[0]=t,this._state.polygonOffset[1]=e,this.gl.polygonOffset(t,e),this._stateTracker.invalidatePolygonOffset())}setCullFace(t){this._state.cullFace!==t&&(this.gl.cullFace(t),this._state.cullFace=t,this._stateTracker.invalidateCulling())}setFrontFace(t){this._state.frontFace!==t&&(this.gl.frontFace(t),this._state.frontFace=t,this._stateTracker.invalidateCulling())}setScissorTestEnabled(t){this._state.scissorTest!==t&&(!0===t?this.gl.enable(this.gl.SCISSOR_TEST):this.gl.disable(this.gl.SCISSOR_TEST),this._state.scissorTest=t)}setScissorRect(t,e,s,i){this._state.scissorRect.x===t&&this._state.scissorRect.y===e&&this._state.scissorRect.width===s&&this._state.scissorRect.height===i||(this.gl.scissor(t,e,s,i),this._state.scissorRect.x=t,this._state.scissorRect.y=e,this._state.scissorRect.width=s,this._state.scissorRect.height=i)}setDepthTestEnabled(t){this._state.depthTest!==t&&(!0===t?this.gl.enable(this.gl.DEPTH_TEST):this.gl.disable(this.gl.DEPTH_TEST),this._state.depthTest=t,this._stateTracker.invalidateDepthTest())}setClearDepth(t){this._state.clearDepth!==t&&(this.gl.clearDepth(t),this._state.clearDepth=t)}setDepthFunction(t){this._state.depthFunction!==t&&(this.gl.depthFunc(t),this._state.depthFunction=t,this._stateTracker.invalidateDepthTest())}setDepthWriteEnabled(t){this._state.depthWrite!==t&&(this.gl.depthMask(t),this._state.depthWrite=t,this._stateTracker.invalidateDepthWrite())}setDepthRange(t,e){this._state.depthRange.zNear===t&&this._state.depthRange.zFar===e||(this.gl.depthRange(t,e),this._state.depthRange.zNear=t,this._state.depthRange.zFar=e,this._stateTracker.invalidateDepthWrite())}setStencilTestEnabled(t){this._state.stencilTest!==t&&(!0===t?this.gl.enable(this.gl.STENCIL_TEST):this.gl.disable(this.gl.STENCIL_TEST),this._state.stencilTest=t,this._stateTracker.invalidateStencilTest())}setClearStencil(t){t!==this._state.clearStencil&&(this.gl.clearStencil(t),this._state.clearStencil=t)}setStencilFunction(t,e,s){this._state.stencilFunction.func===t&&this._state.stencilFunction.ref===e&&this._state.stencilFunction.mask===s||(this.gl.stencilFunc(t,e,s),this._state.stencilFunction.face=r.Y7.FRONT_AND_BACK,this._state.stencilFunction.func=t,this._state.stencilFunction.ref=e,this._state.stencilFunction.mask=s,this._stateTracker.invalidateStencilTest())}setStencilFunctionSeparate(t,e,s,i){this._state.stencilFunction.face===t&&this._state.stencilFunction.func===e&&this._state.stencilFunction.ref===s&&this._state.stencilFunction.mask===i||(this.gl.stencilFuncSeparate(t,e,s,i),this._state.stencilFunction.face=t,this._state.stencilFunction.func=e,this._state.stencilFunction.ref=s,this._state.stencilFunction.mask=i,this._stateTracker.invalidateStencilTest())}setStencilWriteMask(t){this._state.stencilWriteMask!==t&&(this.gl.stencilMask(t),this._state.stencilWriteMask=t,this._stateTracker.invalidateStencilWrite())}setStencilOp(t,e,s){this._state.stencilOperation.face===r.Y7.FRONT_AND_BACK&&this._state.stencilOperation.fail===t&&this._state.stencilOperation.zFail===e&&this._state.stencilOperation.zPass===s||(this.gl.stencilOp(t,e,s),this._state.stencilOperation.face=r.Y7.FRONT_AND_BACK,this._state.stencilOperation.fail=t,this._state.stencilOperation.zFail=e,this._state.stencilOperation.zPass=s,this._stateTracker.invalidateStencilTest())}setStencilOpSeparate(t,e,s,i){this._state.stencilOperation.face===t&&this._state.stencilOperation.fail===e&&this._state.stencilOperation.zFail===s&&this._state.stencilOperation.zPass===i||(this.gl.stencilOpSeparate(t,e,s,i),this._state.stencilOperation.face=t,this._state.stencilOperation.fail=e,this._state.stencilOperation.zFail=s,this._state.stencilOperation.zPass=i,this._stateTracker.invalidateStencilTest())}setActiveTexture(t,e=!1){const s=this._state.activeTexture;return t>=0&&(e||t!==this._state.activeTexture)&&(this.gl.activeTexture(r.xM+t),this._state.activeTexture=t),s}setDrawBuffers(t){const{drawFramebuffer:e}=this._state,s=null===e,i=s?this._state.drawBuffers.defaultFramebuffer:this._state.drawBuffers.fbos.get(e);if(i?.length!==t.length||!i.every((n,a)=>n===t[a]))if(t.length>this.parameters.maxDrawBuffers)console.error("Setting more active draw buffers than GL.MAX_DRAW_BUFFERS allows.");else{if(s){if(t.length>1)return void console.error("The default framebuffer can only have one active draw buffer.");if(t[0]!==r.Hr.BACK&&t[0]!==r.Hr.NONE)return void console.error("The default framebuffer can only use the constants GL.BACK or GL.NONE as draw buffers.")}s||!t.includes(r.Hr.BACK)?(this.gl.drawBuffers(t),s?this._state.drawBuffers.defaultFramebuffer=t:this._state.drawBuffers.fbos.set(e,t),this._stateTracker.invalidateDrawBuffers()):console.error("A framebuffer object can only use the constants GL.COLOR_ATTACHMENTi or GL.NONE as draw buffers.")}}clear(t,e=255){if(t){if(t&r.hn.COLOR_BUFFER_BIT){const s=this._state.drawFramebuffer?.colorAttachments;s&&this.setDrawBuffers(s),this.setColorMask(!0,!0,!0,!0)}t&r.hn.DEPTH_BUFFER_BIT&&this.setDepthWriteEnabled(!0),t&r.hn.STENCIL_BUFFER_BIT&&this.setStencilWriteMask(e),this.gl.clear(t)}}clearFramebuffer(t,e=!1,s=!1){let i=0;if(t){const a=Math.max(1e-13,t[3]);this.setClearColor(t[0],t[1],t[2],a),i|=r.hn.COLOR_BUFFER_BIT}e&&(i|=r.hn.DEPTH_BUFFER_BIT),!1===s?s=0:(!0===s&&(s=255),i|=r.hn.STENCIL_BUFFER_BIT),i&&this.clear(i,s)}drawArrays(t,e,s){if(this._transformFeedbackRequestInfo){if(t!==this._transformFeedbackRequestInfo.primitiveType)throw new Error("DrawArrays called during transform feedback, but primitiveType does not match that of the current transform feedback request");if(null==this._state.program?.hasTransformFeedbackVaryings)throw new Error("DrawArrays called during transform feedback, but the shader program was not linked with a transform feedback varying")}if((0,f.en)()){this._numOfDrawCalls++,this._numOfTriangles+=Z(t,s);const i=this._state.textureUnitMap;for(let n=0;n<i.length;n++){const a=i[n];if(null!=a&&a===this._state.drawFramebuffer?.colorTexture)throw new Error(`Detected readWrite. Texture already bound at index ${n}`)}}this.gl.drawArrays(t,e,s),(0,f.Y2)(this.gl)}drawArraysInstanced(t,e,s,i){this.gl.drawArraysInstanced(t,e,s,i),(0,f.Y2)(this.gl)}drawElements(t,e,s,i){if(this._transformFeedbackRequestInfo)throw new Error("Cannot called drawElements during a transform feedback request");if((0,f.en)()&&(this._numOfDrawCalls++,this._numOfTriangles+=Z(t,e)),this.gl.drawElements(t,e,s,i),(0,f.en)()){const n=(0,H.WH)(this);if(n){const a=this.getBoundVAO(),u=a?.indexBuffer,R=a?.vertexBuffers,g={indexBuffer:u,vertexBuffers:R},E={mode:t,count:e,type:s,offset:i},p=u?.size??0,F=i+e;console.error(`drawElements: ${n}${p<F?`. Buffer is too small. Attempted to draw index ${F} of ${p}`:""}`,{args:E,vao:g})}}}logInfo(){(0,f.en)()&&console.log(`DrawCalls: ${this._numOfDrawCalls}, Triangles: ${this._numOfTriangles}`)}resetInfo(){(0,f.en)()&&(this._numOfDrawCalls=0,this._numOfTriangles=0)}get capabilities(){return this._capabilities}setViewport(t,e,s,i){s=Math.max(Math.round(s),1),i=Math.max(Math.round(i),1);const n=this._state.viewport;n.x===t&&n.y===e&&n.width===s&&n.height===i||(n.x=t,n.y=e,n.width=s,n.height=i,this.gl.viewport(t,e,s,i))}setViewport4fv(t){this.setViewport(t[0],t[1],t[2],t[3])}restoreViewport({x:t,y:e,width:s,height:i}){this.setViewport(t,e,s,i)}getViewport(){const t=this._state.viewport;return{x:t.x,y:t.y,width:t.width,height:t.height}}useProgram(t){this._state.program!==t&&(this._state.program?.stop(),this._state.program=t,this.gl.useProgram(t?.glName??null))}bindTexture(t,e,s=!1){(e>=this.parameters.maxTextureImageUnits||e<0)&&console.error("Input texture unit is out of range of available units!");const i=this._state.textureUnitMap[e];return null==t?.glName?(null!=i&&(this.setActiveTexture(e,s),this.gl.bindTexture(i.descriptor.target,null)),this._state.textureUnitMap[e]=null,i):s||i!==t?(this.setActiveTexture(e,s),this.gl.bindTexture(t.descriptor.target,t.glName),t.applyChanges(),this._state.textureUnitMap[e]=t,i):(t.isDirty&&(this.setActiveTexture(e,s),t.applyChanges()),i)}unbindTexture(t){if(null!=t)for(let e=0;e<this.parameters.maxTextureImageUnits;e++)this._state.textureUnitMap[e]===t&&(this.bindTexture(null,e),this._state.textureUnitMap[e]=null)}bindFramebuffer(t,e=!1){if(e||this._state.readFramebuffer!==t||this._state.drawFramebuffer!==t){if(this._stateTracker.invalidateDrawBuffers(),null==t)return this.gl.bindFramebuffer(r.R.FRAMEBUFFER,null),void(this._state.readFramebuffer=this._state.drawFramebuffer=null);t.initializeAndBind(r.R.FRAMEBUFFER),this._state.readFramebuffer=t,this._state.drawFramebuffer=t}}bindFramebufferSeparate(t,e,s=!1){const i=e===r.R.READ_FRAMEBUFFER;(s||(i?this._state.readFramebuffer:this._state.drawFramebuffer)!==t)&&(null==t?this.gl.bindFramebuffer(e,null):t.initializeAndBind(e),i?this._state.readFramebuffer=t??null:(this._stateTracker.invalidateDrawBuffers(),this._state.drawFramebuffer=t??null))}blitFramebuffer(t,e,s=0,i=0,n=t.width,a=t.height,u=0,R=0,g=e.width,E=e.height,p=r.hn.COLOR_BUFFER_BIT,F=r.Cj.NEAREST){this.bindFramebufferSeparate(t,r.R.READ_FRAMEBUFFER),this.bindFramebufferSeparate(e,r.R.DRAW_FRAMEBUFFER),this.gl.blitFramebuffer(s,i,n,a,u,R,g,E,p,F)}bindBuffer(t,e){if(t)switch(e??=t.bufferType,e){case r.NZ.ARRAY_BUFFER:this._state.vertexBuffer=b(this.gl,t,e,this._state.vertexBuffer);break;case r.NZ.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=b(this.gl,t,e,this._state.indexBuffer);break;case r.NZ.UNIFORM_BUFFER:this._state.uniformBuffer=b(this.gl,t,e,this._state.uniformBuffer);break;case r.NZ.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=b(this.gl,t,e,this._state.pixelPackBuffer);break;case r.NZ.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=b(this.gl,t,e,this._state.pixelUnpackBuffer);break;case r.NZ.COPY_READ_BUFFER:this._state.copyReadBuffer=b(this.gl,t,e,this._state.copyReadBuffer);break;case r.NZ.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=b(this.gl,t,e,this._state.copyWriteBuffer);break;case r.NZ.TRANSFORM_FEEDBACK_BUFFER:this._state.transformFeedbackBuffer=b(this.gl,t,e,this._state.transformFeedbackBuffer)}}bindRenderbuffer(t){const e=this.gl;t||(e.bindRenderbuffer(e.RENDERBUFFER,null),this._state.renderbuffer=null),this._state.renderbuffer!==t&&(e.bindRenderbuffer(e.RENDERBUFFER,t.glName),this._state.renderbuffer=t)}_getBufferBinding(t,e){if(e>=this.parameters.maxUniformBufferBindings||e<0)return console.error("Uniform buffer binding point is out of range!"),null;const s=t===r.NZ.UNIFORM_BUFFER?this._state.uniformBufferBindingPoints:this._state.transformBufferBindingPoints;let i=s[e];return null==i&&(i={buffer:null,offset:0,size:0},s[e]=i),i}bindBufferBase(t,e,s){const i=this._getBufferBinding(t,e);null!=i&&(i.buffer===s&&0===i.offset&&0===i.size||(this.gl.bindBufferBase(t,e,s?s.glName:null),i.buffer=s,i.offset=0,i.size=0))}bindBufferRange(t,e,s,i,n){const a=this._getBufferBinding(t,e);null!=a&&(a.buffer===s&&a.offset===i&&a.size===n||(i%this._parameters.uniformBufferOffsetAlignment==0?(this.gl.bindBufferRange(t,e,s.glName,i,n),a.buffer=s,a.offset=i,a.size=n):console.error("Uniform buffer binding offset is not a multiple of the context offset alignment")))}bindUBO(t,e,s,i){null!=e?((0,f.en)()&&(i??e.byteLength)>this._parameters.maxUniformBlockSize&&console.error("Attempting to bind more data than the maximum uniform block size"),e.initialize(),void 0!==s&&void 0!==i?this.bindBufferRange(r.NZ.UNIFORM_BUFFER,t,e.buffer,s,i):this.bindBufferBase(r.NZ.UNIFORM_BUFFER,t,e.buffer)):this.bindBufferBase(r.NZ.UNIFORM_BUFFER,t,null)}unbindUBO(t){for(let e=0,s=this._state.uniformBufferBindingPoints.length;e<s;e++){const i=this._state.uniformBufferBindingPoints[e];null!=i&&i.buffer===t.buffer&&this.bindBufferBase(r.NZ.UNIFORM_BUFFER,e,null)}}unbindBuffer(t){switch(t){case r.NZ.ARRAY_BUFFER:this._state.vertexBuffer=b(this.gl,null,t,this._state.vertexBuffer);break;case r.NZ.ELEMENT_ARRAY_BUFFER:this._state.indexBuffer=b(this.gl,null,t,this._state.indexBuffer);break;case r.NZ.UNIFORM_BUFFER:this._state.uniformBuffer=b(this.gl,null,t,this._state.uniformBuffer);break;case r.NZ.PIXEL_PACK_BUFFER:this._state.pixelPackBuffer=b(this.gl,null,t,this._state.pixelPackBuffer);break;case r.NZ.PIXEL_UNPACK_BUFFER:this._state.pixelUnpackBuffer=b(this.gl,null,t,this._state.pixelUnpackBuffer);break;case r.NZ.COPY_READ_BUFFER:this._state.copyReadBuffer=b(this.gl,null,t,this._state.copyReadBuffer);break;case r.NZ.COPY_WRITE_BUFFER:this._state.copyWriteBuffer=b(this.gl,null,t,this._state.copyWriteBuffer)}}bindVAO(t=null){null!=t?this._state.vertexArrayObject!==t&&(t.bind(),this._state.vertexArrayObject=t):this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null)}bindTransformFeedback(t){const{gl:e}=this;e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,t.glName)}beginTransformFeedback(t,e){if(this._transformFeedbackRequestInfo)throw new Error("Already in a transform feedback request");const{gl:s}=this;s.bindTransformFeedback(s.TRANSFORM_FEEDBACK,t.glName),s.beginTransformFeedback(e),this._transformFeedbackRequestInfo={primitiveType:e}}endTransformFeedback(){if(!this._transformFeedbackRequestInfo)throw new Error("Not in a transform feedback request");const{gl:t}=this;t.endTransformFeedback(),t.bindTransformFeedback(t.TRANSFORM_FEEDBACK,null),this._transformFeedbackRequestInfo=null}clientWaitAsync(t=(0,c.l5)(10)){var e=this;return(0,m.A)(function*(){const{gl:s}=e,i=s.fenceSync(r.tx.SYNC_GPU_COMMANDS_COMPLETE,0);if(!i)throw new Error("Client wait failed, could not create sync object");let n;e.instanceCounter.increment(r.vt.Sync,i),s.flush();do{yield(0,d.Pl)(t),n=s.clientWaitSync(i,0,0)}while(n===r.sS.TIMEOUT_EXPIRED);if(e.instanceCounter.decrement(r.vt.Sync,i),s.deleteSync(i),n===r.sS.WAIT_FAILED)throw new Error("Client wait failed")})()}getBoundFramebufferObject(t=r.R.FRAMEBUFFER){return t===r.R.READ_FRAMEBUFFER?this._state.readFramebuffer:this._state.drawFramebuffer}getBoundVAO(){return this._state.vertexArrayObject}resetState(){this.useProgram(null),this.bindVAO(null),this.bindFramebuffer(null,!0),this.unbindBuffer(r.NZ.ARRAY_BUFFER),this.unbindBuffer(r.NZ.ELEMENT_ARRAY_BUFFER),this.unbindBuffer(r.NZ.UNIFORM_BUFFER),this._state.uniformBufferBindingPoints.length=0,this.unbindBuffer(r.NZ.PIXEL_PACK_BUFFER),this.unbindBuffer(r.NZ.PIXEL_UNPACK_BUFFER),this.unbindBuffer(r.NZ.COPY_READ_BUFFER),this.unbindBuffer(r.NZ.COPY_WRITE_BUFFER);for(let t=0;t<this.parameters.maxTextureImageUnits;++t)this.bindTexture(null,t);this.setBlendingEnabled(!1),this.setBlendFunction(r.dn.ONE,r.dn.ZERO),this.setBlendEquation(r.Tb.ADD),this.setBlendColor(0,0,0,0),this.setFaceCullingEnabled(!1),this.setCullFace(r.Y7.BACK),this.setFrontFace(r.Ac.CCW),this.setPolygonOffsetFillEnabled(!1),this.setPolygonOffset(0,0),this.setScissorTestEnabled(!1),this.setScissorRect(0,0,this.gl.canvas.width,this.gl.canvas.height),this.setDepthTestEnabled(!1),this.setDepthFunction(r.MT.LESS),this.setDepthRange(0,1),this.setStencilTestEnabled(!1),this.setStencilFunction(r.MT.ALWAYS,0,0),this.setStencilOp(r.eA.KEEP,r.eA.KEEP,r.eA.KEEP),this.setClearColor(0,0,0,0),this.setClearDepth(1),this.setClearStencil(0),this.setColorMask(!0,!0,!0,!0),this.setStencilWriteMask(4294967295),this.setDepthWriteEnabled(!0),this.setDrawBuffers([r.Hr.BACK]),this.setViewport(0,0,this.gl.canvas.width,this.gl.canvas.height)}enforceState(){const{gl:t}=this;t.bindVertexArray(null);for(let s=0;s<this.parameters.maxVertexAttributes;s++)t.disableVertexAttribArray(s);this._state.vertexBuffer?t.bindBuffer(this._state.vertexBuffer.bufferType,this._state.vertexBuffer.glName):t.bindBuffer(r.NZ.ARRAY_BUFFER,null),this._state.indexBuffer?t.bindBuffer(this._state.indexBuffer.bufferType,this._state.indexBuffer.glName):t.bindBuffer(r.NZ.ELEMENT_ARRAY_BUFFER,null),this._state.uniformBuffer?t.bindBuffer(this._state.uniformBuffer.bufferType,this._state.uniformBuffer.glName):t.bindBuffer(r.NZ.UNIFORM_BUFFER,null);for(let s=0;s<this._parameters.maxUniformBufferBindings;s++){const i=this._state.uniformBufferBindingPoints[s];if(null!=i){const{buffer:n,offset:a,size:u}=i;null!==n?0===a&&0===u?t.bindBufferBase(r.NZ.UNIFORM_BUFFER,s,n.glName):t.bindBufferRange(r.NZ.UNIFORM_BUFFER,s,n.glName,a,u):t.bindBufferBase(r.NZ.UNIFORM_BUFFER,s,null)}}if(this._state.pixelPackBuffer?t.bindBuffer(this._state.pixelPackBuffer.bufferType,this._state.pixelPackBuffer.glName):t.bindBuffer(r.NZ.PIXEL_PACK_BUFFER,null),this._state.pixelUnpackBuffer?t.bindBuffer(this._state.pixelUnpackBuffer.bufferType,this._state.pixelUnpackBuffer.glName):t.bindBuffer(r.NZ.PIXEL_UNPACK_BUFFER,null),this._state.copyReadBuffer?t.bindBuffer(this._state.copyReadBuffer.bufferType,this._state.copyReadBuffer.glName):t.bindBuffer(r.NZ.COPY_READ_BUFFER,null),this._state.copyWriteBuffer?t.bindBuffer(this._state.copyWriteBuffer.bufferType,this._state.copyWriteBuffer.glName):t.bindBuffer(r.NZ.COPY_WRITE_BUFFER,null),t.bindFramebuffer(r.R.READ_FRAMEBUFFER,null),t.readBuffer(t.BACK),this._state.readFramebuffer&&(t.bindFramebuffer(r.R.READ_FRAMEBUFFER,this._state.readFramebuffer.glName),t.readBuffer(r.Nm.COLOR_ATTACHMENT0)),t.bindFramebuffer(r.R.DRAW_FRAMEBUFFER,this._state.drawFramebuffer?.glName??null),null===this._state.drawFramebuffer)t.drawBuffers(this._state.drawBuffers.defaultFramebuffer??[r.Hr.BACK]);else{const s=this._state.drawBuffers.fbos.get(this._state.drawFramebuffer);t.drawBuffers(s??[r.Nm.COLOR_ATTACHMENT0])}if(this._state.vertexArrayObject){const s=this._state.vertexArrayObject;this._state.vertexArrayObject&&(this._state.vertexArrayObject.unbind(),this._state.vertexArrayObject=null),this.bindVAO(s)}t.useProgram(this._state.program?.glName??null),t.blendColor(this._state.blendColor.r,this._state.blendColor.g,this._state.blendColor.b,this._state.blendColor.a),t.bindRenderbuffer(t.RENDERBUFFER,this._state.renderbuffer?.glName??null),!0===this._state.blend?t.enable(this.gl.BLEND):t.disable(this.gl.BLEND),t.blendEquationSeparate(this._state.blendEquation.mode,this._state.blendEquation.modeAlpha),t.blendFuncSeparate(this._state.blendFunction.srcRGB,this._state.blendFunction.dstRGB,this._state.blendFunction.srcAlpha,this._state.blendFunction.dstAlpha),t.clearColor(this._state.clearColor.r,this._state.clearColor.g,this._state.clearColor.b,this._state.clearColor.a),t.clearDepth(this._state.clearDepth),t.clearStencil(this._state.clearStencil),t.colorMask(this._state.colorMask.r,this._state.colorMask.g,this._state.colorMask.b,this._state.colorMask.a),t.cullFace(this._state.cullFace),t.depthFunc(this._state.depthFunction),t.depthRange(this._state.depthRange.zNear,this._state.depthRange.zFar),!0===this._state.depthTest?t.enable(t.DEPTH_TEST):t.disable(t.DEPTH_TEST),t.depthMask(this._state.depthWrite),t.frontFace(this._state.frontFace),t.lineWidth(1),!0===this._state.faceCulling?t.enable(t.CULL_FACE):t.disable(t.CULL_FACE),t.polygonOffset(this._state.polygonOffset[0],this._state.polygonOffset[1]),!0===this._state.polygonOffsetFill?t.enable(t.POLYGON_OFFSET_FILL):t.disable(t.POLYGON_OFFSET_FILL),t.scissor(this._state.scissorRect.x,this._state.scissorRect.y,this._state.scissorRect.width,this._state.scissorRect.height),!0===this._state.scissorTest?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST),t.stencilFunc(this._state.stencilFunction.func,this._state.stencilFunction.ref,this._state.stencilFunction.mask),t.stencilOpSeparate(this._state.stencilOperation.face,this._state.stencilOperation.fail,this._state.stencilOperation.zFail,this._state.stencilOperation.zPass),!0===this._state.stencilTest?t.enable(t.STENCIL_TEST):t.disable(t.STENCIL_TEST),t.stencilMask(this._state.stencilWriteMask);for(let s=0;s<this.parameters.maxTextureImageUnits;s++){t.activeTexture(r.xM+s),t.bindTexture(r.Ap.TEXTURE_2D,null),t.bindTexture(r.Ap.TEXTURE_CUBE_MAP,null),t.bindTexture(r.Ap.TEXTURE_3D,null),t.bindTexture(r.Ap.TEXTURE_2D_ARRAY,null);const i=this._state.textureUnitMap[s];null!=i&&t.bindTexture(i.descriptor.target,i.glName)}t.activeTexture(r.xM+this._state.activeTexture);const e=this._state.viewport;t.viewport(e.x,e.y,e.width,e.height),this.resetInfo()}_loadExtensions(){this.gl.getExtension("KHR_parallel_shader_compile")}};function b(t,e,s,i){return e?i!==e&&t.bindBuffer(s,e.glName):t.bindBuffer(s,null),e}function Z(t,e){switch(t){case r.WR.POINTS:return 2*e;case r.WR.TRIANGLES:return e/3;case r.WR.TRIANGLE_STRIP:case r.WR.TRIANGLE_FAN:return e-2;default:return 0}}},45825:(C,B,o)=>{function m(r,h,_){for(let l=0;l<_;++l)h[2*l]=r[l],h[2*l+1]=r[l]-h[2*l]}function d(r,h){const _=r.length;for(let l=0;l<_;++l)f[0]=r[l],h[l]=f[0];return h}function c(r,h){const _=r.length;for(let l=0;l<_;++l)f[0]=r[l],f[1]=r[l]-f[0],h[l]=f[1];return h}o.d(B,{Zo:()=>d,jA:()=>c,jS:()=>m});const f=new Float32Array(2)},37488:(C,B,o)=>{function m(d){const{options:c,value:f}=d;return"number"==typeof c[f]}function T(d){let c="";for(const f in d){const r=d[f];if("boolean"==typeof r)r&&(c+=`#define ${f}\n`);else if("number"==typeof r)c+=`#define ${f} ${r.toFixed()}\n`;else if("object"==typeof r)if(m(r)){const{value:h,options:_,namespace:l}=r,A=l?`${l}_`:"";for(const x in _)c+=`#define ${A}${x} ${_[x].toFixed()}\n`;c+=`#define ${f} ${A}${h}\n`}else{const h=r.options;let _=0;for(const l in h)c+=`#define ${h[l]} ${(_++).toFixed()}\n`;c+=`#define ${f} ${h[r.value]}\n`}}return c}o.d(B,{I:()=>T})}}]);