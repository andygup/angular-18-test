"use strict";(self.webpackChunkangular_18_test=self.webpackChunkangular_18_test||[]).push([[8533],{18533:(j,m,t)=>{t.r(m),t.d(m,{synthesizeAssociationGeometries:()=>A});var h=t(10467),p=t(89563),i=t(68800),r=t(8189),y=t(71065),c=t(85211),d=(t(3248),t(35150),t(40707),t(76576)),f=t(56386);let e=class extends y.oY{constructor(o){super(o),this.maxGeometryCountExceeded=!1,this.associations=[]}};(0,r._)([(0,c.MZ)({type:Boolean,json:{write:!0}})],e.prototype,"maxGeometryCountExceeded",void 0),(0,r._)([(0,c.MZ)({type:[f.A],json:{write:!0}})],e.prototype,"associations",void 0),e=(0,r._)([(0,d.$)("esri.rest.networks.support.AssociationGeometriesResult")],e);const v=e;function A(o,n,s){return u.apply(this,arguments)}function u(){return(u=(0,h.A)(function*(o,n,s){const a=(0,i.Dl)(o),l={...n.toJSON(),f:"json"},g=(0,i.lF)({...a.query,...l});s?s.method="post":s={method:"post"};const x=(0,i.jV)(g,s);return(0,p.A)(`${a.path}/synthesizeAssociationGeometries`,x).then(S=>function G(o,n){const{data:s}=o,a=v.fromJSON(s);if(n)for(const l of a.associations)l.geometry.spatialReference=n.clone();return a}(S,n.outSpatialReference))})).apply(this,arguments)}}}]);