import{d as A}from"./chunk-BGBRD77V.js";import"./chunk-2T3SF7S4.js";import{n as _,v as x}from"./chunk-CMV4MTCP.js";import"./chunk-7QY3BMVN.js";import"./chunk-UQRO7IE7.js";import"./chunk-TNPL7MIN.js";import"./chunk-I3S324BU.js";import{c as f}from"./chunk-JVM3RNQL.js";import"./chunk-O5CPPU3T.js";import"./chunk-ZGGYJV33.js";import{a as P}from"./chunk-YNFZN34N.js";import"./chunk-DFTBSFIN.js";import"./chunk-CPGZIEVH.js";import"./chunk-L2DEVDHE.js";import"./chunk-RU7UW4IO.js";import"./chunk-2ETW6ZBA.js";import"./chunk-6K7P7RRW.js";import"./chunk-7LRMKXZV.js";import"./chunk-BCREO4Q5.js";import"./chunk-BNUHB4AP.js";import"./chunk-ZGLJFDS6.js";import"./chunk-RSDQHAJX.js";import"./chunk-UHTPPTOJ.js";import"./chunk-LP5GLSKB.js";import{b as m}from"./chunk-LTDZH3EN.js";import"./chunk-3SBMUUA6.js";import"./chunk-X7Z55FTO.js";import"./chunk-B66V4PSA.js";import"./chunk-A4HCVMB4.js";import"./chunk-AANS6QE5.js";import{B as p}from"./chunk-RMOOROEO.js";import"./chunk-ZP7G4HN4.js";import"./chunk-W3WDPWBE.js";import"./chunk-43GG6PFR.js";import"./chunk-MLSR6YE6.js";import"./chunk-JPDAKIWT.js";import"./chunk-D62JNIRP.js";import"./chunk-3DV77WOO.js";import"./chunk-NJG4JJ4L.js";import{a as g,b}from"./chunk-3T7TAUC2.js";var u=class{constructor(t,e,r){this.uid=t,this.geometry=e,this.attributes=r,this.visible=!0,this.objectId=null,this.centroid=null}};var h=class{constructor(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null}};function M(n,t,e,r){if(t?.size&&e!=null&&n)for(let s in n){if(!t.has(s))continue;let i=n[s];typeof i=="string"&&i.length>e&&(r(s),n[s]="")}}function C(n,t){return t}function y(n,t,e,r){switch(e){case 0:return l(n,t+r,0);case 1:return n.originPosition==="lowerLeft"?l(n,t+r,1):k(n,t+r,1)}}function Z(n,t,e,r){return e===2?l(n,t,2):y(n,t,e,r)}function R(n,t,e,r){return e===2?l(n,t,3):y(n,t,e,r)}function F(n,t,e,r){return e===3?l(n,t,3):Z(n,t,e,r)}function l({translate:n,scale:t},e,r){return n[r]+e*t[r]}function k({translate:n,scale:t},e,r){return n[r]-e*t[r]}var c=class{constructor(t){this._options=t,this.geometryTypes=["point","multipoint","polyline","polygon"],this._previousCoordinate=[0,0],this._transform=null,this._applyTransform=C,this._lengths=[],this._currentLengthIndex=0,this._toAddInCurrentPath=0,this._vertexDimension=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,this._attributesConstructor=class{},this._missingAttributes=[]}get missingAttributes(){return this._missingAttributes}createFeatureResult(){return new h}finishFeatureResult(t){if(this._options.applyTransform&&(t.transform=null),this._attributesConstructor=class{},this._coordinateBuffer=null,this._lengths.length=0,!t.hasZ)return;let e=P(t.geometryType,this._options.sourceSpatialReference,t.spatialReference);if(e!=null)for(let r of t.features)e(r.geometry)}createSpatialReference(){return new m}addField(t,e){t.fields.push(f.fromJSON(e));let r=t.fields.map(s=>s.name);this._attributesConstructor=function(){for(let s of r)this[s]=null}}addFeature(t,e){let r=this._options.maxStringAttributeLength,s=this._options.maxStringAttributeFields;M(e.attributes,s,r,i=>{let a=e.attributes[t.objectIdFieldName];a!=null&&this._missingAttributes.push({objectId:a,attribute:i})}),t.features.push(e)}addQueryGeometry(t,e){let{queryGeometry:r,queryGeometryType:s}=e,i=x(r.clone(),r,!1,!1,this._transform),a=_(i,s,!1,!1),o=null;switch(s){case"esriGeometryPoint":o="point";break;case"esriGeometryPolygon":o="polygon";break;case"esriGeometryPolyline":o="polyline";break;case"esriGeometryMultipoint":o="multipoint"}a.type=o,t.queryGeometryType=s,t.queryGeometry=a}prepareFeatures(t){switch(this._transform=t.transform??null,this._options.applyTransform&&t.transform&&(this._applyTransform=this._deriveApplyTransform(t)),this._vertexDimension=2,t.hasZ&&this._vertexDimension++,t.hasM&&this._vertexDimension++,t.geometryType){case"point":this.addCoordinate=(e,r,s)=>this.addCoordinatePoint(e,r,s),this.createGeometry=e=>this.createPointGeometry(e);break;case"polygon":this.addCoordinate=(e,r,s)=>this._addCoordinatePolygon(e,r,s),this.createGeometry=e=>this._createPolygonGeometry(e);break;case"polyline":this.addCoordinate=(e,r,s)=>this._addCoordinatePolyline(e,r,s),this.createGeometry=e=>this._createPolylineGeometry(e);break;case"multipoint":this.addCoordinate=(e,r,s)=>this._addCoordinateMultipoint(e,r,s),this.createGeometry=e=>this._createMultipointGeometry(e);break;case"mesh":case"extent":break;default:t.geometryType}}createFeature(){return this._lengths.length=0,this._currentLengthIndex=0,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0,new u(p(),null,new this._attributesConstructor)}allocateCoordinates(){let t=this._lengths.reduce((e,r)=>e+r,0);this._coordinateBuffer=new Float64Array(t*this._vertexDimension),this._coordinateBufferPtr=0}addLength(t,e){this._lengths.length===0&&(this._toAddInCurrentPath=e),this._lengths.push(e)}createPointGeometry(t){let e={type:"point",x:0,y:0,spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM};return e.hasZ&&(e.z=0),e.hasM&&(e.m=0),e}addCoordinatePoint(t,e,r){let s=this._transform?this._applyTransform(this._transform,e,r,0):e;if(s!=null)switch(r){case 0:t.x=s;break;case 1:t.y=s;break;case 2:t.hasZ?t.z=s:t.m=s;break;case 3:t.m=s}}_transformPathLikeValue(t,e){let r=0;return e<=1&&(r=this._previousCoordinate[e],this._previousCoordinate[e]+=t),this._transform?this._applyTransform(this._transform,t,e,r):t}_addCoordinatePolyline(t,e,r){this._dehydratedAddPointsCoordinate(t.paths,e,r)}_addCoordinatePolygon(t,e,r){this._dehydratedAddPointsCoordinate(t.rings,e,r)}_addCoordinateMultipoint(t,e,r){r===0&&t.points.push([]);let s=this._transformPathLikeValue(e,r);t.points[t.points.length-1].push(s)}_createPolygonGeometry(t){return{type:"polygon",rings:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createPolylineGeometry(t){return{type:"polyline",paths:[[]],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_createMultipointGeometry(t){return{type:"multipoint",points:[],spatialReference:t.spatialReference,hasZ:!!t.hasZ,hasM:!!t.hasM}}_dehydratedAddPointsCoordinate(t,e,r){r===0&&this._toAddInCurrentPath--==0&&(t.push([]),this._toAddInCurrentPath=this._lengths[++this._currentLengthIndex]-1,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0);let s=this._transformPathLikeValue(e,r),i=t[t.length-1],a=this._coordinateBuffer;if(a){if(r===0){let o=this._coordinateBufferPtr*Float64Array.BYTES_PER_ELEMENT;i.push(new Float64Array(a.buffer,o,this._vertexDimension))}a[this._coordinateBufferPtr++]=s}}_deriveApplyTransform(t){let{hasZ:e,hasM:r}=t;return e&&r?F:e?Z:r?R:y}};var d=class{_parseFeatureQuery(t){let e=new c(t.options),r=A(t.buffer,e),s=b(g({},r),{spatialReference:r.spatialReference?.toJSON(),fields:r.fields?r.fields.map(i=>i.toJSON()):void 0,missingAttributes:e.missingAttributes});return Promise.resolve(s)}};function bt(){return new d}export{bt as default};
